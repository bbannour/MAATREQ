@startuml
hide empty description
state Processes #Cyan {

	state "Process : **main**" as main #Beige
	main: 1 | call( Proc_R0 )

	main -down[hidden]-> Proc_R0

	state "Process : **Proc_R0**" as Proc_R0 #Beige
	Proc_R0: 1 | alt invariant( [] ~> true )
	Proc_R0: 2 | 	[ true ] / init
	Proc_R0: 3 | 	call( PostProc_R0 )

	Proc_R0 -down[hidden]-> PostProc_R0

	state "Process : **PostProc_R0**" as PostProc_R0 #Beige
	PostProc_R0: 1 | call( Proc_R1 )

	PostProc_R0 -down[hidden]-> Proc_R1

	state "Process : **Proc_R1**" as Proc_R1 #Beige
	Proc_R1: 1 | alt invariant( [] ~> true )
	Proc_R1: 2 | 	[ true ] / the set button is pressed
	Proc_R1: 3 | 	alt invariant( [clock] ~> clock<=60 )
	Proc_R1: 4 | 		[ clock==60 ] / activate the alarm
	Proc_R1: 5 | 		call( PostProc_R1 )

	Proc_R1 -down[hidden]-> PostProc_R1

	state "Process : **PostProc_R1**" as PostProc_R1 #Beige
	PostProc_R1: 1 | call( Proc_R2 )

	PostProc_R1 -down[hidden]-> Proc_R2

	state "Process : **Proc_R2**" as Proc_R2 #Beige
	Proc_R2: 1 | alt invariant( [] ~> true )
	Proc_R2: 2 | 	[ true ] / motion is detected
	Proc_R2: 3 | 	alt invariant( [clock] ~> clock<=0 )
	Proc_R2: 4 | 		[ clock==0 ] / emit a tone
	Proc_R2: 5 | 		call( PostProc_R2 )

	Proc_R2 -down[hidden]-> PostProc_R2

	state "Process : **PostProc_R2**" as PostProc_R2 #Beige
	PostProc_R2: 1 | par sync [the alarm is disarmed]
	PostProc_R2: 2 | 	alt invariant( [R3_x_resp] ~> R3_x_resp<=300 / start time period within 0 to 300 )
	PostProc_R2: 3 | 		[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
	PostProc_R2: 4 | 		call( PostProc_R3 )
	PostProc_R2: 5 | 	++
	PostProc_R2: 6 | 		[ R3_x_resp==300 ] / deadline at 300
	PostProc_R2: 7 | 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
	PostProc_R2: 8 | 			[ clock==0 ] / turn off the tone
	PostProc_R2: 9 | 			call( PostProc_R5 )
	PostProc_R2: 10 | &&
	PostProc_R2: 11 | 	alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
	PostProc_R2: 12 | 		[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
	PostProc_R2: 13 | 		call( PostProc_R7 )
	PostProc_R2: 14 | 	++
	PostProc_R2: 15 | 		[ R7_x_resp==60 ] / deadline at 60
	PostProc_R2: 16 | 		alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
	PostProc_R2: 17 | 			[ clock==0 ] / alert the emergency center
	PostProc_R2: 18 | 			call( PostProc_R9 )

	PostProc_R2 -down[hidden]-> Proc_R3

	state "Process : **Proc_R3**" as Proc_R3 #Beige
	Proc_R3: 1 | alt invariant( [R3_x_resp] ~> R3_x_resp<=300 / start time period within 0 to 300 )
	Proc_R3: 2 | 	[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
	Proc_R3: 3 | 	call( PostProc_R3 )
	Proc_R3: 4 | ++
	Proc_R3: 5 | 	[ R3_x_resp==300 ] / deadline at 300
	Proc_R3: 6 | 	alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
	Proc_R3: 7 | 		[ clock==0 ] / turn off the tone
	Proc_R3: 8 | 		call( PostProc_R5 )

	Proc_R3 -down[hidden]-> PostProc_R3

	state "Process : **PostProc_R3**" as PostProc_R3 #Beige
	PostProc_R3: 1 | call( Proc_R4 )

	PostProc_R3 -down[hidden]-> Proc_R4

	state "Process : **Proc_R4**" as Proc_R4 #Beige
	Proc_R4: 1 | alt invariant( [] ~> R3_x_resp<=300 )
	Proc_R4: 2 | 	[ true ] / the alarm is disarmed
	Proc_R4: 3 | 	alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
	Proc_R4: 4 | 		[ clock==0 ] / turn off the tone
	Proc_R4: 5 | 		call( PostProc_R4 )

	Proc_R4 -down[hidden]-> PostProc_R4

	state "Process : **PostProc_R4**" as PostProc_R4 #Beige
	PostProc_R4: 1 | call( Proc_R1 )

	PostProc_R4 -down[hidden]-> Proc_R5

	state "Process : **Proc_R5**" as Proc_R5 #Beige
	Proc_R5: 1 | alt invariant( [] ~> R3_x_resp<=300 )
	Proc_R5: 2 | 	[ R3_x_resp==300 ] / deadline at 300
	Proc_R5: 3 | 	alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
	Proc_R5: 4 | 		[ clock==0 ] / turn off the tone
	Proc_R5: 5 | 		call( PostProc_R5 )

	Proc_R5 -down[hidden]-> PostProc_R5

	state "Process : **PostProc_R5**" as PostProc_R5 #Beige
	PostProc_R5: 1 | NIL

	PostProc_R5 -down[hidden]-> Proc_R7

	state "Process : **Proc_R7**" as Proc_R7 #Beige
	Proc_R7: 1 | alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
	Proc_R7: 2 | 	[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
	Proc_R7: 3 | 	call( PostProc_R7 )
	Proc_R7: 4 | ++
	Proc_R7: 5 | 	[ R7_x_resp==60 ] / deadline at 60
	Proc_R7: 6 | 	alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
	Proc_R7: 7 | 		[ clock==0 ] / alert the emergency center
	Proc_R7: 8 | 		call( PostProc_R9 )

	Proc_R7 -down[hidden]-> PostProc_R7

	state "Process : **PostProc_R7**" as PostProc_R7 #Beige
	PostProc_R7: 1 | call( Proc_R8 )

	PostProc_R7 -down[hidden]-> Proc_R8

	state "Process : **Proc_R8**" as Proc_R8 #Beige
	Proc_R8: 1 | alt invariant( [] ~> R7_x_resp<=60 )
	Proc_R8: 2 | 	[ true ] / the alarm is disarmed
	Proc_R8: 3 | 	call( PostProc_R8 )

	Proc_R8 -down[hidden]-> PostProc_R8

	state "Process : **PostProc_R8**" as PostProc_R8 #Beige
	PostProc_R8: 1 | NIL

	PostProc_R8 -down[hidden]-> Proc_R9

	state "Process : **Proc_R9**" as Proc_R9 #Beige
	Proc_R9: 1 | alt invariant( [] ~> R7_x_resp<=60 )
	Proc_R9: 2 | 	[ R7_x_resp==60 ] / deadline at 60
	Proc_R9: 3 | 	alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
	Proc_R9: 4 | 		[ clock==0 ] / alert the emergency center
	Proc_R9: 5 | 		call( PostProc_R9 )

	Proc_R9 -down[hidden]-> PostProc_R9

	state "Process : **PostProc_R9**" as PostProc_R9 #Beige
	PostProc_R9: 1 | call( Proc_R7 )

	
	[*] -down-> main : **main**
}

state "EC< id : 0 , H : 0 , step : 1 >" as EC_0 #LightBlue
EC_0: 1: call( Proc_R0 )

EC_0 : DBM: R7_x_resp=R3_x_resp, R7_x_resp=clock, R3_x_resp=clock,
EC_0  --> EC_1 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = Proc_R0

state "EC< id : 1 , H : 1 , step : 0 >" as EC_1 #Pink
EC_1: 1: alt invariant( [] ~> true )
EC_1: 2: 	[ true ] / init
EC_1: 3: 	call( PostProc_R0 )

EC_1 : DBM: R7_x_resp=R3_x_resp, R7_x_resp=clock, R3_x_resp=clock,
EC_1  --> EC_3 : inv [] => [true]\lact [True] / META:TIME_ELAPSE

state "EC< id : 3 , H : 2 , step : 0 >" as EC_3 #Orange
EC_3: 1: alt invariant( [] ~> true )
EC_3: 2: 	[ true ] / init
EC_3: 3: 	call( PostProc_R0 )

EC_3 : DBM: R7_x_resp=R3_x_resp, R7_x_resp=clock, R3_x_resp=clock,
EC_3  --> EC_4 : inv [] => [true]\lact [true] / init

state "EC< id : 4 , H : 3 , step : 2 >" as EC_4 #LightBlue
EC_4: 1: call( PostProc_R0 )

EC_4 : DBM: R7_x_resp=R3_x_resp, R7_x_resp=clock, R3_x_resp=clock,
EC_4  --> EC_5 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R0, Proc_R1

state "EC< id : 5 , H : 4 , step : 0 >" as EC_5 #Pink
EC_5: 1: alt invariant( [] ~> true )
EC_5: 2: 	[ true ] / the set button is pressed
EC_5: 3: 	alt invariant( [clock] ~> clock<=60 )
EC_5: 4: 		[ clock==60 ] / activate the alarm
EC_5: 5: 		call( PostProc_R1 )

EC_5 : DBM: R7_x_resp=R3_x_resp, R7_x_resp=clock, R3_x_resp=clock,
EC_5  --> EC_7 : inv [] => [true]\lact [True] / META:TIME_ELAPSE

state "EC< id : 7 , H : 5 , step : 0 >" as EC_7 #Orange
EC_7: 1: alt invariant( [] ~> true )
EC_7: 2: 	[ true ] / the set button is pressed
EC_7: 3: 	alt invariant( [clock] ~> clock<=60 )
EC_7: 4: 		[ clock==60 ] / activate the alarm
EC_7: 5: 		call( PostProc_R1 )

EC_7 : DBM: R7_x_resp=R3_x_resp, R7_x_resp=clock, R3_x_resp=clock,
EC_7  --> EC_8 : inv [] => [true]\lact [true] / the set button is pressed

state "EC< id : 8 , H : 6 , step : 3 >" as EC_8 #LightBlue
EC_8: 1: alt invariant( [clock] ~> clock<=60 )
EC_8: 2: 	[ clock==60 ] / activate the alarm
EC_8: 3: 	call( PostProc_R1 )

EC_8 : DBM: R7_x_resp=R3_x_resp, R7_x_resp=clock, R3_x_resp=clock,
EC_8  --> EC_10 : inv [clock] => [clock<=60]\lact [True] / META:TIME_ELAPSE

state "EC< id : 10 , H : 7 , step : 0 >" as EC_10 #Orange
EC_10: 1: alt invariant( [clock] ~> clock<=60 )
EC_10: 2: 	[ clock==60 ] / activate the alarm
EC_10: 3: 	call( PostProc_R1 )

EC_10 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_10  --> EC_11 : inv [clock] => [clock<=60]\lact [clock==60] / activate the alarm

state "EC< id : 11 , H : 8 , step : 4 >" as EC_11 #LightBlue
EC_11: 1: call( PostProc_R1 )

EC_11 : DBM: R7_x_resp>=60, R3_x_resp>=60, clock=60, R7_x_resp=R3_x_resp,\l   clock-R7_x_resp<=0, clock-R3_x_resp<=0,
EC_11  --> EC_12 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R1, Proc_R2

state "EC< id : 12 , H : 9 , step : 0 >" as EC_12 #Pink
EC_12: 1: alt invariant( [] ~> true )
EC_12: 2: 	[ true ] / motion is detected
EC_12: 3: 	alt invariant( [clock] ~> clock<=0 )
EC_12: 4: 		[ clock==0 ] / emit a tone
EC_12: 5: 		call( PostProc_R2 )

EC_12 : DBM: R7_x_resp>=60, R3_x_resp>=60, clock=60, R7_x_resp=R3_x_resp,\l   clock-R7_x_resp<=0, clock-R3_x_resp<=0,
EC_12  --> EC_14 : inv [] => [true]\lact [True] / META:TIME_ELAPSE

state "EC< id : 14 , H : 10 , step : 0 >" as EC_14 #Orange
EC_14: 1: alt invariant( [] ~> true )
EC_14: 2: 	[ true ] / motion is detected
EC_14: 3: 	alt invariant( [clock] ~> clock<=0 )
EC_14: 4: 		[ clock==0 ] / emit a tone
EC_14: 5: 		call( PostProc_R2 )

EC_14 : DBM: R7_x_resp>=60, R3_x_resp>=60, clock>=60, R7_x_resp=R3_x_resp,\l   clock-R7_x_resp<=0, clock-R3_x_resp<=0,
EC_14  --> EC_15 : inv [] => [true]\lact [true] / motion is detected

state "EC< id : 15 , H : 11 , step : 5 >" as EC_15 #LightBlue
EC_15: 1: alt invariant( [clock] ~> clock<=0 )
EC_15: 2: 	[ clock==0 ] / emit a tone
EC_15: 3: 	call( PostProc_R2 )

EC_15 : DBM: R7_x_resp>=60, R3_x_resp>=60, clock>=60, R7_x_resp=R3_x_resp,\l   clock-R7_x_resp<=0, clock-R3_x_resp<=0,
EC_15  --> EC_17 : inv [clock] => [clock<=0]\lact [True] / META:TIME_ELAPSE

state "EC< id : 17 , H : 12 , step : 0 >" as EC_17 #Orange
EC_17: 1: alt invariant( [clock] ~> clock<=0 )
EC_17: 2: 	[ clock==0 ] / emit a tone
EC_17: 3: 	call( PostProc_R2 )

EC_17 : DBM: R7_x_resp>=60, R3_x_resp>=60, clock<=0, R7_x_resp=R3_x_resp,\l   clock-R7_x_resp<=-60, clock-R3_x_resp<=-60,
EC_17  --> EC_18 : inv [clock] => [clock<=0]\lact [clock==0] / emit a tone

state "EC< id : 18 , H : 13 , step : 6 >" as EC_18 #LightBlue
EC_18: 1: call( PostProc_R2 )

EC_18 : DBM: R7_x_resp>=60, R3_x_resp>=60, clock<=0, R7_x_resp=R3_x_resp,\l   clock-R7_x_resp<=-60, clock-R3_x_resp<=-60,
EC_18  --> EC_19 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R2

state "EC< id : 19 , H : 14 , step : 0 >" as EC_19 #Pink
EC_19: 1: par sync [the alarm is disarmed]
EC_19: 2: 	alt invariant( [R3_x_resp] ~> R3_x_resp<=300 / start time period within 0 to 300 )
EC_19: 3: 		[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_19: 4: 		call( PostProc_R3 )
EC_19: 5: 	++
EC_19: 6: 		[ R3_x_resp==300 ] / deadline at 300
EC_19: 7: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_19: 8: 			[ clock==0 ] / turn off the tone
EC_19: 9: 			call( PostProc_R5 )
EC_19: 10: &&
EC_19: 11: 	alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_19: 12: 		[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_19: 13: 		call( PostProc_R7 )
EC_19: 14: 	++
EC_19: 15: 		[ R7_x_resp==60 ] / deadline at 60
EC_19: 16: 		alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_19: 17: 			[ clock==0 ] / alert the emergency center
EC_19: 18: 			call( PostProc_R9 )

EC_19 : DBM: R7_x_resp>=60, R3_x_resp>=60, clock<=0, R7_x_resp=R3_x_resp,\l   clock-R7_x_resp<=-60, clock-R3_x_resp<=-60,
EC_19  --> EC_21 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60]\lact [True] / META:[start time period within 0 to 300, start time period within 0 to 60]

state "EC< id : 21 , H : 15 , step : 0 >" as EC_21 #Orange
EC_21: 1: par sync [the alarm is disarmed]
EC_21: 2: 	alt invariant( [R3_x_resp] ~> R3_x_resp<=300 / start time period within 0 to 300 )
EC_21: 3: 		[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_21: 4: 		call( PostProc_R3 )
EC_21: 5: 	++
EC_21: 6: 		[ R3_x_resp==300 ] / deadline at 300
EC_21: 7: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_21: 8: 			[ clock==0 ] / turn off the tone
EC_21: 9: 			call( PostProc_R5 )
EC_21: 10: &&
EC_21: 11: 	alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_21: 12: 		[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_21: 13: 		call( PostProc_R7 )
EC_21: 14: 	++
EC_21: 15: 		[ R7_x_resp==60 ] / deadline at 60
EC_21: 16: 		alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_21: 17: 			[ clock==0 ] / alert the emergency center
EC_21: 18: 			call( PostProc_R9 )

EC_21 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_21  --> EC_22 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 22 , H : 16 , step : 7 >" as EC_22 #LightBlue
EC_22: 1: par sync [the alarm is disarmed]
EC_22: 2: 	call( PostProc_R3 )
EC_22: 3: &&
EC_22: 4: 	alt invariant( [] ~> R7_x_resp<=60 )
EC_22: 5: 		[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_22: 6: 		call( PostProc_R7 )
EC_22: 7: 	++
EC_22: 8: 		[ R7_x_resp==60 ] / deadline at 60
EC_22: 9: 		alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_22: 10: 			[ clock==0 ] / alert the emergency center
EC_22: 11: 			call( PostProc_R9 )

EC_22 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_22  --> EC_26 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 26 , H : 17 , step : 0 >" as EC_26 #Pink
EC_26: 1: par sync [the alarm is disarmed]
EC_26: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_26: 3: 		[ true ] / the alarm is disarmed
EC_26: 4: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_26: 5: 			[ clock==0 ] / turn off the tone
EC_26: 6: 			call( PostProc_R4 )
EC_26: 7: &&
EC_26: 8: 	alt invariant( [] ~> R7_x_resp<=60 )
EC_26: 9: 		[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_26: 10: 		call( PostProc_R7 )
EC_26: 11: 	++
EC_26: 12: 		[ R7_x_resp==60 ] / deadline at 60
EC_26: 13: 		alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_26: 14: 			[ clock==0 ] / alert the emergency center
EC_26: 15: 			call( PostProc_R9 )

EC_26 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_26  --> EC_28 : inv [] => [R3_x_resp<=300, R7_x_resp<=60]\lact [True] / META:TIME_ELAPSE

state "EC< id : 28 , H : 18 , step : 0 >" as EC_28 #Orange
EC_28: 1: par sync [the alarm is disarmed]
EC_28: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_28: 3: 		[ true ] / the alarm is disarmed
EC_28: 4: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_28: 5: 			[ clock==0 ] / turn off the tone
EC_28: 6: 			call( PostProc_R4 )
EC_28: 7: &&
EC_28: 8: 	alt invariant( [] ~> R7_x_resp<=60 )
EC_28: 9: 		[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_28: 10: 		call( PostProc_R7 )
EC_28: 11: 	++
EC_28: 12: 		[ R7_x_resp==60 ] / deadline at 60
EC_28: 13: 		alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_28: 14: 			[ clock==0 ] / alert the emergency center
EC_28: 15: 			call( PostProc_R9 )

EC_28 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_28  --> EC_29 : inv [] => [R3_x_resp<=300, R7_x_resp<=60]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 29 , H : 19 , step : 8 >" as EC_29 #LightBlue
EC_29: 1: par sync [the alarm is disarmed]
EC_29: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_29: 3: 		[ true ] / the alarm is disarmed
EC_29: 4: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_29: 5: 			[ clock==0 ] / turn off the tone
EC_29: 6: 			call( PostProc_R4 )
EC_29: 7: &&
EC_29: 8: 	call( PostProc_R7 )

EC_29 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_29  --> EC_31 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 31 , H : 20 , step : 0 >" as EC_31 #Pink
EC_31: 1: par sync [the alarm is disarmed]
EC_31: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_31: 3: 		[ true ] / the alarm is disarmed
EC_31: 4: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_31: 5: 			[ clock==0 ] / turn off the tone
EC_31: 6: 			call( PostProc_R4 )
EC_31: 7: &&
EC_31: 8: 	alt invariant( [] ~> R7_x_resp<=60 )
EC_31: 9: 		[ true ] / the alarm is disarmed
EC_31: 10: 		call( PostProc_R8 )

EC_31 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_31  --> EC_33 : inv [] => [R3_x_resp<=300, R7_x_resp<=60]\lact [True] / META:TIME_ELAPSE

state "EC< id : 33 , H : 21 , step : 0 >" as EC_33 #Orange
EC_33: 1: par sync [the alarm is disarmed]
EC_33: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_33: 3: 		[ true ] / the alarm is disarmed
EC_33: 4: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_33: 5: 			[ clock==0 ] / turn off the tone
EC_33: 6: 			call( PostProc_R4 )
EC_33: 7: &&
EC_33: 8: 	alt invariant( [] ~> R7_x_resp<=60 )
EC_33: 9: 		[ true ] / the alarm is disarmed
EC_33: 10: 		call( PostProc_R8 )

EC_33 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_33  --> EC_34 : inv [] => [R3_x_resp<=300, R7_x_resp<=60]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 34 , H : 22 , step : 9 >" as EC_34 #LightBlue
EC_34: 1: par sync [the alarm is disarmed]
EC_34: 2: 	alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_34: 3: 		[ clock==0 ] / turn off the tone
EC_34: 4: 		call( PostProc_R4 )
EC_34: 5: &&
EC_34: 6: 	call( PostProc_R8 )

EC_34 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_34  --> EC_35 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 35 , H : 23 , step : 0 >" as EC_35 #Pink
EC_35: 1: par sync [the alarm is disarmed]
EC_35: 2: 	alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_35: 3: 		[ clock==0 ] / turn off the tone
EC_35: 4: 		call( PostProc_R4 )
EC_35: 5: &&
EC_35: 6: 	NIL

EC_35 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_35  --> EC_37 : inv [clock] => [clock<=0, R3_x_resp<=300, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 37 , H : 24 , step : 0 >" as EC_37 #Orange
EC_37: 1: par sync [the alarm is disarmed]
EC_37: 2: 	alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_37: 3: 		[ clock==0 ] / turn off the tone
EC_37: 4: 		call( PostProc_R4 )
EC_37: 5: &&
EC_37: 6: 	NIL

EC_37 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_37  --> EC_38 : inv [clock] => [clock<=0, R3_x_resp<=300, True]\lact [clock==0] / turn off the tone

state "EC< id : 38 , H : 25 , step : 10 >" as EC_38 #LightBlue
EC_38: 1: par
EC_38: 2: 	call( PostProc_R4 )
EC_38: 3: ||
EC_38: 4: 	NIL

EC_38 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_38  --> EC_39 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R4, Proc_R1

state "EC< id : 39 , H : 26 , step : 0 >" as EC_39 #Pink
EC_39: 1: par
EC_39: 2: 	alt invariant( [] ~> true )
EC_39: 3: 		[ true ] / the set button is pressed
EC_39: 4: 		alt invariant( [clock] ~> clock<=60 )
EC_39: 5: 			[ clock==60 ] / activate the alarm
EC_39: 6: 			call( PostProc_R1 )
EC_39: 7: ||
EC_39: 8: 	NIL

EC_39 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_39  --> EC_41 : inv [] => [true, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 41 , H : 27 , step : 0 >" as EC_41 #Orange
EC_41: 1: par
EC_41: 2: 	alt invariant( [] ~> true )
EC_41: 3: 		[ true ] / the set button is pressed
EC_41: 4: 		alt invariant( [clock] ~> clock<=60 )
EC_41: 5: 			[ clock==60 ] / activate the alarm
EC_41: 6: 			call( PostProc_R1 )
EC_41: 7: ||
EC_41: 8: 	NIL

EC_41 : DBM: R7_x_resp=R3_x_resp, R7_x_resp-clock<=60, clock-R7_x_resp<=0,\l   R3_x_resp-clock<=60, clock-R3_x_resp<=0,
EC_41  --> EC_42 : inv [] => [true, True]\lact [true] / the set button is pressed

state "EC< id : 42 , H : 28 , step : 11 >" as EC_42 #LightBlue
EC_42: 1: par
EC_42: 2: 	alt invariant( [clock] ~> clock<=60 )
EC_42: 3: 		[ clock==60 ] / activate the alarm
EC_42: 4: 		call( PostProc_R1 )
EC_42: 5: ||
EC_42: 6: 	NIL

EC_42 : DBM: R7_x_resp=R3_x_resp, R7_x_resp-clock<=60, clock-R7_x_resp<=0,\l   R3_x_resp-clock<=60, clock-R3_x_resp<=0,
EC_42  --> EC_44 : inv [clock] => [clock<=60, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 44 , H : 29 , step : 0 >" as EC_44 #Orange
EC_44: 1: par
EC_44: 2: 	alt invariant( [clock] ~> clock<=60 )
EC_44: 3: 		[ clock==60 ] / activate the alarm
EC_44: 4: 		call( PostProc_R1 )
EC_44: 5: ||
EC_44: 6: 	NIL

EC_44 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_44  --> EC_45 : \lact [True] / META:REDUNDANCE:EC< id : 10 , H : 7 >

state "EC< id : 45 , H : 30 , step : 0 >" as EC_45 #Green
EC_45: 1: par
EC_45: 2: 	alt invariant( [clock] ~> clock<=60 )
EC_45: 3: 		[ clock==60 ] / activate the alarm
EC_45: 4: 		call( PostProc_R1 )
EC_45: 5: ||
EC_45: 6: 	NIL

EC_45 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_28  --> EC_30 : inv [] => [R3_x_resp<=300, R7_x_resp<=60]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 30 , H : 19 , step : 12 >" as EC_30 #LightBlue
EC_30: 1: par sync [the alarm is disarmed]
EC_30: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_30: 3: 		[ true ] / the alarm is disarmed
EC_30: 4: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_30: 5: 			[ clock==0 ] / turn off the tone
EC_30: 6: 			call( PostProc_R4 )
EC_30: 7: &&
EC_30: 8: 	alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_30: 9: 		[ clock==0 ] / alert the emergency center
EC_30: 10: 		call( PostProc_R9 )

EC_30 : DBM: R7_x_resp=60, R3_x_resp=60, clock=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_30  --> EC_47 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60]\lact [True] / META:TIME_ELAPSE

state "EC< id : 47 , H : 20 , step : 0 >" as EC_47 #Orange
EC_47: 1: par sync [the alarm is disarmed]
EC_47: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_47: 3: 		[ true ] / the alarm is disarmed
EC_47: 4: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_47: 5: 			[ clock==0 ] / turn off the tone
EC_47: 6: 			call( PostProc_R4 )
EC_47: 7: &&
EC_47: 8: 	alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_47: 9: 		[ clock==0 ] / alert the emergency center
EC_47: 10: 		call( PostProc_R9 )

EC_47 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_47  --> EC_48 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60]\lact [clock==0] / alert the emergency center

state "EC< id : 48 , H : 21 , step : 13 >" as EC_48 #LightBlue
EC_48: 1: par sync [the alarm is disarmed]
EC_48: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_48: 3: 		[ true ] / the alarm is disarmed
EC_48: 4: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_48: 5: 			[ clock==0 ] / turn off the tone
EC_48: 6: 			call( PostProc_R4 )
EC_48: 7: &&
EC_48: 8: 	call( PostProc_R9 )

EC_48 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_48  --> EC_49 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 49 , H : 22 , step : 0 >" as EC_49 #Pink
EC_49: 1: par sync [the alarm is disarmed]
EC_49: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_49: 3: 		[ true ] / the alarm is disarmed
EC_49: 4: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_49: 5: 			[ clock==0 ] / turn off the tone
EC_49: 6: 			call( PostProc_R4 )
EC_49: 7: &&
EC_49: 8: 	alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_49: 9: 		[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_49: 10: 		call( PostProc_R7 )
EC_49: 11: 	++
EC_49: 12: 		[ R7_x_resp==60 ] / deadline at 60
EC_49: 13: 		alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_49: 14: 			[ clock==0 ] / alert the emergency center
EC_49: 15: 			call( PostProc_R9 )

EC_49 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_49  --> EC_51 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60]\lact [True] / META:start time period within 0 to 60

state "EC< id : 51 , H : 23 , step : 0 >" as EC_51 #Orange
EC_51: 1: par sync [the alarm is disarmed]
EC_51: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_51: 3: 		[ true ] / the alarm is disarmed
EC_51: 4: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_51: 5: 			[ clock==0 ] / turn off the tone
EC_51: 6: 			call( PostProc_R4 )
EC_51: 7: &&
EC_51: 8: 	alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_51: 9: 		[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_51: 10: 		call( PostProc_R7 )
EC_51: 11: 	++
EC_51: 12: 		[ R7_x_resp==60 ] / deadline at 60
EC_51: 13: 		alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_51: 14: 			[ clock==0 ] / alert the emergency center
EC_51: 15: 			call( PostProc_R9 )

EC_51 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_51  --> EC_52 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 52 , H : 24 , step : 14 >" as EC_52 #LightBlue
EC_52: 1: par sync [the alarm is disarmed]
EC_52: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_52: 3: 		[ true ] / the alarm is disarmed
EC_52: 4: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_52: 5: 			[ clock==0 ] / turn off the tone
EC_52: 6: 			call( PostProc_R4 )
EC_52: 7: &&
EC_52: 8: 	call( PostProc_R7 )

EC_52 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_52  --> EC_54 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 54 , H : 25 , step : 0 >" as EC_54 #Pink
EC_54: 1: par sync [the alarm is disarmed]
EC_54: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_54: 3: 		[ true ] / the alarm is disarmed
EC_54: 4: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_54: 5: 			[ clock==0 ] / turn off the tone
EC_54: 6: 			call( PostProc_R4 )
EC_54: 7: &&
EC_54: 8: 	alt invariant( [] ~> R7_x_resp<=60 )
EC_54: 9: 		[ true ] / the alarm is disarmed
EC_54: 10: 		call( PostProc_R8 )

EC_54 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_54  --> EC_56 : inv [] => [R3_x_resp<=300, R7_x_resp<=60]\lact [True] / META:TIME_ELAPSE

state "EC< id : 56 , H : 26 , step : 0 >" as EC_56 #Orange
EC_56: 1: par sync [the alarm is disarmed]
EC_56: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_56: 3: 		[ true ] / the alarm is disarmed
EC_56: 4: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_56: 5: 			[ clock==0 ] / turn off the tone
EC_56: 6: 			call( PostProc_R4 )
EC_56: 7: &&
EC_56: 8: 	alt invariant( [] ~> R7_x_resp<=60 )
EC_56: 9: 		[ true ] / the alarm is disarmed
EC_56: 10: 		call( PostProc_R8 )

EC_56 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_56  --> EC_57 : inv [] => [R3_x_resp<=300, R7_x_resp<=60]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 57 , H : 27 , step : 15 >" as EC_57 #LightBlue
EC_57: 1: par sync [the alarm is disarmed]
EC_57: 2: 	alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_57: 3: 		[ clock==0 ] / turn off the tone
EC_57: 4: 		call( PostProc_R4 )
EC_57: 5: &&
EC_57: 6: 	call( PostProc_R8 )

EC_57 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_57  --> EC_58 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 58 , H : 28 , step : 0 >" as EC_58 #Pink
EC_58: 1: par sync [the alarm is disarmed]
EC_58: 2: 	alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_58: 3: 		[ clock==0 ] / turn off the tone
EC_58: 4: 		call( PostProc_R4 )
EC_58: 5: &&
EC_58: 6: 	NIL

EC_58 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_58  --> EC_60 : inv [clock] => [clock<=0, R3_x_resp<=300, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 60 , H : 29 , step : 0 >" as EC_60 #Orange
EC_60: 1: par sync [the alarm is disarmed]
EC_60: 2: 	alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_60: 3: 		[ clock==0 ] / turn off the tone
EC_60: 4: 		call( PostProc_R4 )
EC_60: 5: &&
EC_60: 6: 	NIL

EC_60 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_60  --> EC_61 : inv [clock] => [clock<=0, R3_x_resp<=300, True]\lact [clock==0] / turn off the tone

state "EC< id : 61 , H : 30 , step : 16 >" as EC_61 #LightBlue
EC_61: 1: par
EC_61: 2: 	call( PostProc_R4 )
EC_61: 3: ||
EC_61: 4: 	NIL

EC_61 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_61  --> EC_62 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R4, Proc_R1

state "EC< id : 62 , H : 31 , step : 0 >" as EC_62 #Pink
EC_62: 1: par
EC_62: 2: 	alt invariant( [] ~> true )
EC_62: 3: 		[ true ] / the set button is pressed
EC_62: 4: 		alt invariant( [clock] ~> clock<=60 )
EC_62: 5: 			[ clock==60 ] / activate the alarm
EC_62: 6: 			call( PostProc_R1 )
EC_62: 7: ||
EC_62: 8: 	NIL

EC_62 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_62  --> EC_64 : inv [] => [true, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 64 , H : 32 , step : 0 >" as EC_64 #Orange
EC_64: 1: par
EC_64: 2: 	alt invariant( [] ~> true )
EC_64: 3: 		[ true ] / the set button is pressed
EC_64: 4: 		alt invariant( [clock] ~> clock<=60 )
EC_64: 5: 			[ clock==60 ] / activate the alarm
EC_64: 6: 			call( PostProc_R1 )
EC_64: 7: ||
EC_64: 8: 	NIL

EC_64 : DBM: R3_x_resp>=60, R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=120,\l   clock-R3_x_resp<=-60,
EC_64  --> EC_65 : inv [] => [true, True]\lact [true] / the set button is pressed

state "EC< id : 65 , H : 33 , step : 17 >" as EC_65 #LightBlue
EC_65: 1: par
EC_65: 2: 	alt invariant( [clock] ~> clock<=60 )
EC_65: 3: 		[ clock==60 ] / activate the alarm
EC_65: 4: 		call( PostProc_R1 )
EC_65: 5: ||
EC_65: 6: 	NIL

EC_65 : DBM: R3_x_resp>=60, R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=120,\l   clock-R3_x_resp<=-60,
EC_65  --> EC_67 : inv [clock] => [clock<=60, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 67 , H : 34 , step : 0 >" as EC_67 #Orange
EC_67: 1: par
EC_67: 2: 	alt invariant( [clock] ~> clock<=60 )
EC_67: 3: 		[ clock==60 ] / activate the alarm
EC_67: 4: 		call( PostProc_R1 )
EC_67: 5: ||
EC_67: 6: 	NIL

EC_67 : DBM: R3_x_resp>=60, clock<=60, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-60,
EC_67  --> EC_68 : inv [clock] => [clock<=60, True]\lact [clock==60] / activate the alarm

state "EC< id : 68 , H : 35 , step : 18 >" as EC_68 #LightBlue
EC_68: 1: par
EC_68: 2: 	call( PostProc_R1 )
EC_68: 3: ||
EC_68: 4: 	NIL

EC_68 : DBM: R7_x_resp>=60, R3_x_resp>=120, clock=60, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-60,
EC_68  --> EC_69 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R1, Proc_R2

state "EC< id : 69 , H : 36 , step : 0 >" as EC_69 #Pink
EC_69: 1: par
EC_69: 2: 	alt invariant( [] ~> true )
EC_69: 3: 		[ true ] / motion is detected
EC_69: 4: 		alt invariant( [clock] ~> clock<=0 )
EC_69: 5: 			[ clock==0 ] / emit a tone
EC_69: 6: 			call( PostProc_R2 )
EC_69: 7: ||
EC_69: 8: 	NIL

EC_69 : DBM: R7_x_resp>=60, R3_x_resp>=120, clock=60, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-60,
EC_69  --> EC_71 : inv [] => [true, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 71 , H : 37 , step : 0 >" as EC_71 #Orange
EC_71: 1: par
EC_71: 2: 	alt invariant( [] ~> true )
EC_71: 3: 		[ true ] / motion is detected
EC_71: 4: 		alt invariant( [clock] ~> clock<=0 )
EC_71: 5: 			[ clock==0 ] / emit a tone
EC_71: 6: 			call( PostProc_R2 )
EC_71: 7: ||
EC_71: 8: 	NIL

EC_71 : DBM: R7_x_resp>=60, R3_x_resp>=120, clock>=60, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-60,
EC_71  --> EC_72 : inv [] => [true, True]\lact [true] / motion is detected

state "EC< id : 72 , H : 38 , step : 19 >" as EC_72 #LightBlue
EC_72: 1: par
EC_72: 2: 	alt invariant( [clock] ~> clock<=0 )
EC_72: 3: 		[ clock==0 ] / emit a tone
EC_72: 4: 		call( PostProc_R2 )
EC_72: 5: ||
EC_72: 6: 	NIL

EC_72 : DBM: R7_x_resp>=60, R3_x_resp>=120, clock>=60, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-60,
EC_72  --> EC_74 : inv [clock] => [clock<=0, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 74 , H : 39 , step : 0 >" as EC_74 #Orange
EC_74: 1: par
EC_74: 2: 	alt invariant( [clock] ~> clock<=0 )
EC_74: 3: 		[ clock==0 ] / emit a tone
EC_74: 4: 		call( PostProc_R2 )
EC_74: 5: ||
EC_74: 6: 	NIL

EC_74 : DBM: R7_x_resp>=60, R3_x_resp>=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-120,
EC_74  --> EC_75 : inv [clock] => [clock<=0, True]\lact [clock==0] / emit a tone

state "EC< id : 75 , H : 40 , step : 20 >" as EC_75 #LightBlue
EC_75: 1: par
EC_75: 2: 	call( PostProc_R2 )
EC_75: 3: ||
EC_75: 4: 	NIL

EC_75 : DBM: R7_x_resp>=60, R3_x_resp>=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-120,
EC_75  --> EC_76 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R2

state "EC< id : 76 , H : 41 , step : 0 >" as EC_76 #Pink
EC_76: 1: par
EC_76: 2: 	par sync [the alarm is disarmed]
EC_76: 3: 		alt invariant( [R3_x_resp] ~> R3_x_resp<=300 / start time period within 0 to 300 )
EC_76: 4: 			[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_76: 5: 			call( PostProc_R3 )
EC_76: 6: 		++
EC_76: 7: 			[ R3_x_resp==300 ] / deadline at 300
EC_76: 8: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_76: 9: 				[ clock==0 ] / turn off the tone
EC_76: 10: 				call( PostProc_R5 )
EC_76: 11: 	&&
EC_76: 12: 		alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_76: 13: 			[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_76: 14: 			call( PostProc_R7 )
EC_76: 15: 		++
EC_76: 16: 			[ R7_x_resp==60 ] / deadline at 60
EC_76: 17: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_76: 18: 				[ clock==0 ] / alert the emergency center
EC_76: 19: 				call( PostProc_R9 )
EC_76: 20: ||
EC_76: 21: 	NIL

EC_76 : DBM: R7_x_resp>=60, R3_x_resp>=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-120,
EC_76  --> EC_78 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [True] / META:[start time period within 0 to 300, start time period within 0 to 60]

state "EC< id : 78 , H : 42 , step : 0 >" as EC_78 #Orange
EC_78: 1: par
EC_78: 2: 	par sync [the alarm is disarmed]
EC_78: 3: 		alt invariant( [R3_x_resp] ~> R3_x_resp<=300 / start time period within 0 to 300 )
EC_78: 4: 			[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_78: 5: 			call( PostProc_R3 )
EC_78: 6: 		++
EC_78: 7: 			[ R3_x_resp==300 ] / deadline at 300
EC_78: 8: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_78: 9: 				[ clock==0 ] / turn off the tone
EC_78: 10: 				call( PostProc_R5 )
EC_78: 11: 	&&
EC_78: 12: 		alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_78: 13: 			[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_78: 14: 			call( PostProc_R7 )
EC_78: 15: 		++
EC_78: 16: 			[ R7_x_resp==60 ] / deadline at 60
EC_78: 17: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_78: 18: 				[ clock==0 ] / alert the emergency center
EC_78: 19: 				call( PostProc_R9 )
EC_78: 20: ||
EC_78: 21: 	NIL

EC_78 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_78  --> EC_79 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 79 , H : 43 , step : 21 >" as EC_79 #LightBlue
EC_79: 1: par
EC_79: 2: 	par sync [the alarm is disarmed]
EC_79: 3: 		call( PostProc_R3 )
EC_79: 4: 	&&
EC_79: 5: 		alt invariant( [] ~> R7_x_resp<=60 )
EC_79: 6: 			[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_79: 7: 			call( PostProc_R7 )
EC_79: 8: 		++
EC_79: 9: 			[ R7_x_resp==60 ] / deadline at 60
EC_79: 10: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_79: 11: 				[ clock==0 ] / alert the emergency center
EC_79: 12: 				call( PostProc_R9 )
EC_79: 13: ||
EC_79: 14: 	NIL

EC_79 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_79  --> EC_83 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 83 , H : 44 , step : 0 >" as EC_83 #Pink
EC_83: 1: par
EC_83: 2: 	par sync [the alarm is disarmed]
EC_83: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_83: 4: 			[ true ] / the alarm is disarmed
EC_83: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_83: 6: 				[ clock==0 ] / turn off the tone
EC_83: 7: 				call( PostProc_R4 )
EC_83: 8: 	&&
EC_83: 9: 		alt invariant( [] ~> R7_x_resp<=60 )
EC_83: 10: 			[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_83: 11: 			call( PostProc_R7 )
EC_83: 12: 		++
EC_83: 13: 			[ R7_x_resp==60 ] / deadline at 60
EC_83: 14: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_83: 15: 				[ clock==0 ] / alert the emergency center
EC_83: 16: 				call( PostProc_R9 )
EC_83: 17: ||
EC_83: 18: 	NIL

EC_83 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_83  --> EC_85 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 85 , H : 45 , step : 0 >" as EC_85 #Orange
EC_85: 1: par
EC_85: 2: 	par sync [the alarm is disarmed]
EC_85: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_85: 4: 			[ true ] / the alarm is disarmed
EC_85: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_85: 6: 				[ clock==0 ] / turn off the tone
EC_85: 7: 				call( PostProc_R4 )
EC_85: 8: 	&&
EC_85: 9: 		alt invariant( [] ~> R7_x_resp<=60 )
EC_85: 10: 			[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_85: 11: 			call( PostProc_R7 )
EC_85: 12: 		++
EC_85: 13: 			[ R7_x_resp==60 ] / deadline at 60
EC_85: 14: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_85: 15: 				[ clock==0 ] / alert the emergency center
EC_85: 16: 				call( PostProc_R9 )
EC_85: 17: ||
EC_85: 18: 	NIL

EC_85 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_85  --> EC_86 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 86 , H : 46 , step : 22 >" as EC_86 #LightBlue
EC_86: 1: par
EC_86: 2: 	par sync [the alarm is disarmed]
EC_86: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_86: 4: 			[ true ] / the alarm is disarmed
EC_86: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_86: 6: 				[ clock==0 ] / turn off the tone
EC_86: 7: 				call( PostProc_R4 )
EC_86: 8: 	&&
EC_86: 9: 		call( PostProc_R7 )
EC_86: 10: ||
EC_86: 11: 	NIL

EC_86 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_86  --> EC_88 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 88 , H : 47 , step : 0 >" as EC_88 #Pink
EC_88: 1: par
EC_88: 2: 	par sync [the alarm is disarmed]
EC_88: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_88: 4: 			[ true ] / the alarm is disarmed
EC_88: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_88: 6: 				[ clock==0 ] / turn off the tone
EC_88: 7: 				call( PostProc_R4 )
EC_88: 8: 	&&
EC_88: 9: 		alt invariant( [] ~> R7_x_resp<=60 )
EC_88: 10: 			[ true ] / the alarm is disarmed
EC_88: 11: 			call( PostProc_R8 )
EC_88: 12: ||
EC_88: 13: 	NIL

EC_88 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_88  --> EC_90 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 90 , H : 48 , step : 0 >" as EC_90 #Orange
EC_90: 1: par
EC_90: 2: 	par sync [the alarm is disarmed]
EC_90: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_90: 4: 			[ true ] / the alarm is disarmed
EC_90: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_90: 6: 				[ clock==0 ] / turn off the tone
EC_90: 7: 				call( PostProc_R4 )
EC_90: 8: 	&&
EC_90: 9: 		alt invariant( [] ~> R7_x_resp<=60 )
EC_90: 10: 			[ true ] / the alarm is disarmed
EC_90: 11: 			call( PostProc_R8 )
EC_90: 12: ||
EC_90: 13: 	NIL

EC_90 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_90  --> EC_91 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 91 , H : 49 , step : 23 >" as EC_91 #LightBlue
EC_91: 1: par
EC_91: 2: 	par sync [the alarm is disarmed]
EC_91: 3: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_91: 4: 			[ clock==0 ] / turn off the tone
EC_91: 5: 			call( PostProc_R4 )
EC_91: 6: 	&&
EC_91: 7: 		call( PostProc_R8 )
EC_91: 8: ||
EC_91: 9: 	NIL

EC_91 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_91  --> EC_92 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 92 , H : 50 , step : 0 >" as EC_92 #Pink
EC_92: 1: par
EC_92: 2: 	par sync [the alarm is disarmed]
EC_92: 3: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_92: 4: 			[ clock==0 ] / turn off the tone
EC_92: 5: 			call( PostProc_R4 )
EC_92: 6: 	&&
EC_92: 7: 		NIL
EC_92: 8: ||
EC_92: 9: 	NIL

EC_92 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_92  --> EC_94 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 94 , H : 51 , step : 0 >" as EC_94 #Orange
EC_94: 1: par
EC_94: 2: 	par sync [the alarm is disarmed]
EC_94: 3: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_94: 4: 			[ clock==0 ] / turn off the tone
EC_94: 5: 			call( PostProc_R4 )
EC_94: 6: 	&&
EC_94: 7: 		NIL
EC_94: 8: ||
EC_94: 9: 	NIL

EC_94 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_94  --> EC_95 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True]\lact [clock==0] / turn off the tone

state "EC< id : 95 , H : 52 , step : 24 >" as EC_95 #LightBlue
EC_95: 1: par
EC_95: 2: 	par
EC_95: 3: 		call( PostProc_R4 )
EC_95: 4: 	||
EC_95: 5: 		NIL
EC_95: 6: ||
EC_95: 7: 	NIL

EC_95 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_95  --> EC_96 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R4, Proc_R1

state "EC< id : 96 , H : 53 , step : 0 >" as EC_96 #Pink
EC_96: 1: par
EC_96: 2: 	par
EC_96: 3: 		alt invariant( [] ~> true )
EC_96: 4: 			[ true ] / the set button is pressed
EC_96: 5: 			alt invariant( [clock] ~> clock<=60 )
EC_96: 6: 				[ clock==60 ] / activate the alarm
EC_96: 7: 				call( PostProc_R1 )
EC_96: 8: 	||
EC_96: 9: 		NIL
EC_96: 10: ||
EC_96: 11: 	NIL

EC_96 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_96  --> EC_98 : inv [] => [true, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 98 , H : 54 , step : 0 >" as EC_98 #Orange
EC_98: 1: par
EC_98: 2: 	par
EC_98: 3: 		alt invariant( [] ~> true )
EC_98: 4: 			[ true ] / the set button is pressed
EC_98: 5: 			alt invariant( [clock] ~> clock<=60 )
EC_98: 6: 				[ clock==60 ] / activate the alarm
EC_98: 7: 				call( PostProc_R1 )
EC_98: 8: 	||
EC_98: 9: 		NIL
EC_98: 10: ||
EC_98: 11: 	NIL

EC_98 : DBM: R7_x_resp=R3_x_resp, R7_x_resp-clock<=60, clock-R7_x_resp<=0,\l   R3_x_resp-clock<=60, clock-R3_x_resp<=0,
EC_98  --> EC_99 : inv [] => [true, True, True]\lact [true] / the set button is pressed

state "EC< id : 99 , H : 55 , step : 25 >" as EC_99 #LightBlue
EC_99: 1: par
EC_99: 2: 	par
EC_99: 3: 		alt invariant( [clock] ~> clock<=60 )
EC_99: 4: 			[ clock==60 ] / activate the alarm
EC_99: 5: 			call( PostProc_R1 )
EC_99: 6: 	||
EC_99: 7: 		NIL
EC_99: 8: ||
EC_99: 9: 	NIL

EC_99 : DBM: R7_x_resp=R3_x_resp, R7_x_resp-clock<=60, clock-R7_x_resp<=0,\l   R3_x_resp-clock<=60, clock-R3_x_resp<=0,
EC_99  --> EC_101 : inv [clock] => [clock<=60, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 101 , H : 56 , step : 0 >" as EC_101 #Orange
EC_101: 1: par
EC_101: 2: 	par
EC_101: 3: 		alt invariant( [clock] ~> clock<=60 )
EC_101: 4: 			[ clock==60 ] / activate the alarm
EC_101: 5: 			call( PostProc_R1 )
EC_101: 6: 	||
EC_101: 7: 		NIL
EC_101: 8: ||
EC_101: 9: 	NIL

EC_101 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_101  --> EC_102 : \lact [True] / META:REDUNDANCE:EC< id : 10 , H : 7 >

state "EC< id : 102 , H : 57 , step : 0 >" as EC_102 #Green
EC_102: 1: par
EC_102: 2: 	par
EC_102: 3: 		alt invariant( [clock] ~> clock<=60 )
EC_102: 4: 			[ clock==60 ] / activate the alarm
EC_102: 5: 			call( PostProc_R1 )
EC_102: 6: 	||
EC_102: 7: 		NIL
EC_102: 8: ||
EC_102: 9: 	NIL

EC_102 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_85  --> EC_87 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 87 , H : 46 , step : 26 >" as EC_87 #LightBlue
EC_87: 1: par
EC_87: 2: 	par sync [the alarm is disarmed]
EC_87: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_87: 4: 			[ true ] / the alarm is disarmed
EC_87: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_87: 6: 				[ clock==0 ] / turn off the tone
EC_87: 7: 				call( PostProc_R4 )
EC_87: 8: 	&&
EC_87: 9: 		alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_87: 10: 			[ clock==0 ] / alert the emergency center
EC_87: 11: 			call( PostProc_R9 )
EC_87: 12: ||
EC_87: 13: 	NIL

EC_87 : DBM: R7_x_resp=60, R3_x_resp=60, clock=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_87  --> EC_104 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 104 , H : 47 , step : 0 >" as EC_104 #Orange
EC_104: 1: par
EC_104: 2: 	par sync [the alarm is disarmed]
EC_104: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_104: 4: 			[ true ] / the alarm is disarmed
EC_104: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_104: 6: 				[ clock==0 ] / turn off the tone
EC_104: 7: 				call( PostProc_R4 )
EC_104: 8: 	&&
EC_104: 9: 		alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_104: 10: 			[ clock==0 ] / alert the emergency center
EC_104: 11: 			call( PostProc_R9 )
EC_104: 12: ||
EC_104: 13: 	NIL

EC_104 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_104  --> EC_105 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True]\lact [clock==0] / alert the emergency center

state "EC< id : 105 , H : 48 , step : 27 >" as EC_105 #LightBlue
EC_105: 1: par
EC_105: 2: 	par sync [the alarm is disarmed]
EC_105: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_105: 4: 			[ true ] / the alarm is disarmed
EC_105: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_105: 6: 				[ clock==0 ] / turn off the tone
EC_105: 7: 				call( PostProc_R4 )
EC_105: 8: 	&&
EC_105: 9: 		call( PostProc_R9 )
EC_105: 10: ||
EC_105: 11: 	NIL

EC_105 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_105  --> EC_106 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 106 , H : 49 , step : 0 >" as EC_106 #Pink
EC_106: 1: par
EC_106: 2: 	par sync [the alarm is disarmed]
EC_106: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_106: 4: 			[ true ] / the alarm is disarmed
EC_106: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_106: 6: 				[ clock==0 ] / turn off the tone
EC_106: 7: 				call( PostProc_R4 )
EC_106: 8: 	&&
EC_106: 9: 		alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_106: 10: 			[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_106: 11: 			call( PostProc_R7 )
EC_106: 12: 		++
EC_106: 13: 			[ R7_x_resp==60 ] / deadline at 60
EC_106: 14: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_106: 15: 				[ clock==0 ] / alert the emergency center
EC_106: 16: 				call( PostProc_R9 )
EC_106: 17: ||
EC_106: 18: 	NIL

EC_106 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_106  --> EC_108 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 108 , H : 50 , step : 0 >" as EC_108 #Orange
EC_108: 1: par
EC_108: 2: 	par sync [the alarm is disarmed]
EC_108: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_108: 4: 			[ true ] / the alarm is disarmed
EC_108: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_108: 6: 				[ clock==0 ] / turn off the tone
EC_108: 7: 				call( PostProc_R4 )
EC_108: 8: 	&&
EC_108: 9: 		alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_108: 10: 			[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_108: 11: 			call( PostProc_R7 )
EC_108: 12: 		++
EC_108: 13: 			[ R7_x_resp==60 ] / deadline at 60
EC_108: 14: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_108: 15: 				[ clock==0 ] / alert the emergency center
EC_108: 16: 				call( PostProc_R9 )
EC_108: 17: ||
EC_108: 18: 	NIL

EC_108 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_108  --> EC_109 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 109 , H : 51 , step : 28 >" as EC_109 #LightBlue
EC_109: 1: par
EC_109: 2: 	par sync [the alarm is disarmed]
EC_109: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_109: 4: 			[ true ] / the alarm is disarmed
EC_109: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_109: 6: 				[ clock==0 ] / turn off the tone
EC_109: 7: 				call( PostProc_R4 )
EC_109: 8: 	&&
EC_109: 9: 		call( PostProc_R7 )
EC_109: 10: ||
EC_109: 11: 	NIL

EC_109 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_109  --> EC_111 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 111 , H : 52 , step : 0 >" as EC_111 #Pink
EC_111: 1: par
EC_111: 2: 	par sync [the alarm is disarmed]
EC_111: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_111: 4: 			[ true ] / the alarm is disarmed
EC_111: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_111: 6: 				[ clock==0 ] / turn off the tone
EC_111: 7: 				call( PostProc_R4 )
EC_111: 8: 	&&
EC_111: 9: 		alt invariant( [] ~> R7_x_resp<=60 )
EC_111: 10: 			[ true ] / the alarm is disarmed
EC_111: 11: 			call( PostProc_R8 )
EC_111: 12: ||
EC_111: 13: 	NIL

EC_111 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_111  --> EC_113 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 113 , H : 53 , step : 0 >" as EC_113 #Orange
EC_113: 1: par
EC_113: 2: 	par sync [the alarm is disarmed]
EC_113: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_113: 4: 			[ true ] / the alarm is disarmed
EC_113: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_113: 6: 				[ clock==0 ] / turn off the tone
EC_113: 7: 				call( PostProc_R4 )
EC_113: 8: 	&&
EC_113: 9: 		alt invariant( [] ~> R7_x_resp<=60 )
EC_113: 10: 			[ true ] / the alarm is disarmed
EC_113: 11: 			call( PostProc_R8 )
EC_113: 12: ||
EC_113: 13: 	NIL

EC_113 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_113  --> EC_114 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 114 , H : 54 , step : 29 >" as EC_114 #LightBlue
EC_114: 1: par
EC_114: 2: 	par sync [the alarm is disarmed]
EC_114: 3: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_114: 4: 			[ clock==0 ] / turn off the tone
EC_114: 5: 			call( PostProc_R4 )
EC_114: 6: 	&&
EC_114: 7: 		call( PostProc_R8 )
EC_114: 8: ||
EC_114: 9: 	NIL

EC_114 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_114  --> EC_115 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 115 , H : 55 , step : 0 >" as EC_115 #Pink
EC_115: 1: par
EC_115: 2: 	par sync [the alarm is disarmed]
EC_115: 3: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_115: 4: 			[ clock==0 ] / turn off the tone
EC_115: 5: 			call( PostProc_R4 )
EC_115: 6: 	&&
EC_115: 7: 		NIL
EC_115: 8: ||
EC_115: 9: 	NIL

EC_115 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_115  --> EC_117 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 117 , H : 56 , step : 0 >" as EC_117 #Orange
EC_117: 1: par
EC_117: 2: 	par sync [the alarm is disarmed]
EC_117: 3: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_117: 4: 			[ clock==0 ] / turn off the tone
EC_117: 5: 			call( PostProc_R4 )
EC_117: 6: 	&&
EC_117: 7: 		NIL
EC_117: 8: ||
EC_117: 9: 	NIL

EC_117 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_117  --> EC_118 : \lact [True] / META:REDUNDANCE:EC< id : 60 , H : 29 >

state "EC< id : 118 , H : 57 , step : 0 >" as EC_118 #Green
EC_118: 1: par
EC_118: 2: 	par sync [the alarm is disarmed]
EC_118: 3: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_118: 4: 			[ clock==0 ] / turn off the tone
EC_118: 5: 			call( PostProc_R4 )
EC_118: 6: 	&&
EC_118: 7: 		NIL
EC_118: 8: ||
EC_118: 9: 	NIL

EC_118 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_108  --> EC_110 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 110 , H : 51 , step : 30 >" as EC_110 #LightBlue
EC_110: 1: par
EC_110: 2: 	par sync [the alarm is disarmed]
EC_110: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_110: 4: 			[ true ] / the alarm is disarmed
EC_110: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_110: 6: 				[ clock==0 ] / turn off the tone
EC_110: 7: 				call( PostProc_R4 )
EC_110: 8: 	&&
EC_110: 9: 		alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_110: 10: 			[ clock==0 ] / alert the emergency center
EC_110: 11: 			call( PostProc_R9 )
EC_110: 12: ||
EC_110: 13: 	NIL

EC_110 : DBM: R7_x_resp=60, R3_x_resp=120, clock=60, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp=clock, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_110  --> EC_120 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 120 , H : 52 , step : 0 >" as EC_120 #Orange
EC_120: 1: par
EC_120: 2: 	par sync [the alarm is disarmed]
EC_120: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_120: 4: 			[ true ] / the alarm is disarmed
EC_120: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_120: 6: 				[ clock==0 ] / turn off the tone
EC_120: 7: 				call( PostProc_R4 )
EC_120: 8: 	&&
EC_120: 9: 		alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_120: 10: 			[ clock==0 ] / alert the emergency center
EC_120: 11: 			call( PostProc_R9 )
EC_120: 12: ||
EC_120: 13: 	NIL

EC_120 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_120  --> EC_121 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True]\lact [clock==0] / alert the emergency center

state "EC< id : 121 , H : 53 , step : 31 >" as EC_121 #LightBlue
EC_121: 1: par
EC_121: 2: 	par sync [the alarm is disarmed]
EC_121: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_121: 4: 			[ true ] / the alarm is disarmed
EC_121: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_121: 6: 				[ clock==0 ] / turn off the tone
EC_121: 7: 				call( PostProc_R4 )
EC_121: 8: 	&&
EC_121: 9: 		call( PostProc_R9 )
EC_121: 10: ||
EC_121: 11: 	NIL

EC_121 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_121  --> EC_122 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 122 , H : 54 , step : 0 >" as EC_122 #Pink
EC_122: 1: par
EC_122: 2: 	par sync [the alarm is disarmed]
EC_122: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_122: 4: 			[ true ] / the alarm is disarmed
EC_122: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_122: 6: 				[ clock==0 ] / turn off the tone
EC_122: 7: 				call( PostProc_R4 )
EC_122: 8: 	&&
EC_122: 9: 		alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_122: 10: 			[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_122: 11: 			call( PostProc_R7 )
EC_122: 12: 		++
EC_122: 13: 			[ R7_x_resp==60 ] / deadline at 60
EC_122: 14: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_122: 15: 				[ clock==0 ] / alert the emergency center
EC_122: 16: 				call( PostProc_R9 )
EC_122: 17: ||
EC_122: 18: 	NIL

EC_122 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_122  --> EC_124 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 124 , H : 55 , step : 0 >" as EC_124 #Orange
EC_124: 1: par
EC_124: 2: 	par sync [the alarm is disarmed]
EC_124: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_124: 4: 			[ true ] / the alarm is disarmed
EC_124: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_124: 6: 				[ clock==0 ] / turn off the tone
EC_124: 7: 				call( PostProc_R4 )
EC_124: 8: 	&&
EC_124: 9: 		alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_124: 10: 			[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_124: 11: 			call( PostProc_R7 )
EC_124: 12: 		++
EC_124: 13: 			[ R7_x_resp==60 ] / deadline at 60
EC_124: 14: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_124: 15: 				[ clock==0 ] / alert the emergency center
EC_124: 16: 				call( PostProc_R9 )
EC_124: 17: ||
EC_124: 18: 	NIL

EC_124 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_124  --> EC_125 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 125 , H : 56 , step : 32 >" as EC_125 #LightBlue
EC_125: 1: par
EC_125: 2: 	par sync [the alarm is disarmed]
EC_125: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_125: 4: 			[ true ] / the alarm is disarmed
EC_125: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_125: 6: 				[ clock==0 ] / turn off the tone
EC_125: 7: 				call( PostProc_R4 )
EC_125: 8: 	&&
EC_125: 9: 		call( PostProc_R7 )
EC_125: 10: ||
EC_125: 11: 	NIL

EC_125 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_125  --> EC_127 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 127 , H : 57 , step : 0 >" as EC_127 #Pink
EC_127: 1: par
EC_127: 2: 	par sync [the alarm is disarmed]
EC_127: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_127: 4: 			[ true ] / the alarm is disarmed
EC_127: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_127: 6: 				[ clock==0 ] / turn off the tone
EC_127: 7: 				call( PostProc_R4 )
EC_127: 8: 	&&
EC_127: 9: 		alt invariant( [] ~> R7_x_resp<=60 )
EC_127: 10: 			[ true ] / the alarm is disarmed
EC_127: 11: 			call( PostProc_R8 )
EC_127: 12: ||
EC_127: 13: 	NIL

EC_127 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_127  --> EC_129 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 129 , H : 58 , step : 0 >" as EC_129 #Orange
EC_129: 1: par
EC_129: 2: 	par sync [the alarm is disarmed]
EC_129: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_129: 4: 			[ true ] / the alarm is disarmed
EC_129: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_129: 6: 				[ clock==0 ] / turn off the tone
EC_129: 7: 				call( PostProc_R4 )
EC_129: 8: 	&&
EC_129: 9: 		alt invariant( [] ~> R7_x_resp<=60 )
EC_129: 10: 			[ true ] / the alarm is disarmed
EC_129: 11: 			call( PostProc_R8 )
EC_129: 12: ||
EC_129: 13: 	NIL

EC_129 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_129  --> EC_130 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 130 , H : 59 , step : 33 >" as EC_130 #LightBlue
EC_130: 1: par
EC_130: 2: 	par sync [the alarm is disarmed]
EC_130: 3: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_130: 4: 			[ clock==0 ] / turn off the tone
EC_130: 5: 			call( PostProc_R4 )
EC_130: 6: 	&&
EC_130: 7: 		call( PostProc_R8 )
EC_130: 8: ||
EC_130: 9: 	NIL

EC_130 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_130  --> EC_131 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 131 , H : 60 , step : 0 >" as EC_131 #Pink
EC_131: 1: par
EC_131: 2: 	par sync [the alarm is disarmed]
EC_131: 3: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_131: 4: 			[ clock==0 ] / turn off the tone
EC_131: 5: 			call( PostProc_R4 )
EC_131: 6: 	&&
EC_131: 7: 		NIL
EC_131: 8: ||
EC_131: 9: 	NIL

EC_131 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_131  --> EC_133 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 133 , H : 61 , step : 0 >" as EC_133 #Orange
EC_133: 1: par
EC_133: 2: 	par sync [the alarm is disarmed]
EC_133: 3: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_133: 4: 			[ clock==0 ] / turn off the tone
EC_133: 5: 			call( PostProc_R4 )
EC_133: 6: 	&&
EC_133: 7: 		NIL
EC_133: 8: ||
EC_133: 9: 	NIL

EC_133 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_133  --> EC_134 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True]\lact [clock==0] / turn off the tone

state "EC< id : 134 , H : 62 , step : 34 >" as EC_134 #LightBlue
EC_134: 1: par
EC_134: 2: 	par
EC_134: 3: 		call( PostProc_R4 )
EC_134: 4: 	||
EC_134: 5: 		NIL
EC_134: 6: ||
EC_134: 7: 	NIL

EC_134 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_134  --> EC_135 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R4, Proc_R1

state "EC< id : 135 , H : 63 , step : 0 >" as EC_135 #Pink
EC_135: 1: par
EC_135: 2: 	par
EC_135: 3: 		alt invariant( [] ~> true )
EC_135: 4: 			[ true ] / the set button is pressed
EC_135: 5: 			alt invariant( [clock] ~> clock<=60 )
EC_135: 6: 				[ clock==60 ] / activate the alarm
EC_135: 7: 				call( PostProc_R1 )
EC_135: 8: 	||
EC_135: 9: 		NIL
EC_135: 10: ||
EC_135: 11: 	NIL

EC_135 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_135  --> EC_137 : inv [] => [true, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 137 , H : 64 , step : 0 >" as EC_137 #Orange
EC_137: 1: par
EC_137: 2: 	par
EC_137: 3: 		alt invariant( [] ~> true )
EC_137: 4: 			[ true ] / the set button is pressed
EC_137: 5: 			alt invariant( [clock] ~> clock<=60 )
EC_137: 6: 				[ clock==60 ] / activate the alarm
EC_137: 7: 				call( PostProc_R1 )
EC_137: 8: 	||
EC_137: 9: 		NIL
EC_137: 10: ||
EC_137: 11: 	NIL

EC_137 : DBM: R3_x_resp>=120, R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_137  --> EC_138 : inv [] => [true, True, True]\lact [true] / the set button is pressed

state "EC< id : 138 , H : 65 , step : 35 >" as EC_138 #LightBlue
EC_138: 1: par
EC_138: 2: 	par
EC_138: 3: 		alt invariant( [clock] ~> clock<=60 )
EC_138: 4: 			[ clock==60 ] / activate the alarm
EC_138: 5: 			call( PostProc_R1 )
EC_138: 6: 	||
EC_138: 7: 		NIL
EC_138: 8: ||
EC_138: 9: 	NIL

EC_138 : DBM: R3_x_resp>=120, R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_138  --> EC_140 : inv [clock] => [clock<=60, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 140 , H : 66 , step : 0 >" as EC_140 #Orange
EC_140: 1: par
EC_140: 2: 	par
EC_140: 3: 		alt invariant( [clock] ~> clock<=60 )
EC_140: 4: 			[ clock==60 ] / activate the alarm
EC_140: 5: 			call( PostProc_R1 )
EC_140: 6: 	||
EC_140: 7: 		NIL
EC_140: 8: ||
EC_140: 9: 	NIL

EC_140 : DBM: R3_x_resp>=120, clock<=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-120,
EC_140  --> EC_141 : inv [clock] => [clock<=60, True, True]\lact [clock==60] / activate the alarm

state "EC< id : 141 , H : 67 , step : 36 >" as EC_141 #LightBlue
EC_141: 1: par
EC_141: 2: 	par
EC_141: 3: 		call( PostProc_R1 )
EC_141: 4: 	||
EC_141: 5: 		NIL
EC_141: 6: ||
EC_141: 7: 	NIL

EC_141 : DBM: R7_x_resp>=60, R3_x_resp>=180, clock=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-120,
EC_141  --> EC_142 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R1, Proc_R2

state "EC< id : 142 , H : 68 , step : 0 >" as EC_142 #Pink
EC_142: 1: par
EC_142: 2: 	par
EC_142: 3: 		alt invariant( [] ~> true )
EC_142: 4: 			[ true ] / motion is detected
EC_142: 5: 			alt invariant( [clock] ~> clock<=0 )
EC_142: 6: 				[ clock==0 ] / emit a tone
EC_142: 7: 				call( PostProc_R2 )
EC_142: 8: 	||
EC_142: 9: 		NIL
EC_142: 10: ||
EC_142: 11: 	NIL

EC_142 : DBM: R7_x_resp>=60, R3_x_resp>=180, clock=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-120,
EC_142  --> EC_144 : inv [] => [true, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 144 , H : 69 , step : 0 >" as EC_144 #Orange
EC_144: 1: par
EC_144: 2: 	par
EC_144: 3: 		alt invariant( [] ~> true )
EC_144: 4: 			[ true ] / motion is detected
EC_144: 5: 			alt invariant( [clock] ~> clock<=0 )
EC_144: 6: 				[ clock==0 ] / emit a tone
EC_144: 7: 				call( PostProc_R2 )
EC_144: 8: 	||
EC_144: 9: 		NIL
EC_144: 10: ||
EC_144: 11: 	NIL

EC_144 : DBM: R7_x_resp>=60, R3_x_resp>=180, clock>=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-120,
EC_144  --> EC_145 : inv [] => [true, True, True]\lact [true] / motion is detected

state "EC< id : 145 , H : 70 , step : 37 >" as EC_145 #LightBlue
EC_145: 1: par
EC_145: 2: 	par
EC_145: 3: 		alt invariant( [clock] ~> clock<=0 )
EC_145: 4: 			[ clock==0 ] / emit a tone
EC_145: 5: 			call( PostProc_R2 )
EC_145: 6: 	||
EC_145: 7: 		NIL
EC_145: 8: ||
EC_145: 9: 	NIL

EC_145 : DBM: R7_x_resp>=60, R3_x_resp>=180, clock>=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-120,
EC_145  --> EC_147 : inv [clock] => [clock<=0, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 147 , H : 71 , step : 0 >" as EC_147 #Orange
EC_147: 1: par
EC_147: 2: 	par
EC_147: 3: 		alt invariant( [clock] ~> clock<=0 )
EC_147: 4: 			[ clock==0 ] / emit a tone
EC_147: 5: 			call( PostProc_R2 )
EC_147: 6: 	||
EC_147: 7: 		NIL
EC_147: 8: ||
EC_147: 9: 	NIL

EC_147 : DBM: R7_x_resp>=60, R3_x_resp>=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-180,
EC_147  --> EC_148 : inv [clock] => [clock<=0, True, True]\lact [clock==0] / emit a tone

state "EC< id : 148 , H : 72 , step : 38 >" as EC_148 #LightBlue
EC_148: 1: par
EC_148: 2: 	par
EC_148: 3: 		call( PostProc_R2 )
EC_148: 4: 	||
EC_148: 5: 		NIL
EC_148: 6: ||
EC_148: 7: 	NIL

EC_148 : DBM: R7_x_resp>=60, R3_x_resp>=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-180,
EC_148  --> EC_149 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R2

state "EC< id : 149 , H : 73 , step : 0 >" as EC_149 #Pink
EC_149: 1: par
EC_149: 2: 	par
EC_149: 3: 		par sync [the alarm is disarmed]
EC_149: 4: 			alt invariant( [R3_x_resp] ~> R3_x_resp<=300 / start time period within 0 to 300 )
EC_149: 5: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_149: 6: 				call( PostProc_R3 )
EC_149: 7: 			++
EC_149: 8: 				[ R3_x_resp==300 ] / deadline at 300
EC_149: 9: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_149: 10: 					[ clock==0 ] / turn off the tone
EC_149: 11: 					call( PostProc_R5 )
EC_149: 12: 		&&
EC_149: 13: 			alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_149: 14: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_149: 15: 				call( PostProc_R7 )
EC_149: 16: 			++
EC_149: 17: 				[ R7_x_resp==60 ] / deadline at 60
EC_149: 18: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_149: 19: 					[ clock==0 ] / alert the emergency center
EC_149: 20: 					call( PostProc_R9 )
EC_149: 21: 	||
EC_149: 22: 		NIL
EC_149: 23: ||
EC_149: 24: 	NIL

EC_149 : DBM: R7_x_resp>=60, R3_x_resp>=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-180,
EC_149  --> EC_151 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [True] / META:[start time period within 0 to 300, start time period within 0 to 60]

state "EC< id : 151 , H : 74 , step : 0 >" as EC_151 #Orange
EC_151: 1: par
EC_151: 2: 	par
EC_151: 3: 		par sync [the alarm is disarmed]
EC_151: 4: 			alt invariant( [R3_x_resp] ~> R3_x_resp<=300 / start time period within 0 to 300 )
EC_151: 5: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_151: 6: 				call( PostProc_R3 )
EC_151: 7: 			++
EC_151: 8: 				[ R3_x_resp==300 ] / deadline at 300
EC_151: 9: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_151: 10: 					[ clock==0 ] / turn off the tone
EC_151: 11: 					call( PostProc_R5 )
EC_151: 12: 		&&
EC_151: 13: 			alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_151: 14: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_151: 15: 				call( PostProc_R7 )
EC_151: 16: 			++
EC_151: 17: 				[ R7_x_resp==60 ] / deadline at 60
EC_151: 18: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_151: 19: 					[ clock==0 ] / alert the emergency center
EC_151: 20: 					call( PostProc_R9 )
EC_151: 21: 	||
EC_151: 22: 		NIL
EC_151: 23: ||
EC_151: 24: 	NIL

EC_151 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_151  --> EC_152 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 152 , H : 75 , step : 39 >" as EC_152 #LightBlue
EC_152: 1: par
EC_152: 2: 	par
EC_152: 3: 		par sync [the alarm is disarmed]
EC_152: 4: 			call( PostProc_R3 )
EC_152: 5: 		&&
EC_152: 6: 			alt invariant( [] ~> R7_x_resp<=60 )
EC_152: 7: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_152: 8: 				call( PostProc_R7 )
EC_152: 9: 			++
EC_152: 10: 				[ R7_x_resp==60 ] / deadline at 60
EC_152: 11: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_152: 12: 					[ clock==0 ] / alert the emergency center
EC_152: 13: 					call( PostProc_R9 )
EC_152: 14: 	||
EC_152: 15: 		NIL
EC_152: 16: ||
EC_152: 17: 	NIL

EC_152 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_152  --> EC_156 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 156 , H : 76 , step : 0 >" as EC_156 #Pink
EC_156: 1: par
EC_156: 2: 	par
EC_156: 3: 		par sync [the alarm is disarmed]
EC_156: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_156: 5: 				[ true ] / the alarm is disarmed
EC_156: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_156: 7: 					[ clock==0 ] / turn off the tone
EC_156: 8: 					call( PostProc_R4 )
EC_156: 9: 		&&
EC_156: 10: 			alt invariant( [] ~> R7_x_resp<=60 )
EC_156: 11: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_156: 12: 				call( PostProc_R7 )
EC_156: 13: 			++
EC_156: 14: 				[ R7_x_resp==60 ] / deadline at 60
EC_156: 15: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_156: 16: 					[ clock==0 ] / alert the emergency center
EC_156: 17: 					call( PostProc_R9 )
EC_156: 18: 	||
EC_156: 19: 		NIL
EC_156: 20: ||
EC_156: 21: 	NIL

EC_156 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_156  --> EC_158 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 158 , H : 77 , step : 0 >" as EC_158 #Orange
EC_158: 1: par
EC_158: 2: 	par
EC_158: 3: 		par sync [the alarm is disarmed]
EC_158: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_158: 5: 				[ true ] / the alarm is disarmed
EC_158: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_158: 7: 					[ clock==0 ] / turn off the tone
EC_158: 8: 					call( PostProc_R4 )
EC_158: 9: 		&&
EC_158: 10: 			alt invariant( [] ~> R7_x_resp<=60 )
EC_158: 11: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_158: 12: 				call( PostProc_R7 )
EC_158: 13: 			++
EC_158: 14: 				[ R7_x_resp==60 ] / deadline at 60
EC_158: 15: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_158: 16: 					[ clock==0 ] / alert the emergency center
EC_158: 17: 					call( PostProc_R9 )
EC_158: 18: 	||
EC_158: 19: 		NIL
EC_158: 20: ||
EC_158: 21: 	NIL

EC_158 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_158  --> EC_159 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 159 , H : 78 , step : 40 >" as EC_159 #LightBlue
EC_159: 1: par
EC_159: 2: 	par
EC_159: 3: 		par sync [the alarm is disarmed]
EC_159: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_159: 5: 				[ true ] / the alarm is disarmed
EC_159: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_159: 7: 					[ clock==0 ] / turn off the tone
EC_159: 8: 					call( PostProc_R4 )
EC_159: 9: 		&&
EC_159: 10: 			call( PostProc_R7 )
EC_159: 11: 	||
EC_159: 12: 		NIL
EC_159: 13: ||
EC_159: 14: 	NIL

EC_159 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_159  --> EC_161 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 161 , H : 79 , step : 0 >" as EC_161 #Pink
EC_161: 1: par
EC_161: 2: 	par
EC_161: 3: 		par sync [the alarm is disarmed]
EC_161: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_161: 5: 				[ true ] / the alarm is disarmed
EC_161: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_161: 7: 					[ clock==0 ] / turn off the tone
EC_161: 8: 					call( PostProc_R4 )
EC_161: 9: 		&&
EC_161: 10: 			alt invariant( [] ~> R7_x_resp<=60 )
EC_161: 11: 				[ true ] / the alarm is disarmed
EC_161: 12: 				call( PostProc_R8 )
EC_161: 13: 	||
EC_161: 14: 		NIL
EC_161: 15: ||
EC_161: 16: 	NIL

EC_161 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_161  --> EC_163 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 163 , H : 80 , step : 0 >" as EC_163 #Orange
EC_163: 1: par
EC_163: 2: 	par
EC_163: 3: 		par sync [the alarm is disarmed]
EC_163: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_163: 5: 				[ true ] / the alarm is disarmed
EC_163: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_163: 7: 					[ clock==0 ] / turn off the tone
EC_163: 8: 					call( PostProc_R4 )
EC_163: 9: 		&&
EC_163: 10: 			alt invariant( [] ~> R7_x_resp<=60 )
EC_163: 11: 				[ true ] / the alarm is disarmed
EC_163: 12: 				call( PostProc_R8 )
EC_163: 13: 	||
EC_163: 14: 		NIL
EC_163: 15: ||
EC_163: 16: 	NIL

EC_163 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_163  --> EC_164 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 164 , H : 81 , step : 41 >" as EC_164 #LightBlue
EC_164: 1: par
EC_164: 2: 	par
EC_164: 3: 		par sync [the alarm is disarmed]
EC_164: 4: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_164: 5: 				[ clock==0 ] / turn off the tone
EC_164: 6: 				call( PostProc_R4 )
EC_164: 7: 		&&
EC_164: 8: 			call( PostProc_R8 )
EC_164: 9: 	||
EC_164: 10: 		NIL
EC_164: 11: ||
EC_164: 12: 	NIL

EC_164 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_164  --> EC_165 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 165 , H : 82 , step : 0 >" as EC_165 #Pink
EC_165: 1: par
EC_165: 2: 	par
EC_165: 3: 		par sync [the alarm is disarmed]
EC_165: 4: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_165: 5: 				[ clock==0 ] / turn off the tone
EC_165: 6: 				call( PostProc_R4 )
EC_165: 7: 		&&
EC_165: 8: 			NIL
EC_165: 9: 	||
EC_165: 10: 		NIL
EC_165: 11: ||
EC_165: 12: 	NIL

EC_165 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_165  --> EC_167 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 167 , H : 83 , step : 0 >" as EC_167 #Orange
EC_167: 1: par
EC_167: 2: 	par
EC_167: 3: 		par sync [the alarm is disarmed]
EC_167: 4: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_167: 5: 				[ clock==0 ] / turn off the tone
EC_167: 6: 				call( PostProc_R4 )
EC_167: 7: 		&&
EC_167: 8: 			NIL
EC_167: 9: 	||
EC_167: 10: 		NIL
EC_167: 11: ||
EC_167: 12: 	NIL

EC_167 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_167  --> EC_168 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True]\lact [clock==0] / turn off the tone

state "EC< id : 168 , H : 84 , step : 42 >" as EC_168 #LightBlue
EC_168: 1: par
EC_168: 2: 	par
EC_168: 3: 		par
EC_168: 4: 			call( PostProc_R4 )
EC_168: 5: 		||
EC_168: 6: 			NIL
EC_168: 7: 	||
EC_168: 8: 		NIL
EC_168: 9: ||
EC_168: 10: 	NIL

EC_168 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_168  --> EC_169 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R4, Proc_R1

state "EC< id : 169 , H : 85 , step : 0 >" as EC_169 #Pink
EC_169: 1: par
EC_169: 2: 	par
EC_169: 3: 		par
EC_169: 4: 			alt invariant( [] ~> true )
EC_169: 5: 				[ true ] / the set button is pressed
EC_169: 6: 				alt invariant( [clock] ~> clock<=60 )
EC_169: 7: 					[ clock==60 ] / activate the alarm
EC_169: 8: 					call( PostProc_R1 )
EC_169: 9: 		||
EC_169: 10: 			NIL
EC_169: 11: 	||
EC_169: 12: 		NIL
EC_169: 13: ||
EC_169: 14: 	NIL

EC_169 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_169  --> EC_171 : inv [] => [true, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 171 , H : 86 , step : 0 >" as EC_171 #Orange
EC_171: 1: par
EC_171: 2: 	par
EC_171: 3: 		par
EC_171: 4: 			alt invariant( [] ~> true )
EC_171: 5: 				[ true ] / the set button is pressed
EC_171: 6: 				alt invariant( [clock] ~> clock<=60 )
EC_171: 7: 					[ clock==60 ] / activate the alarm
EC_171: 8: 					call( PostProc_R1 )
EC_171: 9: 		||
EC_171: 10: 			NIL
EC_171: 11: 	||
EC_171: 12: 		NIL
EC_171: 13: ||
EC_171: 14: 	NIL

EC_171 : DBM: R7_x_resp=R3_x_resp, R7_x_resp-clock<=60, clock-R7_x_resp<=0,\l   R3_x_resp-clock<=60, clock-R3_x_resp<=0,
EC_171  --> EC_172 : inv [] => [true, True, True, True]\lact [true] / the set button is pressed

state "EC< id : 172 , H : 87 , step : 43 >" as EC_172 #LightBlue
EC_172: 1: par
EC_172: 2: 	par
EC_172: 3: 		par
EC_172: 4: 			alt invariant( [clock] ~> clock<=60 )
EC_172: 5: 				[ clock==60 ] / activate the alarm
EC_172: 6: 				call( PostProc_R1 )
EC_172: 7: 		||
EC_172: 8: 			NIL
EC_172: 9: 	||
EC_172: 10: 		NIL
EC_172: 11: ||
EC_172: 12: 	NIL

EC_172 : DBM: R7_x_resp=R3_x_resp, R7_x_resp-clock<=60, clock-R7_x_resp<=0,\l   R3_x_resp-clock<=60, clock-R3_x_resp<=0,
EC_172  --> EC_174 : inv [clock] => [clock<=60, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 174 , H : 88 , step : 0 >" as EC_174 #Orange
EC_174: 1: par
EC_174: 2: 	par
EC_174: 3: 		par
EC_174: 4: 			alt invariant( [clock] ~> clock<=60 )
EC_174: 5: 				[ clock==60 ] / activate the alarm
EC_174: 6: 				call( PostProc_R1 )
EC_174: 7: 		||
EC_174: 8: 			NIL
EC_174: 9: 	||
EC_174: 10: 		NIL
EC_174: 11: ||
EC_174: 12: 	NIL

EC_174 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_174  --> EC_175 : \lact [True] / META:REDUNDANCE:EC< id : 10 , H : 7 >

state "EC< id : 175 , H : 89 , step : 0 >" as EC_175 #Green
EC_175: 1: par
EC_175: 2: 	par
EC_175: 3: 		par
EC_175: 4: 			alt invariant( [clock] ~> clock<=60 )
EC_175: 5: 				[ clock==60 ] / activate the alarm
EC_175: 6: 				call( PostProc_R1 )
EC_175: 7: 		||
EC_175: 8: 			NIL
EC_175: 9: 	||
EC_175: 10: 		NIL
EC_175: 11: ||
EC_175: 12: 	NIL

EC_175 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_158  --> EC_160 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 160 , H : 78 , step : 44 >" as EC_160 #LightBlue
EC_160: 1: par
EC_160: 2: 	par
EC_160: 3: 		par sync [the alarm is disarmed]
EC_160: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_160: 5: 				[ true ] / the alarm is disarmed
EC_160: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_160: 7: 					[ clock==0 ] / turn off the tone
EC_160: 8: 					call( PostProc_R4 )
EC_160: 9: 		&&
EC_160: 10: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_160: 11: 				[ clock==0 ] / alert the emergency center
EC_160: 12: 				call( PostProc_R9 )
EC_160: 13: 	||
EC_160: 14: 		NIL
EC_160: 15: ||
EC_160: 16: 	NIL

EC_160 : DBM: R7_x_resp=60, R3_x_resp=60, clock=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_160  --> EC_177 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 177 , H : 79 , step : 0 >" as EC_177 #Orange
EC_177: 1: par
EC_177: 2: 	par
EC_177: 3: 		par sync [the alarm is disarmed]
EC_177: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_177: 5: 				[ true ] / the alarm is disarmed
EC_177: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_177: 7: 					[ clock==0 ] / turn off the tone
EC_177: 8: 					call( PostProc_R4 )
EC_177: 9: 		&&
EC_177: 10: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_177: 11: 				[ clock==0 ] / alert the emergency center
EC_177: 12: 				call( PostProc_R9 )
EC_177: 13: 	||
EC_177: 14: 		NIL
EC_177: 15: ||
EC_177: 16: 	NIL

EC_177 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_177  --> EC_178 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 178 , H : 80 , step : 45 >" as EC_178 #LightBlue
EC_178: 1: par
EC_178: 2: 	par
EC_178: 3: 		par sync [the alarm is disarmed]
EC_178: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_178: 5: 				[ true ] / the alarm is disarmed
EC_178: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_178: 7: 					[ clock==0 ] / turn off the tone
EC_178: 8: 					call( PostProc_R4 )
EC_178: 9: 		&&
EC_178: 10: 			call( PostProc_R9 )
EC_178: 11: 	||
EC_178: 12: 		NIL
EC_178: 13: ||
EC_178: 14: 	NIL

EC_178 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_178  --> EC_179 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 179 , H : 81 , step : 0 >" as EC_179 #Pink
EC_179: 1: par
EC_179: 2: 	par
EC_179: 3: 		par sync [the alarm is disarmed]
EC_179: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_179: 5: 				[ true ] / the alarm is disarmed
EC_179: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_179: 7: 					[ clock==0 ] / turn off the tone
EC_179: 8: 					call( PostProc_R4 )
EC_179: 9: 		&&
EC_179: 10: 			alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_179: 11: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_179: 12: 				call( PostProc_R7 )
EC_179: 13: 			++
EC_179: 14: 				[ R7_x_resp==60 ] / deadline at 60
EC_179: 15: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_179: 16: 					[ clock==0 ] / alert the emergency center
EC_179: 17: 					call( PostProc_R9 )
EC_179: 18: 	||
EC_179: 19: 		NIL
EC_179: 20: ||
EC_179: 21: 	NIL

EC_179 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_179  --> EC_181 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 181 , H : 82 , step : 0 >" as EC_181 #Orange
EC_181: 1: par
EC_181: 2: 	par
EC_181: 3: 		par sync [the alarm is disarmed]
EC_181: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_181: 5: 				[ true ] / the alarm is disarmed
EC_181: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_181: 7: 					[ clock==0 ] / turn off the tone
EC_181: 8: 					call( PostProc_R4 )
EC_181: 9: 		&&
EC_181: 10: 			alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_181: 11: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_181: 12: 				call( PostProc_R7 )
EC_181: 13: 			++
EC_181: 14: 				[ R7_x_resp==60 ] / deadline at 60
EC_181: 15: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_181: 16: 					[ clock==0 ] / alert the emergency center
EC_181: 17: 					call( PostProc_R9 )
EC_181: 18: 	||
EC_181: 19: 		NIL
EC_181: 20: ||
EC_181: 21: 	NIL

EC_181 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_181  --> EC_182 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 182 , H : 83 , step : 46 >" as EC_182 #LightBlue
EC_182: 1: par
EC_182: 2: 	par
EC_182: 3: 		par sync [the alarm is disarmed]
EC_182: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_182: 5: 				[ true ] / the alarm is disarmed
EC_182: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_182: 7: 					[ clock==0 ] / turn off the tone
EC_182: 8: 					call( PostProc_R4 )
EC_182: 9: 		&&
EC_182: 10: 			call( PostProc_R7 )
EC_182: 11: 	||
EC_182: 12: 		NIL
EC_182: 13: ||
EC_182: 14: 	NIL

EC_182 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_182  --> EC_184 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 184 , H : 84 , step : 0 >" as EC_184 #Pink
EC_184: 1: par
EC_184: 2: 	par
EC_184: 3: 		par sync [the alarm is disarmed]
EC_184: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_184: 5: 				[ true ] / the alarm is disarmed
EC_184: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_184: 7: 					[ clock==0 ] / turn off the tone
EC_184: 8: 					call( PostProc_R4 )
EC_184: 9: 		&&
EC_184: 10: 			alt invariant( [] ~> R7_x_resp<=60 )
EC_184: 11: 				[ true ] / the alarm is disarmed
EC_184: 12: 				call( PostProc_R8 )
EC_184: 13: 	||
EC_184: 14: 		NIL
EC_184: 15: ||
EC_184: 16: 	NIL

EC_184 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_184  --> EC_186 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 186 , H : 85 , step : 0 >" as EC_186 #Orange
EC_186: 1: par
EC_186: 2: 	par
EC_186: 3: 		par sync [the alarm is disarmed]
EC_186: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_186: 5: 				[ true ] / the alarm is disarmed
EC_186: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_186: 7: 					[ clock==0 ] / turn off the tone
EC_186: 8: 					call( PostProc_R4 )
EC_186: 9: 		&&
EC_186: 10: 			alt invariant( [] ~> R7_x_resp<=60 )
EC_186: 11: 				[ true ] / the alarm is disarmed
EC_186: 12: 				call( PostProc_R8 )
EC_186: 13: 	||
EC_186: 14: 		NIL
EC_186: 15: ||
EC_186: 16: 	NIL

EC_186 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_186  --> EC_187 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 187 , H : 86 , step : 47 >" as EC_187 #LightBlue
EC_187: 1: par
EC_187: 2: 	par
EC_187: 3: 		par sync [the alarm is disarmed]
EC_187: 4: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_187: 5: 				[ clock==0 ] / turn off the tone
EC_187: 6: 				call( PostProc_R4 )
EC_187: 7: 		&&
EC_187: 8: 			call( PostProc_R8 )
EC_187: 9: 	||
EC_187: 10: 		NIL
EC_187: 11: ||
EC_187: 12: 	NIL

EC_187 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_187  --> EC_188 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 188 , H : 87 , step : 0 >" as EC_188 #Pink
EC_188: 1: par
EC_188: 2: 	par
EC_188: 3: 		par sync [the alarm is disarmed]
EC_188: 4: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_188: 5: 				[ clock==0 ] / turn off the tone
EC_188: 6: 				call( PostProc_R4 )
EC_188: 7: 		&&
EC_188: 8: 			NIL
EC_188: 9: 	||
EC_188: 10: 		NIL
EC_188: 11: ||
EC_188: 12: 	NIL

EC_188 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_188  --> EC_190 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 190 , H : 88 , step : 0 >" as EC_190 #Orange
EC_190: 1: par
EC_190: 2: 	par
EC_190: 3: 		par sync [the alarm is disarmed]
EC_190: 4: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_190: 5: 				[ clock==0 ] / turn off the tone
EC_190: 6: 				call( PostProc_R4 )
EC_190: 7: 		&&
EC_190: 8: 			NIL
EC_190: 9: 	||
EC_190: 10: 		NIL
EC_190: 11: ||
EC_190: 12: 	NIL

EC_190 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_190  --> EC_191 : \lact [True] / META:REDUNDANCE:EC< id : 60 , H : 29 >

state "EC< id : 191 , H : 89 , step : 0 >" as EC_191 #Green
EC_191: 1: par
EC_191: 2: 	par
EC_191: 3: 		par sync [the alarm is disarmed]
EC_191: 4: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_191: 5: 				[ clock==0 ] / turn off the tone
EC_191: 6: 				call( PostProc_R4 )
EC_191: 7: 		&&
EC_191: 8: 			NIL
EC_191: 9: 	||
EC_191: 10: 		NIL
EC_191: 11: ||
EC_191: 12: 	NIL

EC_191 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_181  --> EC_183 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 183 , H : 83 , step : 48 >" as EC_183 #LightBlue
EC_183: 1: par
EC_183: 2: 	par
EC_183: 3: 		par sync [the alarm is disarmed]
EC_183: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_183: 5: 				[ true ] / the alarm is disarmed
EC_183: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_183: 7: 					[ clock==0 ] / turn off the tone
EC_183: 8: 					call( PostProc_R4 )
EC_183: 9: 		&&
EC_183: 10: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_183: 11: 				[ clock==0 ] / alert the emergency center
EC_183: 12: 				call( PostProc_R9 )
EC_183: 13: 	||
EC_183: 14: 		NIL
EC_183: 15: ||
EC_183: 16: 	NIL

EC_183 : DBM: R7_x_resp=60, R3_x_resp=120, clock=60, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp=clock, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_183  --> EC_193 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 193 , H : 84 , step : 0 >" as EC_193 #Orange
EC_193: 1: par
EC_193: 2: 	par
EC_193: 3: 		par sync [the alarm is disarmed]
EC_193: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_193: 5: 				[ true ] / the alarm is disarmed
EC_193: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_193: 7: 					[ clock==0 ] / turn off the tone
EC_193: 8: 					call( PostProc_R4 )
EC_193: 9: 		&&
EC_193: 10: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_193: 11: 				[ clock==0 ] / alert the emergency center
EC_193: 12: 				call( PostProc_R9 )
EC_193: 13: 	||
EC_193: 14: 		NIL
EC_193: 15: ||
EC_193: 16: 	NIL

EC_193 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_193  --> EC_194 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 194 , H : 85 , step : 49 >" as EC_194 #LightBlue
EC_194: 1: par
EC_194: 2: 	par
EC_194: 3: 		par sync [the alarm is disarmed]
EC_194: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_194: 5: 				[ true ] / the alarm is disarmed
EC_194: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_194: 7: 					[ clock==0 ] / turn off the tone
EC_194: 8: 					call( PostProc_R4 )
EC_194: 9: 		&&
EC_194: 10: 			call( PostProc_R9 )
EC_194: 11: 	||
EC_194: 12: 		NIL
EC_194: 13: ||
EC_194: 14: 	NIL

EC_194 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_194  --> EC_195 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 195 , H : 86 , step : 0 >" as EC_195 #Pink
EC_195: 1: par
EC_195: 2: 	par
EC_195: 3: 		par sync [the alarm is disarmed]
EC_195: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_195: 5: 				[ true ] / the alarm is disarmed
EC_195: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_195: 7: 					[ clock==0 ] / turn off the tone
EC_195: 8: 					call( PostProc_R4 )
EC_195: 9: 		&&
EC_195: 10: 			alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_195: 11: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_195: 12: 				call( PostProc_R7 )
EC_195: 13: 			++
EC_195: 14: 				[ R7_x_resp==60 ] / deadline at 60
EC_195: 15: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_195: 16: 					[ clock==0 ] / alert the emergency center
EC_195: 17: 					call( PostProc_R9 )
EC_195: 18: 	||
EC_195: 19: 		NIL
EC_195: 20: ||
EC_195: 21: 	NIL

EC_195 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_195  --> EC_197 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 197 , H : 87 , step : 0 >" as EC_197 #Orange
EC_197: 1: par
EC_197: 2: 	par
EC_197: 3: 		par sync [the alarm is disarmed]
EC_197: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_197: 5: 				[ true ] / the alarm is disarmed
EC_197: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_197: 7: 					[ clock==0 ] / turn off the tone
EC_197: 8: 					call( PostProc_R4 )
EC_197: 9: 		&&
EC_197: 10: 			alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_197: 11: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_197: 12: 				call( PostProc_R7 )
EC_197: 13: 			++
EC_197: 14: 				[ R7_x_resp==60 ] / deadline at 60
EC_197: 15: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_197: 16: 					[ clock==0 ] / alert the emergency center
EC_197: 17: 					call( PostProc_R9 )
EC_197: 18: 	||
EC_197: 19: 		NIL
EC_197: 20: ||
EC_197: 21: 	NIL

EC_197 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_197  --> EC_198 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 198 , H : 88 , step : 50 >" as EC_198 #LightBlue
EC_198: 1: par
EC_198: 2: 	par
EC_198: 3: 		par sync [the alarm is disarmed]
EC_198: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_198: 5: 				[ true ] / the alarm is disarmed
EC_198: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_198: 7: 					[ clock==0 ] / turn off the tone
EC_198: 8: 					call( PostProc_R4 )
EC_198: 9: 		&&
EC_198: 10: 			call( PostProc_R7 )
EC_198: 11: 	||
EC_198: 12: 		NIL
EC_198: 13: ||
EC_198: 14: 	NIL

EC_198 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_198  --> EC_200 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 200 , H : 89 , step : 0 >" as EC_200 #Pink
EC_200: 1: par
EC_200: 2: 	par
EC_200: 3: 		par sync [the alarm is disarmed]
EC_200: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_200: 5: 				[ true ] / the alarm is disarmed
EC_200: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_200: 7: 					[ clock==0 ] / turn off the tone
EC_200: 8: 					call( PostProc_R4 )
EC_200: 9: 		&&
EC_200: 10: 			alt invariant( [] ~> R7_x_resp<=60 )
EC_200: 11: 				[ true ] / the alarm is disarmed
EC_200: 12: 				call( PostProc_R8 )
EC_200: 13: 	||
EC_200: 14: 		NIL
EC_200: 15: ||
EC_200: 16: 	NIL

EC_200 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_200  --> EC_202 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 202 , H : 90 , step : 0 >" as EC_202 #Orange
EC_202: 1: par
EC_202: 2: 	par
EC_202: 3: 		par sync [the alarm is disarmed]
EC_202: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_202: 5: 				[ true ] / the alarm is disarmed
EC_202: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_202: 7: 					[ clock==0 ] / turn off the tone
EC_202: 8: 					call( PostProc_R4 )
EC_202: 9: 		&&
EC_202: 10: 			alt invariant( [] ~> R7_x_resp<=60 )
EC_202: 11: 				[ true ] / the alarm is disarmed
EC_202: 12: 				call( PostProc_R8 )
EC_202: 13: 	||
EC_202: 14: 		NIL
EC_202: 15: ||
EC_202: 16: 	NIL

EC_202 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_202  --> EC_203 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 203 , H : 91 , step : 51 >" as EC_203 #LightBlue
EC_203: 1: par
EC_203: 2: 	par
EC_203: 3: 		par sync [the alarm is disarmed]
EC_203: 4: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_203: 5: 				[ clock==0 ] / turn off the tone
EC_203: 6: 				call( PostProc_R4 )
EC_203: 7: 		&&
EC_203: 8: 			call( PostProc_R8 )
EC_203: 9: 	||
EC_203: 10: 		NIL
EC_203: 11: ||
EC_203: 12: 	NIL

EC_203 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_203  --> EC_204 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 204 , H : 92 , step : 0 >" as EC_204 #Pink
EC_204: 1: par
EC_204: 2: 	par
EC_204: 3: 		par sync [the alarm is disarmed]
EC_204: 4: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_204: 5: 				[ clock==0 ] / turn off the tone
EC_204: 6: 				call( PostProc_R4 )
EC_204: 7: 		&&
EC_204: 8: 			NIL
EC_204: 9: 	||
EC_204: 10: 		NIL
EC_204: 11: ||
EC_204: 12: 	NIL

EC_204 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_204  --> EC_206 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 206 , H : 93 , step : 0 >" as EC_206 #Orange
EC_206: 1: par
EC_206: 2: 	par
EC_206: 3: 		par sync [the alarm is disarmed]
EC_206: 4: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_206: 5: 				[ clock==0 ] / turn off the tone
EC_206: 6: 				call( PostProc_R4 )
EC_206: 7: 		&&
EC_206: 8: 			NIL
EC_206: 9: 	||
EC_206: 10: 		NIL
EC_206: 11: ||
EC_206: 12: 	NIL

EC_206 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_206  --> EC_207 : \lact [True] / META:REDUNDANCE:EC< id : 133 , H : 61 >

state "EC< id : 207 , H : 94 , step : 0 >" as EC_207 #Green
EC_207: 1: par
EC_207: 2: 	par
EC_207: 3: 		par sync [the alarm is disarmed]
EC_207: 4: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_207: 5: 				[ clock==0 ] / turn off the tone
EC_207: 6: 				call( PostProc_R4 )
EC_207: 7: 		&&
EC_207: 8: 			NIL
EC_207: 9: 	||
EC_207: 10: 		NIL
EC_207: 11: ||
EC_207: 12: 	NIL

EC_207 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_197  --> EC_199 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 199 , H : 88 , step : 52 >" as EC_199 #LightBlue
EC_199: 1: par
EC_199: 2: 	par
EC_199: 3: 		par sync [the alarm is disarmed]
EC_199: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_199: 5: 				[ true ] / the alarm is disarmed
EC_199: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_199: 7: 					[ clock==0 ] / turn off the tone
EC_199: 8: 					call( PostProc_R4 )
EC_199: 9: 		&&
EC_199: 10: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_199: 11: 				[ clock==0 ] / alert the emergency center
EC_199: 12: 				call( PostProc_R9 )
EC_199: 13: 	||
EC_199: 14: 		NIL
EC_199: 15: ||
EC_199: 16: 	NIL

EC_199 : DBM: R7_x_resp=60, R3_x_resp=180, clock=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp=clock, R3_x_resp-clock<=120,\l   clock-R3_x_resp<=-120,
EC_199  --> EC_209 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 209 , H : 89 , step : 0 >" as EC_209 #Orange
EC_209: 1: par
EC_209: 2: 	par
EC_209: 3: 		par sync [the alarm is disarmed]
EC_209: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_209: 5: 				[ true ] / the alarm is disarmed
EC_209: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_209: 7: 					[ clock==0 ] / turn off the tone
EC_209: 8: 					call( PostProc_R4 )
EC_209: 9: 		&&
EC_209: 10: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_209: 11: 				[ clock==0 ] / alert the emergency center
EC_209: 12: 				call( PostProc_R9 )
EC_209: 13: 	||
EC_209: 14: 		NIL
EC_209: 15: ||
EC_209: 16: 	NIL

EC_209 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_209  --> EC_210 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 210 , H : 90 , step : 53 >" as EC_210 #LightBlue
EC_210: 1: par
EC_210: 2: 	par
EC_210: 3: 		par sync [the alarm is disarmed]
EC_210: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_210: 5: 				[ true ] / the alarm is disarmed
EC_210: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_210: 7: 					[ clock==0 ] / turn off the tone
EC_210: 8: 					call( PostProc_R4 )
EC_210: 9: 		&&
EC_210: 10: 			call( PostProc_R9 )
EC_210: 11: 	||
EC_210: 12: 		NIL
EC_210: 13: ||
EC_210: 14: 	NIL

EC_210 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_210  --> EC_211 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 211 , H : 91 , step : 0 >" as EC_211 #Pink
EC_211: 1: par
EC_211: 2: 	par
EC_211: 3: 		par sync [the alarm is disarmed]
EC_211: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_211: 5: 				[ true ] / the alarm is disarmed
EC_211: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_211: 7: 					[ clock==0 ] / turn off the tone
EC_211: 8: 					call( PostProc_R4 )
EC_211: 9: 		&&
EC_211: 10: 			alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_211: 11: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_211: 12: 				call( PostProc_R7 )
EC_211: 13: 			++
EC_211: 14: 				[ R7_x_resp==60 ] / deadline at 60
EC_211: 15: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_211: 16: 					[ clock==0 ] / alert the emergency center
EC_211: 17: 					call( PostProc_R9 )
EC_211: 18: 	||
EC_211: 19: 		NIL
EC_211: 20: ||
EC_211: 21: 	NIL

EC_211 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_211  --> EC_213 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 213 , H : 92 , step : 0 >" as EC_213 #Orange
EC_213: 1: par
EC_213: 2: 	par
EC_213: 3: 		par sync [the alarm is disarmed]
EC_213: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_213: 5: 				[ true ] / the alarm is disarmed
EC_213: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_213: 7: 					[ clock==0 ] / turn off the tone
EC_213: 8: 					call( PostProc_R4 )
EC_213: 9: 		&&
EC_213: 10: 			alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_213: 11: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_213: 12: 				call( PostProc_R7 )
EC_213: 13: 			++
EC_213: 14: 				[ R7_x_resp==60 ] / deadline at 60
EC_213: 15: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_213: 16: 					[ clock==0 ] / alert the emergency center
EC_213: 17: 					call( PostProc_R9 )
EC_213: 18: 	||
EC_213: 19: 		NIL
EC_213: 20: ||
EC_213: 21: 	NIL

EC_213 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_213  --> EC_214 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 214 , H : 93 , step : 54 >" as EC_214 #LightBlue
EC_214: 1: par
EC_214: 2: 	par
EC_214: 3: 		par sync [the alarm is disarmed]
EC_214: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_214: 5: 				[ true ] / the alarm is disarmed
EC_214: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_214: 7: 					[ clock==0 ] / turn off the tone
EC_214: 8: 					call( PostProc_R4 )
EC_214: 9: 		&&
EC_214: 10: 			call( PostProc_R7 )
EC_214: 11: 	||
EC_214: 12: 		NIL
EC_214: 13: ||
EC_214: 14: 	NIL

EC_214 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_214  --> EC_216 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 216 , H : 94 , step : 0 >" as EC_216 #Pink
EC_216: 1: par
EC_216: 2: 	par
EC_216: 3: 		par sync [the alarm is disarmed]
EC_216: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_216: 5: 				[ true ] / the alarm is disarmed
EC_216: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_216: 7: 					[ clock==0 ] / turn off the tone
EC_216: 8: 					call( PostProc_R4 )
EC_216: 9: 		&&
EC_216: 10: 			alt invariant( [] ~> R7_x_resp<=60 )
EC_216: 11: 				[ true ] / the alarm is disarmed
EC_216: 12: 				call( PostProc_R8 )
EC_216: 13: 	||
EC_216: 14: 		NIL
EC_216: 15: ||
EC_216: 16: 	NIL

EC_216 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_216  --> EC_218 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 218 , H : 95 , step : 0 >" as EC_218 #Orange
EC_218: 1: par
EC_218: 2: 	par
EC_218: 3: 		par sync [the alarm is disarmed]
EC_218: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_218: 5: 				[ true ] / the alarm is disarmed
EC_218: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_218: 7: 					[ clock==0 ] / turn off the tone
EC_218: 8: 					call( PostProc_R4 )
EC_218: 9: 		&&
EC_218: 10: 			alt invariant( [] ~> R7_x_resp<=60 )
EC_218: 11: 				[ true ] / the alarm is disarmed
EC_218: 12: 				call( PostProc_R8 )
EC_218: 13: 	||
EC_218: 14: 		NIL
EC_218: 15: ||
EC_218: 16: 	NIL

EC_218 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_218  --> EC_219 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 219 , H : 96 , step : 55 >" as EC_219 #LightBlue
EC_219: 1: par
EC_219: 2: 	par
EC_219: 3: 		par sync [the alarm is disarmed]
EC_219: 4: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_219: 5: 				[ clock==0 ] / turn off the tone
EC_219: 6: 				call( PostProc_R4 )
EC_219: 7: 		&&
EC_219: 8: 			call( PostProc_R8 )
EC_219: 9: 	||
EC_219: 10: 		NIL
EC_219: 11: ||
EC_219: 12: 	NIL

EC_219 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_219  --> EC_220 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 220 , H : 97 , step : 0 >" as EC_220 #Pink
EC_220: 1: par
EC_220: 2: 	par
EC_220: 3: 		par sync [the alarm is disarmed]
EC_220: 4: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_220: 5: 				[ clock==0 ] / turn off the tone
EC_220: 6: 				call( PostProc_R4 )
EC_220: 7: 		&&
EC_220: 8: 			NIL
EC_220: 9: 	||
EC_220: 10: 		NIL
EC_220: 11: ||
EC_220: 12: 	NIL

EC_220 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_220  --> EC_222 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 222 , H : 98 , step : 0 >" as EC_222 #Orange
EC_222: 1: par
EC_222: 2: 	par
EC_222: 3: 		par sync [the alarm is disarmed]
EC_222: 4: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_222: 5: 				[ clock==0 ] / turn off the tone
EC_222: 6: 				call( PostProc_R4 )
EC_222: 7: 		&&
EC_222: 8: 			NIL
EC_222: 9: 	||
EC_222: 10: 		NIL
EC_222: 11: ||
EC_222: 12: 	NIL

EC_222 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_222  --> EC_223 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True]\lact [clock==0] / turn off the tone

state "EC< id : 223 , H : 99 , step : 56 >" as EC_223 #LightBlue
EC_223: 1: par
EC_223: 2: 	par
EC_223: 3: 		par
EC_223: 4: 			call( PostProc_R4 )
EC_223: 5: 		||
EC_223: 6: 			NIL
EC_223: 7: 	||
EC_223: 8: 		NIL
EC_223: 9: ||
EC_223: 10: 	NIL

EC_223 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_223  --> EC_224 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R4, Proc_R1

state "EC< id : 224 , H : 100 , step : 0 >" as EC_224 #Pink
EC_224: 1: par
EC_224: 2: 	par
EC_224: 3: 		par
EC_224: 4: 			alt invariant( [] ~> true )
EC_224: 5: 				[ true ] / the set button is pressed
EC_224: 6: 				alt invariant( [clock] ~> clock<=60 )
EC_224: 7: 					[ clock==60 ] / activate the alarm
EC_224: 8: 					call( PostProc_R1 )
EC_224: 9: 		||
EC_224: 10: 			NIL
EC_224: 11: 	||
EC_224: 12: 		NIL
EC_224: 13: ||
EC_224: 14: 	NIL

EC_224 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_224  --> EC_226 : inv [] => [true, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 226 , H : 101 , step : 0 >" as EC_226 #Orange
EC_226: 1: par
EC_226: 2: 	par
EC_226: 3: 		par
EC_226: 4: 			alt invariant( [] ~> true )
EC_226: 5: 				[ true ] / the set button is pressed
EC_226: 6: 				alt invariant( [clock] ~> clock<=60 )
EC_226: 7: 					[ clock==60 ] / activate the alarm
EC_226: 8: 					call( PostProc_R1 )
EC_226: 9: 		||
EC_226: 10: 			NIL
EC_226: 11: 	||
EC_226: 12: 		NIL
EC_226: 13: ||
EC_226: 14: 	NIL

EC_226 : DBM: R3_x_resp>=180, R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_226  --> EC_227 : inv [] => [true, True, True, True]\lact [true] / the set button is pressed

state "EC< id : 227 , H : 102 , step : 57 >" as EC_227 #LightBlue
EC_227: 1: par
EC_227: 2: 	par
EC_227: 3: 		par
EC_227: 4: 			alt invariant( [clock] ~> clock<=60 )
EC_227: 5: 				[ clock==60 ] / activate the alarm
EC_227: 6: 				call( PostProc_R1 )
EC_227: 7: 		||
EC_227: 8: 			NIL
EC_227: 9: 	||
EC_227: 10: 		NIL
EC_227: 11: ||
EC_227: 12: 	NIL

EC_227 : DBM: R3_x_resp>=180, R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_227  --> EC_229 : inv [clock] => [clock<=60, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 229 , H : 103 , step : 0 >" as EC_229 #Orange
EC_229: 1: par
EC_229: 2: 	par
EC_229: 3: 		par
EC_229: 4: 			alt invariant( [clock] ~> clock<=60 )
EC_229: 5: 				[ clock==60 ] / activate the alarm
EC_229: 6: 				call( PostProc_R1 )
EC_229: 7: 		||
EC_229: 8: 			NIL
EC_229: 9: 	||
EC_229: 10: 		NIL
EC_229: 11: ||
EC_229: 12: 	NIL

EC_229 : DBM: R3_x_resp>=180, clock<=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-180,
EC_229  --> EC_230 : inv [clock] => [clock<=60, True, True, True]\lact [clock==60] / activate the alarm

state "EC< id : 230 , H : 104 , step : 58 >" as EC_230 #LightBlue
EC_230: 1: par
EC_230: 2: 	par
EC_230: 3: 		par
EC_230: 4: 			call( PostProc_R1 )
EC_230: 5: 		||
EC_230: 6: 			NIL
EC_230: 7: 	||
EC_230: 8: 		NIL
EC_230: 9: ||
EC_230: 10: 	NIL

EC_230 : DBM: R7_x_resp>=60, R3_x_resp>=240, clock=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-180,
EC_230  --> EC_231 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R1, Proc_R2

state "EC< id : 231 , H : 105 , step : 0 >" as EC_231 #Pink
EC_231: 1: par
EC_231: 2: 	par
EC_231: 3: 		par
EC_231: 4: 			alt invariant( [] ~> true )
EC_231: 5: 				[ true ] / motion is detected
EC_231: 6: 				alt invariant( [clock] ~> clock<=0 )
EC_231: 7: 					[ clock==0 ] / emit a tone
EC_231: 8: 					call( PostProc_R2 )
EC_231: 9: 		||
EC_231: 10: 			NIL
EC_231: 11: 	||
EC_231: 12: 		NIL
EC_231: 13: ||
EC_231: 14: 	NIL

EC_231 : DBM: R7_x_resp>=60, R3_x_resp>=240, clock=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-180,
EC_231  --> EC_233 : inv [] => [true, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 233 , H : 106 , step : 0 >" as EC_233 #Orange
EC_233: 1: par
EC_233: 2: 	par
EC_233: 3: 		par
EC_233: 4: 			alt invariant( [] ~> true )
EC_233: 5: 				[ true ] / motion is detected
EC_233: 6: 				alt invariant( [clock] ~> clock<=0 )
EC_233: 7: 					[ clock==0 ] / emit a tone
EC_233: 8: 					call( PostProc_R2 )
EC_233: 9: 		||
EC_233: 10: 			NIL
EC_233: 11: 	||
EC_233: 12: 		NIL
EC_233: 13: ||
EC_233: 14: 	NIL

EC_233 : DBM: R7_x_resp>=60, R3_x_resp>=240, clock>=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-180,
EC_233  --> EC_234 : inv [] => [true, True, True, True]\lact [true] / motion is detected

state "EC< id : 234 , H : 107 , step : 59 >" as EC_234 #LightBlue
EC_234: 1: par
EC_234: 2: 	par
EC_234: 3: 		par
EC_234: 4: 			alt invariant( [clock] ~> clock<=0 )
EC_234: 5: 				[ clock==0 ] / emit a tone
EC_234: 6: 				call( PostProc_R2 )
EC_234: 7: 		||
EC_234: 8: 			NIL
EC_234: 9: 	||
EC_234: 10: 		NIL
EC_234: 11: ||
EC_234: 12: 	NIL

EC_234 : DBM: R7_x_resp>=60, R3_x_resp>=240, clock>=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-180,
EC_234  --> EC_236 : inv [clock] => [clock<=0, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 236 , H : 108 , step : 0 >" as EC_236 #Orange
EC_236: 1: par
EC_236: 2: 	par
EC_236: 3: 		par
EC_236: 4: 			alt invariant( [clock] ~> clock<=0 )
EC_236: 5: 				[ clock==0 ] / emit a tone
EC_236: 6: 				call( PostProc_R2 )
EC_236: 7: 		||
EC_236: 8: 			NIL
EC_236: 9: 	||
EC_236: 10: 		NIL
EC_236: 11: ||
EC_236: 12: 	NIL

EC_236 : DBM: R7_x_resp>=60, R3_x_resp>=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-240,
EC_236  --> EC_237 : inv [clock] => [clock<=0, True, True, True]\lact [clock==0] / emit a tone

state "EC< id : 237 , H : 109 , step : 60 >" as EC_237 #LightBlue
EC_237: 1: par
EC_237: 2: 	par
EC_237: 3: 		par
EC_237: 4: 			call( PostProc_R2 )
EC_237: 5: 		||
EC_237: 6: 			NIL
EC_237: 7: 	||
EC_237: 8: 		NIL
EC_237: 9: ||
EC_237: 10: 	NIL

EC_237 : DBM: R7_x_resp>=60, R3_x_resp>=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-240,
EC_237  --> EC_238 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R2

state "EC< id : 238 , H : 110 , step : 0 >" as EC_238 #Pink
EC_238: 1: par
EC_238: 2: 	par
EC_238: 3: 		par
EC_238: 4: 			par sync [the alarm is disarmed]
EC_238: 5: 				alt invariant( [R3_x_resp] ~> R3_x_resp<=300 / start time period within 0 to 300 )
EC_238: 6: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_238: 7: 					call( PostProc_R3 )
EC_238: 8: 				++
EC_238: 9: 					[ R3_x_resp==300 ] / deadline at 300
EC_238: 10: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_238: 11: 						[ clock==0 ] / turn off the tone
EC_238: 12: 						call( PostProc_R5 )
EC_238: 13: 			&&
EC_238: 14: 				alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_238: 15: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_238: 16: 					call( PostProc_R7 )
EC_238: 17: 				++
EC_238: 18: 					[ R7_x_resp==60 ] / deadline at 60
EC_238: 19: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_238: 20: 						[ clock==0 ] / alert the emergency center
EC_238: 21: 						call( PostProc_R9 )
EC_238: 22: 		||
EC_238: 23: 			NIL
EC_238: 24: 	||
EC_238: 25: 		NIL
EC_238: 26: ||
EC_238: 27: 	NIL

EC_238 : DBM: R7_x_resp>=60, R3_x_resp>=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-240,
EC_238  --> EC_240 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [True] / META:[start time period within 0 to 300, start time period within 0 to 60]

state "EC< id : 240 , H : 111 , step : 0 >" as EC_240 #Orange
EC_240: 1: par
EC_240: 2: 	par
EC_240: 3: 		par
EC_240: 4: 			par sync [the alarm is disarmed]
EC_240: 5: 				alt invariant( [R3_x_resp] ~> R3_x_resp<=300 / start time period within 0 to 300 )
EC_240: 6: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_240: 7: 					call( PostProc_R3 )
EC_240: 8: 				++
EC_240: 9: 					[ R3_x_resp==300 ] / deadline at 300
EC_240: 10: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_240: 11: 						[ clock==0 ] / turn off the tone
EC_240: 12: 						call( PostProc_R5 )
EC_240: 13: 			&&
EC_240: 14: 				alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_240: 15: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_240: 16: 					call( PostProc_R7 )
EC_240: 17: 				++
EC_240: 18: 					[ R7_x_resp==60 ] / deadline at 60
EC_240: 19: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_240: 20: 						[ clock==0 ] / alert the emergency center
EC_240: 21: 						call( PostProc_R9 )
EC_240: 22: 		||
EC_240: 23: 			NIL
EC_240: 24: 	||
EC_240: 25: 		NIL
EC_240: 26: ||
EC_240: 27: 	NIL

EC_240 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_240  --> EC_241 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 241 , H : 112 , step : 61 >" as EC_241 #LightBlue
EC_241: 1: par
EC_241: 2: 	par
EC_241: 3: 		par
EC_241: 4: 			par sync [the alarm is disarmed]
EC_241: 5: 				call( PostProc_R3 )
EC_241: 6: 			&&
EC_241: 7: 				alt invariant( [] ~> R7_x_resp<=60 )
EC_241: 8: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_241: 9: 					call( PostProc_R7 )
EC_241: 10: 				++
EC_241: 11: 					[ R7_x_resp==60 ] / deadline at 60
EC_241: 12: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_241: 13: 						[ clock==0 ] / alert the emergency center
EC_241: 14: 						call( PostProc_R9 )
EC_241: 15: 		||
EC_241: 16: 			NIL
EC_241: 17: 	||
EC_241: 18: 		NIL
EC_241: 19: ||
EC_241: 20: 	NIL

EC_241 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_241  --> EC_245 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 245 , H : 113 , step : 0 >" as EC_245 #Pink
EC_245: 1: par
EC_245: 2: 	par
EC_245: 3: 		par
EC_245: 4: 			par sync [the alarm is disarmed]
EC_245: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_245: 6: 					[ true ] / the alarm is disarmed
EC_245: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_245: 8: 						[ clock==0 ] / turn off the tone
EC_245: 9: 						call( PostProc_R4 )
EC_245: 10: 			&&
EC_245: 11: 				alt invariant( [] ~> R7_x_resp<=60 )
EC_245: 12: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_245: 13: 					call( PostProc_R7 )
EC_245: 14: 				++
EC_245: 15: 					[ R7_x_resp==60 ] / deadline at 60
EC_245: 16: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_245: 17: 						[ clock==0 ] / alert the emergency center
EC_245: 18: 						call( PostProc_R9 )
EC_245: 19: 		||
EC_245: 20: 			NIL
EC_245: 21: 	||
EC_245: 22: 		NIL
EC_245: 23: ||
EC_245: 24: 	NIL

EC_245 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_245  --> EC_247 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 247 , H : 114 , step : 0 >" as EC_247 #Orange
EC_247: 1: par
EC_247: 2: 	par
EC_247: 3: 		par
EC_247: 4: 			par sync [the alarm is disarmed]
EC_247: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_247: 6: 					[ true ] / the alarm is disarmed
EC_247: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_247: 8: 						[ clock==0 ] / turn off the tone
EC_247: 9: 						call( PostProc_R4 )
EC_247: 10: 			&&
EC_247: 11: 				alt invariant( [] ~> R7_x_resp<=60 )
EC_247: 12: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_247: 13: 					call( PostProc_R7 )
EC_247: 14: 				++
EC_247: 15: 					[ R7_x_resp==60 ] / deadline at 60
EC_247: 16: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_247: 17: 						[ clock==0 ] / alert the emergency center
EC_247: 18: 						call( PostProc_R9 )
EC_247: 19: 		||
EC_247: 20: 			NIL
EC_247: 21: 	||
EC_247: 22: 		NIL
EC_247: 23: ||
EC_247: 24: 	NIL

EC_247 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_247  --> EC_248 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 248 , H : 115 , step : 62 >" as EC_248 #LightBlue
EC_248: 1: par
EC_248: 2: 	par
EC_248: 3: 		par
EC_248: 4: 			par sync [the alarm is disarmed]
EC_248: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_248: 6: 					[ true ] / the alarm is disarmed
EC_248: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_248: 8: 						[ clock==0 ] / turn off the tone
EC_248: 9: 						call( PostProc_R4 )
EC_248: 10: 			&&
EC_248: 11: 				call( PostProc_R7 )
EC_248: 12: 		||
EC_248: 13: 			NIL
EC_248: 14: 	||
EC_248: 15: 		NIL
EC_248: 16: ||
EC_248: 17: 	NIL

EC_248 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_248  --> EC_250 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 250 , H : 116 , step : 0 >" as EC_250 #Pink
EC_250: 1: par
EC_250: 2: 	par
EC_250: 3: 		par
EC_250: 4: 			par sync [the alarm is disarmed]
EC_250: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_250: 6: 					[ true ] / the alarm is disarmed
EC_250: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_250: 8: 						[ clock==0 ] / turn off the tone
EC_250: 9: 						call( PostProc_R4 )
EC_250: 10: 			&&
EC_250: 11: 				alt invariant( [] ~> R7_x_resp<=60 )
EC_250: 12: 					[ true ] / the alarm is disarmed
EC_250: 13: 					call( PostProc_R8 )
EC_250: 14: 		||
EC_250: 15: 			NIL
EC_250: 16: 	||
EC_250: 17: 		NIL
EC_250: 18: ||
EC_250: 19: 	NIL

EC_250 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_250  --> EC_252 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 252 , H : 117 , step : 0 >" as EC_252 #Orange
EC_252: 1: par
EC_252: 2: 	par
EC_252: 3: 		par
EC_252: 4: 			par sync [the alarm is disarmed]
EC_252: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_252: 6: 					[ true ] / the alarm is disarmed
EC_252: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_252: 8: 						[ clock==0 ] / turn off the tone
EC_252: 9: 						call( PostProc_R4 )
EC_252: 10: 			&&
EC_252: 11: 				alt invariant( [] ~> R7_x_resp<=60 )
EC_252: 12: 					[ true ] / the alarm is disarmed
EC_252: 13: 					call( PostProc_R8 )
EC_252: 14: 		||
EC_252: 15: 			NIL
EC_252: 16: 	||
EC_252: 17: 		NIL
EC_252: 18: ||
EC_252: 19: 	NIL

EC_252 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_252  --> EC_253 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 253 , H : 118 , step : 63 >" as EC_253 #LightBlue
EC_253: 1: par
EC_253: 2: 	par
EC_253: 3: 		par
EC_253: 4: 			par sync [the alarm is disarmed]
EC_253: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_253: 6: 					[ clock==0 ] / turn off the tone
EC_253: 7: 					call( PostProc_R4 )
EC_253: 8: 			&&
EC_253: 9: 				call( PostProc_R8 )
EC_253: 10: 		||
EC_253: 11: 			NIL
EC_253: 12: 	||
EC_253: 13: 		NIL
EC_253: 14: ||
EC_253: 15: 	NIL

EC_253 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_253  --> EC_254 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 254 , H : 119 , step : 0 >" as EC_254 #Pink
EC_254: 1: par
EC_254: 2: 	par
EC_254: 3: 		par
EC_254: 4: 			par sync [the alarm is disarmed]
EC_254: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_254: 6: 					[ clock==0 ] / turn off the tone
EC_254: 7: 					call( PostProc_R4 )
EC_254: 8: 			&&
EC_254: 9: 				NIL
EC_254: 10: 		||
EC_254: 11: 			NIL
EC_254: 12: 	||
EC_254: 13: 		NIL
EC_254: 14: ||
EC_254: 15: 	NIL

EC_254 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_254  --> EC_256 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 256 , H : 120 , step : 0 >" as EC_256 #Orange
EC_256: 1: par
EC_256: 2: 	par
EC_256: 3: 		par
EC_256: 4: 			par sync [the alarm is disarmed]
EC_256: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_256: 6: 					[ clock==0 ] / turn off the tone
EC_256: 7: 					call( PostProc_R4 )
EC_256: 8: 			&&
EC_256: 9: 				NIL
EC_256: 10: 		||
EC_256: 11: 			NIL
EC_256: 12: 	||
EC_256: 13: 		NIL
EC_256: 14: ||
EC_256: 15: 	NIL

EC_256 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_256  --> EC_257 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True]\lact [clock==0] / turn off the tone

state "EC< id : 257 , H : 121 , step : 64 >" as EC_257 #LightBlue
EC_257: 1: par
EC_257: 2: 	par
EC_257: 3: 		par
EC_257: 4: 			par
EC_257: 5: 				call( PostProc_R4 )
EC_257: 6: 			||
EC_257: 7: 				NIL
EC_257: 8: 		||
EC_257: 9: 			NIL
EC_257: 10: 	||
EC_257: 11: 		NIL
EC_257: 12: ||
EC_257: 13: 	NIL

EC_257 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_257  --> EC_258 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R4, Proc_R1

state "EC< id : 258 , H : 122 , step : 0 >" as EC_258 #Pink
EC_258: 1: par
EC_258: 2: 	par
EC_258: 3: 		par
EC_258: 4: 			par
EC_258: 5: 				alt invariant( [] ~> true )
EC_258: 6: 					[ true ] / the set button is pressed
EC_258: 7: 					alt invariant( [clock] ~> clock<=60 )
EC_258: 8: 						[ clock==60 ] / activate the alarm
EC_258: 9: 						call( PostProc_R1 )
EC_258: 10: 			||
EC_258: 11: 				NIL
EC_258: 12: 		||
EC_258: 13: 			NIL
EC_258: 14: 	||
EC_258: 15: 		NIL
EC_258: 16: ||
EC_258: 17: 	NIL

EC_258 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_258  --> EC_260 : inv [] => [true, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 260 , H : 123 , step : 0 >" as EC_260 #Orange
EC_260: 1: par
EC_260: 2: 	par
EC_260: 3: 		par
EC_260: 4: 			par
EC_260: 5: 				alt invariant( [] ~> true )
EC_260: 6: 					[ true ] / the set button is pressed
EC_260: 7: 					alt invariant( [clock] ~> clock<=60 )
EC_260: 8: 						[ clock==60 ] / activate the alarm
EC_260: 9: 						call( PostProc_R1 )
EC_260: 10: 			||
EC_260: 11: 				NIL
EC_260: 12: 		||
EC_260: 13: 			NIL
EC_260: 14: 	||
EC_260: 15: 		NIL
EC_260: 16: ||
EC_260: 17: 	NIL

EC_260 : DBM: R7_x_resp=R3_x_resp, R7_x_resp-clock<=60, clock-R7_x_resp<=0,\l   R3_x_resp-clock<=60, clock-R3_x_resp<=0,
EC_260  --> EC_261 : inv [] => [true, True, True, True, True]\lact [true] / the set button is pressed

state "EC< id : 261 , H : 124 , step : 65 >" as EC_261 #LightBlue
EC_261: 1: par
EC_261: 2: 	par
EC_261: 3: 		par
EC_261: 4: 			par
EC_261: 5: 				alt invariant( [clock] ~> clock<=60 )
EC_261: 6: 					[ clock==60 ] / activate the alarm
EC_261: 7: 					call( PostProc_R1 )
EC_261: 8: 			||
EC_261: 9: 				NIL
EC_261: 10: 		||
EC_261: 11: 			NIL
EC_261: 12: 	||
EC_261: 13: 		NIL
EC_261: 14: ||
EC_261: 15: 	NIL

EC_261 : DBM: R7_x_resp=R3_x_resp, R7_x_resp-clock<=60, clock-R7_x_resp<=0,\l   R3_x_resp-clock<=60, clock-R3_x_resp<=0,
EC_261  --> EC_263 : inv [clock] => [clock<=60, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 263 , H : 125 , step : 0 >" as EC_263 #Orange
EC_263: 1: par
EC_263: 2: 	par
EC_263: 3: 		par
EC_263: 4: 			par
EC_263: 5: 				alt invariant( [clock] ~> clock<=60 )
EC_263: 6: 					[ clock==60 ] / activate the alarm
EC_263: 7: 					call( PostProc_R1 )
EC_263: 8: 			||
EC_263: 9: 				NIL
EC_263: 10: 		||
EC_263: 11: 			NIL
EC_263: 12: 	||
EC_263: 13: 		NIL
EC_263: 14: ||
EC_263: 15: 	NIL

EC_263 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_263  --> EC_264 : \lact [True] / META:REDUNDANCE:EC< id : 10 , H : 7 >

state "EC< id : 264 , H : 126 , step : 0 >" as EC_264 #Green
EC_264: 1: par
EC_264: 2: 	par
EC_264: 3: 		par
EC_264: 4: 			par
EC_264: 5: 				alt invariant( [clock] ~> clock<=60 )
EC_264: 6: 					[ clock==60 ] / activate the alarm
EC_264: 7: 					call( PostProc_R1 )
EC_264: 8: 			||
EC_264: 9: 				NIL
EC_264: 10: 		||
EC_264: 11: 			NIL
EC_264: 12: 	||
EC_264: 13: 		NIL
EC_264: 14: ||
EC_264: 15: 	NIL

EC_264 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_247  --> EC_249 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 249 , H : 115 , step : 66 >" as EC_249 #LightBlue
EC_249: 1: par
EC_249: 2: 	par
EC_249: 3: 		par
EC_249: 4: 			par sync [the alarm is disarmed]
EC_249: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_249: 6: 					[ true ] / the alarm is disarmed
EC_249: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_249: 8: 						[ clock==0 ] / turn off the tone
EC_249: 9: 						call( PostProc_R4 )
EC_249: 10: 			&&
EC_249: 11: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_249: 12: 					[ clock==0 ] / alert the emergency center
EC_249: 13: 					call( PostProc_R9 )
EC_249: 14: 		||
EC_249: 15: 			NIL
EC_249: 16: 	||
EC_249: 17: 		NIL
EC_249: 18: ||
EC_249: 19: 	NIL

EC_249 : DBM: R7_x_resp=60, R3_x_resp=60, clock=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_249  --> EC_266 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 266 , H : 116 , step : 0 >" as EC_266 #Orange
EC_266: 1: par
EC_266: 2: 	par
EC_266: 3: 		par
EC_266: 4: 			par sync [the alarm is disarmed]
EC_266: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_266: 6: 					[ true ] / the alarm is disarmed
EC_266: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_266: 8: 						[ clock==0 ] / turn off the tone
EC_266: 9: 						call( PostProc_R4 )
EC_266: 10: 			&&
EC_266: 11: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_266: 12: 					[ clock==0 ] / alert the emergency center
EC_266: 13: 					call( PostProc_R9 )
EC_266: 14: 		||
EC_266: 15: 			NIL
EC_266: 16: 	||
EC_266: 17: 		NIL
EC_266: 18: ||
EC_266: 19: 	NIL

EC_266 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_266  --> EC_267 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 267 , H : 117 , step : 67 >" as EC_267 #LightBlue
EC_267: 1: par
EC_267: 2: 	par
EC_267: 3: 		par
EC_267: 4: 			par sync [the alarm is disarmed]
EC_267: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_267: 6: 					[ true ] / the alarm is disarmed
EC_267: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_267: 8: 						[ clock==0 ] / turn off the tone
EC_267: 9: 						call( PostProc_R4 )
EC_267: 10: 			&&
EC_267: 11: 				call( PostProc_R9 )
EC_267: 12: 		||
EC_267: 13: 			NIL
EC_267: 14: 	||
EC_267: 15: 		NIL
EC_267: 16: ||
EC_267: 17: 	NIL

EC_267 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_267  --> EC_268 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 268 , H : 118 , step : 0 >" as EC_268 #Pink
EC_268: 1: par
EC_268: 2: 	par
EC_268: 3: 		par
EC_268: 4: 			par sync [the alarm is disarmed]
EC_268: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_268: 6: 					[ true ] / the alarm is disarmed
EC_268: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_268: 8: 						[ clock==0 ] / turn off the tone
EC_268: 9: 						call( PostProc_R4 )
EC_268: 10: 			&&
EC_268: 11: 				alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_268: 12: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_268: 13: 					call( PostProc_R7 )
EC_268: 14: 				++
EC_268: 15: 					[ R7_x_resp==60 ] / deadline at 60
EC_268: 16: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_268: 17: 						[ clock==0 ] / alert the emergency center
EC_268: 18: 						call( PostProc_R9 )
EC_268: 19: 		||
EC_268: 20: 			NIL
EC_268: 21: 	||
EC_268: 22: 		NIL
EC_268: 23: ||
EC_268: 24: 	NIL

EC_268 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_268  --> EC_270 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 270 , H : 119 , step : 0 >" as EC_270 #Orange
EC_270: 1: par
EC_270: 2: 	par
EC_270: 3: 		par
EC_270: 4: 			par sync [the alarm is disarmed]
EC_270: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_270: 6: 					[ true ] / the alarm is disarmed
EC_270: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_270: 8: 						[ clock==0 ] / turn off the tone
EC_270: 9: 						call( PostProc_R4 )
EC_270: 10: 			&&
EC_270: 11: 				alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_270: 12: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_270: 13: 					call( PostProc_R7 )
EC_270: 14: 				++
EC_270: 15: 					[ R7_x_resp==60 ] / deadline at 60
EC_270: 16: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_270: 17: 						[ clock==0 ] / alert the emergency center
EC_270: 18: 						call( PostProc_R9 )
EC_270: 19: 		||
EC_270: 20: 			NIL
EC_270: 21: 	||
EC_270: 22: 		NIL
EC_270: 23: ||
EC_270: 24: 	NIL

EC_270 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_270  --> EC_271 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 271 , H : 120 , step : 68 >" as EC_271 #LightBlue
EC_271: 1: par
EC_271: 2: 	par
EC_271: 3: 		par
EC_271: 4: 			par sync [the alarm is disarmed]
EC_271: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_271: 6: 					[ true ] / the alarm is disarmed
EC_271: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_271: 8: 						[ clock==0 ] / turn off the tone
EC_271: 9: 						call( PostProc_R4 )
EC_271: 10: 			&&
EC_271: 11: 				call( PostProc_R7 )
EC_271: 12: 		||
EC_271: 13: 			NIL
EC_271: 14: 	||
EC_271: 15: 		NIL
EC_271: 16: ||
EC_271: 17: 	NIL

EC_271 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_271  --> EC_273 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 273 , H : 121 , step : 0 >" as EC_273 #Pink
EC_273: 1: par
EC_273: 2: 	par
EC_273: 3: 		par
EC_273: 4: 			par sync [the alarm is disarmed]
EC_273: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_273: 6: 					[ true ] / the alarm is disarmed
EC_273: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_273: 8: 						[ clock==0 ] / turn off the tone
EC_273: 9: 						call( PostProc_R4 )
EC_273: 10: 			&&
EC_273: 11: 				alt invariant( [] ~> R7_x_resp<=60 )
EC_273: 12: 					[ true ] / the alarm is disarmed
EC_273: 13: 					call( PostProc_R8 )
EC_273: 14: 		||
EC_273: 15: 			NIL
EC_273: 16: 	||
EC_273: 17: 		NIL
EC_273: 18: ||
EC_273: 19: 	NIL

EC_273 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_273  --> EC_275 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 275 , H : 122 , step : 0 >" as EC_275 #Orange
EC_275: 1: par
EC_275: 2: 	par
EC_275: 3: 		par
EC_275: 4: 			par sync [the alarm is disarmed]
EC_275: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_275: 6: 					[ true ] / the alarm is disarmed
EC_275: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_275: 8: 						[ clock==0 ] / turn off the tone
EC_275: 9: 						call( PostProc_R4 )
EC_275: 10: 			&&
EC_275: 11: 				alt invariant( [] ~> R7_x_resp<=60 )
EC_275: 12: 					[ true ] / the alarm is disarmed
EC_275: 13: 					call( PostProc_R8 )
EC_275: 14: 		||
EC_275: 15: 			NIL
EC_275: 16: 	||
EC_275: 17: 		NIL
EC_275: 18: ||
EC_275: 19: 	NIL

EC_275 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_275  --> EC_276 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 276 , H : 123 , step : 69 >" as EC_276 #LightBlue
EC_276: 1: par
EC_276: 2: 	par
EC_276: 3: 		par
EC_276: 4: 			par sync [the alarm is disarmed]
EC_276: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_276: 6: 					[ clock==0 ] / turn off the tone
EC_276: 7: 					call( PostProc_R4 )
EC_276: 8: 			&&
EC_276: 9: 				call( PostProc_R8 )
EC_276: 10: 		||
EC_276: 11: 			NIL
EC_276: 12: 	||
EC_276: 13: 		NIL
EC_276: 14: ||
EC_276: 15: 	NIL

EC_276 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_276  --> EC_277 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 277 , H : 124 , step : 0 >" as EC_277 #Pink
EC_277: 1: par
EC_277: 2: 	par
EC_277: 3: 		par
EC_277: 4: 			par sync [the alarm is disarmed]
EC_277: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_277: 6: 					[ clock==0 ] / turn off the tone
EC_277: 7: 					call( PostProc_R4 )
EC_277: 8: 			&&
EC_277: 9: 				NIL
EC_277: 10: 		||
EC_277: 11: 			NIL
EC_277: 12: 	||
EC_277: 13: 		NIL
EC_277: 14: ||
EC_277: 15: 	NIL

EC_277 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_277  --> EC_279 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 279 , H : 125 , step : 0 >" as EC_279 #Orange
EC_279: 1: par
EC_279: 2: 	par
EC_279: 3: 		par
EC_279: 4: 			par sync [the alarm is disarmed]
EC_279: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_279: 6: 					[ clock==0 ] / turn off the tone
EC_279: 7: 					call( PostProc_R4 )
EC_279: 8: 			&&
EC_279: 9: 				NIL
EC_279: 10: 		||
EC_279: 11: 			NIL
EC_279: 12: 	||
EC_279: 13: 		NIL
EC_279: 14: ||
EC_279: 15: 	NIL

EC_279 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_279  --> EC_280 : \lact [True] / META:REDUNDANCE:EC< id : 60 , H : 29 >

state "EC< id : 280 , H : 126 , step : 0 >" as EC_280 #Green
EC_280: 1: par
EC_280: 2: 	par
EC_280: 3: 		par
EC_280: 4: 			par sync [the alarm is disarmed]
EC_280: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_280: 6: 					[ clock==0 ] / turn off the tone
EC_280: 7: 					call( PostProc_R4 )
EC_280: 8: 			&&
EC_280: 9: 				NIL
EC_280: 10: 		||
EC_280: 11: 			NIL
EC_280: 12: 	||
EC_280: 13: 		NIL
EC_280: 14: ||
EC_280: 15: 	NIL

EC_280 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_270  --> EC_272 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 272 , H : 120 , step : 70 >" as EC_272 #LightBlue
EC_272: 1: par
EC_272: 2: 	par
EC_272: 3: 		par
EC_272: 4: 			par sync [the alarm is disarmed]
EC_272: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_272: 6: 					[ true ] / the alarm is disarmed
EC_272: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_272: 8: 						[ clock==0 ] / turn off the tone
EC_272: 9: 						call( PostProc_R4 )
EC_272: 10: 			&&
EC_272: 11: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_272: 12: 					[ clock==0 ] / alert the emergency center
EC_272: 13: 					call( PostProc_R9 )
EC_272: 14: 		||
EC_272: 15: 			NIL
EC_272: 16: 	||
EC_272: 17: 		NIL
EC_272: 18: ||
EC_272: 19: 	NIL

EC_272 : DBM: R7_x_resp=60, R3_x_resp=120, clock=60, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp=clock, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_272  --> EC_282 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 282 , H : 121 , step : 0 >" as EC_282 #Orange
EC_282: 1: par
EC_282: 2: 	par
EC_282: 3: 		par
EC_282: 4: 			par sync [the alarm is disarmed]
EC_282: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_282: 6: 					[ true ] / the alarm is disarmed
EC_282: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_282: 8: 						[ clock==0 ] / turn off the tone
EC_282: 9: 						call( PostProc_R4 )
EC_282: 10: 			&&
EC_282: 11: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_282: 12: 					[ clock==0 ] / alert the emergency center
EC_282: 13: 					call( PostProc_R9 )
EC_282: 14: 		||
EC_282: 15: 			NIL
EC_282: 16: 	||
EC_282: 17: 		NIL
EC_282: 18: ||
EC_282: 19: 	NIL

EC_282 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_282  --> EC_283 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 283 , H : 122 , step : 71 >" as EC_283 #LightBlue
EC_283: 1: par
EC_283: 2: 	par
EC_283: 3: 		par
EC_283: 4: 			par sync [the alarm is disarmed]
EC_283: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_283: 6: 					[ true ] / the alarm is disarmed
EC_283: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_283: 8: 						[ clock==0 ] / turn off the tone
EC_283: 9: 						call( PostProc_R4 )
EC_283: 10: 			&&
EC_283: 11: 				call( PostProc_R9 )
EC_283: 12: 		||
EC_283: 13: 			NIL
EC_283: 14: 	||
EC_283: 15: 		NIL
EC_283: 16: ||
EC_283: 17: 	NIL

EC_283 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_283  --> EC_284 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 284 , H : 123 , step : 0 >" as EC_284 #Pink
EC_284: 1: par
EC_284: 2: 	par
EC_284: 3: 		par
EC_284: 4: 			par sync [the alarm is disarmed]
EC_284: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_284: 6: 					[ true ] / the alarm is disarmed
EC_284: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_284: 8: 						[ clock==0 ] / turn off the tone
EC_284: 9: 						call( PostProc_R4 )
EC_284: 10: 			&&
EC_284: 11: 				alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_284: 12: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_284: 13: 					call( PostProc_R7 )
EC_284: 14: 				++
EC_284: 15: 					[ R7_x_resp==60 ] / deadline at 60
EC_284: 16: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_284: 17: 						[ clock==0 ] / alert the emergency center
EC_284: 18: 						call( PostProc_R9 )
EC_284: 19: 		||
EC_284: 20: 			NIL
EC_284: 21: 	||
EC_284: 22: 		NIL
EC_284: 23: ||
EC_284: 24: 	NIL

EC_284 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_284  --> EC_286 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 286 , H : 124 , step : 0 >" as EC_286 #Orange
EC_286: 1: par
EC_286: 2: 	par
EC_286: 3: 		par
EC_286: 4: 			par sync [the alarm is disarmed]
EC_286: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_286: 6: 					[ true ] / the alarm is disarmed
EC_286: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_286: 8: 						[ clock==0 ] / turn off the tone
EC_286: 9: 						call( PostProc_R4 )
EC_286: 10: 			&&
EC_286: 11: 				alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_286: 12: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_286: 13: 					call( PostProc_R7 )
EC_286: 14: 				++
EC_286: 15: 					[ R7_x_resp==60 ] / deadline at 60
EC_286: 16: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_286: 17: 						[ clock==0 ] / alert the emergency center
EC_286: 18: 						call( PostProc_R9 )
EC_286: 19: 		||
EC_286: 20: 			NIL
EC_286: 21: 	||
EC_286: 22: 		NIL
EC_286: 23: ||
EC_286: 24: 	NIL

EC_286 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_286  --> EC_287 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 287 , H : 125 , step : 72 >" as EC_287 #LightBlue
EC_287: 1: par
EC_287: 2: 	par
EC_287: 3: 		par
EC_287: 4: 			par sync [the alarm is disarmed]
EC_287: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_287: 6: 					[ true ] / the alarm is disarmed
EC_287: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_287: 8: 						[ clock==0 ] / turn off the tone
EC_287: 9: 						call( PostProc_R4 )
EC_287: 10: 			&&
EC_287: 11: 				call( PostProc_R7 )
EC_287: 12: 		||
EC_287: 13: 			NIL
EC_287: 14: 	||
EC_287: 15: 		NIL
EC_287: 16: ||
EC_287: 17: 	NIL

EC_287 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_287  --> EC_289 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 289 , H : 126 , step : 0 >" as EC_289 #Pink
EC_289: 1: par
EC_289: 2: 	par
EC_289: 3: 		par
EC_289: 4: 			par sync [the alarm is disarmed]
EC_289: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_289: 6: 					[ true ] / the alarm is disarmed
EC_289: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_289: 8: 						[ clock==0 ] / turn off the tone
EC_289: 9: 						call( PostProc_R4 )
EC_289: 10: 			&&
EC_289: 11: 				alt invariant( [] ~> R7_x_resp<=60 )
EC_289: 12: 					[ true ] / the alarm is disarmed
EC_289: 13: 					call( PostProc_R8 )
EC_289: 14: 		||
EC_289: 15: 			NIL
EC_289: 16: 	||
EC_289: 17: 		NIL
EC_289: 18: ||
EC_289: 19: 	NIL

EC_289 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_289  --> EC_291 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 291 , H : 127 , step : 0 >" as EC_291 #Orange
EC_291: 1: par
EC_291: 2: 	par
EC_291: 3: 		par
EC_291: 4: 			par sync [the alarm is disarmed]
EC_291: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_291: 6: 					[ true ] / the alarm is disarmed
EC_291: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_291: 8: 						[ clock==0 ] / turn off the tone
EC_291: 9: 						call( PostProc_R4 )
EC_291: 10: 			&&
EC_291: 11: 				alt invariant( [] ~> R7_x_resp<=60 )
EC_291: 12: 					[ true ] / the alarm is disarmed
EC_291: 13: 					call( PostProc_R8 )
EC_291: 14: 		||
EC_291: 15: 			NIL
EC_291: 16: 	||
EC_291: 17: 		NIL
EC_291: 18: ||
EC_291: 19: 	NIL

EC_291 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_291  --> EC_292 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 292 , H : 128 , step : 73 >" as EC_292 #LightBlue
EC_292: 1: par
EC_292: 2: 	par
EC_292: 3: 		par
EC_292: 4: 			par sync [the alarm is disarmed]
EC_292: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_292: 6: 					[ clock==0 ] / turn off the tone
EC_292: 7: 					call( PostProc_R4 )
EC_292: 8: 			&&
EC_292: 9: 				call( PostProc_R8 )
EC_292: 10: 		||
EC_292: 11: 			NIL
EC_292: 12: 	||
EC_292: 13: 		NIL
EC_292: 14: ||
EC_292: 15: 	NIL

EC_292 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_292  --> EC_293 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 293 , H : 129 , step : 0 >" as EC_293 #Pink
EC_293: 1: par
EC_293: 2: 	par
EC_293: 3: 		par
EC_293: 4: 			par sync [the alarm is disarmed]
EC_293: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_293: 6: 					[ clock==0 ] / turn off the tone
EC_293: 7: 					call( PostProc_R4 )
EC_293: 8: 			&&
EC_293: 9: 				NIL
EC_293: 10: 		||
EC_293: 11: 			NIL
EC_293: 12: 	||
EC_293: 13: 		NIL
EC_293: 14: ||
EC_293: 15: 	NIL

EC_293 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_293  --> EC_295 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 295 , H : 130 , step : 0 >" as EC_295 #Orange
EC_295: 1: par
EC_295: 2: 	par
EC_295: 3: 		par
EC_295: 4: 			par sync [the alarm is disarmed]
EC_295: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_295: 6: 					[ clock==0 ] / turn off the tone
EC_295: 7: 					call( PostProc_R4 )
EC_295: 8: 			&&
EC_295: 9: 				NIL
EC_295: 10: 		||
EC_295: 11: 			NIL
EC_295: 12: 	||
EC_295: 13: 		NIL
EC_295: 14: ||
EC_295: 15: 	NIL

EC_295 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_295  --> EC_296 : \lact [True] / META:REDUNDANCE:EC< id : 133 , H : 61 >

state "EC< id : 296 , H : 131 , step : 0 >" as EC_296 #Green
EC_296: 1: par
EC_296: 2: 	par
EC_296: 3: 		par
EC_296: 4: 			par sync [the alarm is disarmed]
EC_296: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_296: 6: 					[ clock==0 ] / turn off the tone
EC_296: 7: 					call( PostProc_R4 )
EC_296: 8: 			&&
EC_296: 9: 				NIL
EC_296: 10: 		||
EC_296: 11: 			NIL
EC_296: 12: 	||
EC_296: 13: 		NIL
EC_296: 14: ||
EC_296: 15: 	NIL

EC_296 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_286  --> EC_288 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 288 , H : 125 , step : 74 >" as EC_288 #LightBlue
EC_288: 1: par
EC_288: 2: 	par
EC_288: 3: 		par
EC_288: 4: 			par sync [the alarm is disarmed]
EC_288: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_288: 6: 					[ true ] / the alarm is disarmed
EC_288: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_288: 8: 						[ clock==0 ] / turn off the tone
EC_288: 9: 						call( PostProc_R4 )
EC_288: 10: 			&&
EC_288: 11: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_288: 12: 					[ clock==0 ] / alert the emergency center
EC_288: 13: 					call( PostProc_R9 )
EC_288: 14: 		||
EC_288: 15: 			NIL
EC_288: 16: 	||
EC_288: 17: 		NIL
EC_288: 18: ||
EC_288: 19: 	NIL

EC_288 : DBM: R7_x_resp=60, R3_x_resp=180, clock=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp=clock, R3_x_resp-clock<=120,\l   clock-R3_x_resp<=-120,
EC_288  --> EC_298 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 298 , H : 126 , step : 0 >" as EC_298 #Orange
EC_298: 1: par
EC_298: 2: 	par
EC_298: 3: 		par
EC_298: 4: 			par sync [the alarm is disarmed]
EC_298: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_298: 6: 					[ true ] / the alarm is disarmed
EC_298: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_298: 8: 						[ clock==0 ] / turn off the tone
EC_298: 9: 						call( PostProc_R4 )
EC_298: 10: 			&&
EC_298: 11: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_298: 12: 					[ clock==0 ] / alert the emergency center
EC_298: 13: 					call( PostProc_R9 )
EC_298: 14: 		||
EC_298: 15: 			NIL
EC_298: 16: 	||
EC_298: 17: 		NIL
EC_298: 18: ||
EC_298: 19: 	NIL

EC_298 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_298  --> EC_299 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 299 , H : 127 , step : 75 >" as EC_299 #LightBlue
EC_299: 1: par
EC_299: 2: 	par
EC_299: 3: 		par
EC_299: 4: 			par sync [the alarm is disarmed]
EC_299: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_299: 6: 					[ true ] / the alarm is disarmed
EC_299: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_299: 8: 						[ clock==0 ] / turn off the tone
EC_299: 9: 						call( PostProc_R4 )
EC_299: 10: 			&&
EC_299: 11: 				call( PostProc_R9 )
EC_299: 12: 		||
EC_299: 13: 			NIL
EC_299: 14: 	||
EC_299: 15: 		NIL
EC_299: 16: ||
EC_299: 17: 	NIL

EC_299 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_299  --> EC_300 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 300 , H : 128 , step : 0 >" as EC_300 #Pink
EC_300: 1: par
EC_300: 2: 	par
EC_300: 3: 		par
EC_300: 4: 			par sync [the alarm is disarmed]
EC_300: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_300: 6: 					[ true ] / the alarm is disarmed
EC_300: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_300: 8: 						[ clock==0 ] / turn off the tone
EC_300: 9: 						call( PostProc_R4 )
EC_300: 10: 			&&
EC_300: 11: 				alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_300: 12: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_300: 13: 					call( PostProc_R7 )
EC_300: 14: 				++
EC_300: 15: 					[ R7_x_resp==60 ] / deadline at 60
EC_300: 16: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_300: 17: 						[ clock==0 ] / alert the emergency center
EC_300: 18: 						call( PostProc_R9 )
EC_300: 19: 		||
EC_300: 20: 			NIL
EC_300: 21: 	||
EC_300: 22: 		NIL
EC_300: 23: ||
EC_300: 24: 	NIL

EC_300 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_300  --> EC_302 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 302 , H : 129 , step : 0 >" as EC_302 #Orange
EC_302: 1: par
EC_302: 2: 	par
EC_302: 3: 		par
EC_302: 4: 			par sync [the alarm is disarmed]
EC_302: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_302: 6: 					[ true ] / the alarm is disarmed
EC_302: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_302: 8: 						[ clock==0 ] / turn off the tone
EC_302: 9: 						call( PostProc_R4 )
EC_302: 10: 			&&
EC_302: 11: 				alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_302: 12: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_302: 13: 					call( PostProc_R7 )
EC_302: 14: 				++
EC_302: 15: 					[ R7_x_resp==60 ] / deadline at 60
EC_302: 16: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_302: 17: 						[ clock==0 ] / alert the emergency center
EC_302: 18: 						call( PostProc_R9 )
EC_302: 19: 		||
EC_302: 20: 			NIL
EC_302: 21: 	||
EC_302: 22: 		NIL
EC_302: 23: ||
EC_302: 24: 	NIL

EC_302 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_302  --> EC_303 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 303 , H : 130 , step : 76 >" as EC_303 #LightBlue
EC_303: 1: par
EC_303: 2: 	par
EC_303: 3: 		par
EC_303: 4: 			par sync [the alarm is disarmed]
EC_303: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_303: 6: 					[ true ] / the alarm is disarmed
EC_303: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_303: 8: 						[ clock==0 ] / turn off the tone
EC_303: 9: 						call( PostProc_R4 )
EC_303: 10: 			&&
EC_303: 11: 				call( PostProc_R7 )
EC_303: 12: 		||
EC_303: 13: 			NIL
EC_303: 14: 	||
EC_303: 15: 		NIL
EC_303: 16: ||
EC_303: 17: 	NIL

EC_303 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_303  --> EC_305 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 305 , H : 131 , step : 0 >" as EC_305 #Pink
EC_305: 1: par
EC_305: 2: 	par
EC_305: 3: 		par
EC_305: 4: 			par sync [the alarm is disarmed]
EC_305: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_305: 6: 					[ true ] / the alarm is disarmed
EC_305: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_305: 8: 						[ clock==0 ] / turn off the tone
EC_305: 9: 						call( PostProc_R4 )
EC_305: 10: 			&&
EC_305: 11: 				alt invariant( [] ~> R7_x_resp<=60 )
EC_305: 12: 					[ true ] / the alarm is disarmed
EC_305: 13: 					call( PostProc_R8 )
EC_305: 14: 		||
EC_305: 15: 			NIL
EC_305: 16: 	||
EC_305: 17: 		NIL
EC_305: 18: ||
EC_305: 19: 	NIL

EC_305 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_305  --> EC_307 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 307 , H : 132 , step : 0 >" as EC_307 #Orange
EC_307: 1: par
EC_307: 2: 	par
EC_307: 3: 		par
EC_307: 4: 			par sync [the alarm is disarmed]
EC_307: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_307: 6: 					[ true ] / the alarm is disarmed
EC_307: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_307: 8: 						[ clock==0 ] / turn off the tone
EC_307: 9: 						call( PostProc_R4 )
EC_307: 10: 			&&
EC_307: 11: 				alt invariant( [] ~> R7_x_resp<=60 )
EC_307: 12: 					[ true ] / the alarm is disarmed
EC_307: 13: 					call( PostProc_R8 )
EC_307: 14: 		||
EC_307: 15: 			NIL
EC_307: 16: 	||
EC_307: 17: 		NIL
EC_307: 18: ||
EC_307: 19: 	NIL

EC_307 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_307  --> EC_308 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 308 , H : 133 , step : 77 >" as EC_308 #LightBlue
EC_308: 1: par
EC_308: 2: 	par
EC_308: 3: 		par
EC_308: 4: 			par sync [the alarm is disarmed]
EC_308: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_308: 6: 					[ clock==0 ] / turn off the tone
EC_308: 7: 					call( PostProc_R4 )
EC_308: 8: 			&&
EC_308: 9: 				call( PostProc_R8 )
EC_308: 10: 		||
EC_308: 11: 			NIL
EC_308: 12: 	||
EC_308: 13: 		NIL
EC_308: 14: ||
EC_308: 15: 	NIL

EC_308 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_308  --> EC_309 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 309 , H : 134 , step : 0 >" as EC_309 #Pink
EC_309: 1: par
EC_309: 2: 	par
EC_309: 3: 		par
EC_309: 4: 			par sync [the alarm is disarmed]
EC_309: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_309: 6: 					[ clock==0 ] / turn off the tone
EC_309: 7: 					call( PostProc_R4 )
EC_309: 8: 			&&
EC_309: 9: 				NIL
EC_309: 10: 		||
EC_309: 11: 			NIL
EC_309: 12: 	||
EC_309: 13: 		NIL
EC_309: 14: ||
EC_309: 15: 	NIL

EC_309 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_309  --> EC_311 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 311 , H : 135 , step : 0 >" as EC_311 #Orange
EC_311: 1: par
EC_311: 2: 	par
EC_311: 3: 		par
EC_311: 4: 			par sync [the alarm is disarmed]
EC_311: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_311: 6: 					[ clock==0 ] / turn off the tone
EC_311: 7: 					call( PostProc_R4 )
EC_311: 8: 			&&
EC_311: 9: 				NIL
EC_311: 10: 		||
EC_311: 11: 			NIL
EC_311: 12: 	||
EC_311: 13: 		NIL
EC_311: 14: ||
EC_311: 15: 	NIL

EC_311 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_311  --> EC_312 : \lact [True] / META:REDUNDANCE:EC< id : 222 , H : 98 >

state "EC< id : 312 , H : 136 , step : 0 >" as EC_312 #Green
EC_312: 1: par
EC_312: 2: 	par
EC_312: 3: 		par
EC_312: 4: 			par sync [the alarm is disarmed]
EC_312: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_312: 6: 					[ clock==0 ] / turn off the tone
EC_312: 7: 					call( PostProc_R4 )
EC_312: 8: 			&&
EC_312: 9: 				NIL
EC_312: 10: 		||
EC_312: 11: 			NIL
EC_312: 12: 	||
EC_312: 13: 		NIL
EC_312: 14: ||
EC_312: 15: 	NIL

EC_312 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_302  --> EC_304 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 304 , H : 130 , step : 78 >" as EC_304 #LightBlue
EC_304: 1: par
EC_304: 2: 	par
EC_304: 3: 		par
EC_304: 4: 			par sync [the alarm is disarmed]
EC_304: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_304: 6: 					[ true ] / the alarm is disarmed
EC_304: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_304: 8: 						[ clock==0 ] / turn off the tone
EC_304: 9: 						call( PostProc_R4 )
EC_304: 10: 			&&
EC_304: 11: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_304: 12: 					[ clock==0 ] / alert the emergency center
EC_304: 13: 					call( PostProc_R9 )
EC_304: 14: 		||
EC_304: 15: 			NIL
EC_304: 16: 	||
EC_304: 17: 		NIL
EC_304: 18: ||
EC_304: 19: 	NIL

EC_304 : DBM: R7_x_resp=60, R3_x_resp=240, clock=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp=clock, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-180,
EC_304  --> EC_314 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 314 , H : 131 , step : 0 >" as EC_314 #Orange
EC_314: 1: par
EC_314: 2: 	par
EC_314: 3: 		par
EC_314: 4: 			par sync [the alarm is disarmed]
EC_314: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_314: 6: 					[ true ] / the alarm is disarmed
EC_314: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_314: 8: 						[ clock==0 ] / turn off the tone
EC_314: 9: 						call( PostProc_R4 )
EC_314: 10: 			&&
EC_314: 11: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_314: 12: 					[ clock==0 ] / alert the emergency center
EC_314: 13: 					call( PostProc_R9 )
EC_314: 14: 		||
EC_314: 15: 			NIL
EC_314: 16: 	||
EC_314: 17: 		NIL
EC_314: 18: ||
EC_314: 19: 	NIL

EC_314 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_314  --> EC_315 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 315 , H : 132 , step : 79 >" as EC_315 #LightBlue
EC_315: 1: par
EC_315: 2: 	par
EC_315: 3: 		par
EC_315: 4: 			par sync [the alarm is disarmed]
EC_315: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_315: 6: 					[ true ] / the alarm is disarmed
EC_315: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_315: 8: 						[ clock==0 ] / turn off the tone
EC_315: 9: 						call( PostProc_R4 )
EC_315: 10: 			&&
EC_315: 11: 				call( PostProc_R9 )
EC_315: 12: 		||
EC_315: 13: 			NIL
EC_315: 14: 	||
EC_315: 15: 		NIL
EC_315: 16: ||
EC_315: 17: 	NIL

EC_315 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_315  --> EC_316 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 316 , H : 133 , step : 0 >" as EC_316 #Pink
EC_316: 1: par
EC_316: 2: 	par
EC_316: 3: 		par
EC_316: 4: 			par sync [the alarm is disarmed]
EC_316: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_316: 6: 					[ true ] / the alarm is disarmed
EC_316: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_316: 8: 						[ clock==0 ] / turn off the tone
EC_316: 9: 						call( PostProc_R4 )
EC_316: 10: 			&&
EC_316: 11: 				alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_316: 12: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_316: 13: 					call( PostProc_R7 )
EC_316: 14: 				++
EC_316: 15: 					[ R7_x_resp==60 ] / deadline at 60
EC_316: 16: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_316: 17: 						[ clock==0 ] / alert the emergency center
EC_316: 18: 						call( PostProc_R9 )
EC_316: 19: 		||
EC_316: 20: 			NIL
EC_316: 21: 	||
EC_316: 22: 		NIL
EC_316: 23: ||
EC_316: 24: 	NIL

EC_316 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_316  --> EC_318 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 318 , H : 134 , step : 0 >" as EC_318 #Orange
EC_318: 1: par
EC_318: 2: 	par
EC_318: 3: 		par
EC_318: 4: 			par sync [the alarm is disarmed]
EC_318: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_318: 6: 					[ true ] / the alarm is disarmed
EC_318: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_318: 8: 						[ clock==0 ] / turn off the tone
EC_318: 9: 						call( PostProc_R4 )
EC_318: 10: 			&&
EC_318: 11: 				alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_318: 12: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_318: 13: 					call( PostProc_R7 )
EC_318: 14: 				++
EC_318: 15: 					[ R7_x_resp==60 ] / deadline at 60
EC_318: 16: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_318: 17: 						[ clock==0 ] / alert the emergency center
EC_318: 18: 						call( PostProc_R9 )
EC_318: 19: 		||
EC_318: 20: 			NIL
EC_318: 21: 	||
EC_318: 22: 		NIL
EC_318: 23: ||
EC_318: 24: 	NIL

EC_318 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_318  --> EC_319 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 319 , H : 135 , step : 80 >" as EC_319 #LightBlue
EC_319: 1: par
EC_319: 2: 	par
EC_319: 3: 		par
EC_319: 4: 			par sync [the alarm is disarmed]
EC_319: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_319: 6: 					[ true ] / the alarm is disarmed
EC_319: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_319: 8: 						[ clock==0 ] / turn off the tone
EC_319: 9: 						call( PostProc_R4 )
EC_319: 10: 			&&
EC_319: 11: 				call( PostProc_R7 )
EC_319: 12: 		||
EC_319: 13: 			NIL
EC_319: 14: 	||
EC_319: 15: 		NIL
EC_319: 16: ||
EC_319: 17: 	NIL

EC_319 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_319  --> EC_321 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 321 , H : 136 , step : 0 >" as EC_321 #Pink
EC_321: 1: par
EC_321: 2: 	par
EC_321: 3: 		par
EC_321: 4: 			par sync [the alarm is disarmed]
EC_321: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_321: 6: 					[ true ] / the alarm is disarmed
EC_321: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_321: 8: 						[ clock==0 ] / turn off the tone
EC_321: 9: 						call( PostProc_R4 )
EC_321: 10: 			&&
EC_321: 11: 				alt invariant( [] ~> R7_x_resp<=60 )
EC_321: 12: 					[ true ] / the alarm is disarmed
EC_321: 13: 					call( PostProc_R8 )
EC_321: 14: 		||
EC_321: 15: 			NIL
EC_321: 16: 	||
EC_321: 17: 		NIL
EC_321: 18: ||
EC_321: 19: 	NIL

EC_321 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_321  --> EC_323 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 323 , H : 137 , step : 0 >" as EC_323 #Orange
EC_323: 1: par
EC_323: 2: 	par
EC_323: 3: 		par
EC_323: 4: 			par sync [the alarm is disarmed]
EC_323: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_323: 6: 					[ true ] / the alarm is disarmed
EC_323: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_323: 8: 						[ clock==0 ] / turn off the tone
EC_323: 9: 						call( PostProc_R4 )
EC_323: 10: 			&&
EC_323: 11: 				alt invariant( [] ~> R7_x_resp<=60 )
EC_323: 12: 					[ true ] / the alarm is disarmed
EC_323: 13: 					call( PostProc_R8 )
EC_323: 14: 		||
EC_323: 15: 			NIL
EC_323: 16: 	||
EC_323: 17: 		NIL
EC_323: 18: ||
EC_323: 19: 	NIL

EC_323 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_323  --> EC_324 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 324 , H : 138 , step : 81 >" as EC_324 #LightBlue
EC_324: 1: par
EC_324: 2: 	par
EC_324: 3: 		par
EC_324: 4: 			par sync [the alarm is disarmed]
EC_324: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_324: 6: 					[ clock==0 ] / turn off the tone
EC_324: 7: 					call( PostProc_R4 )
EC_324: 8: 			&&
EC_324: 9: 				call( PostProc_R8 )
EC_324: 10: 		||
EC_324: 11: 			NIL
EC_324: 12: 	||
EC_324: 13: 		NIL
EC_324: 14: ||
EC_324: 15: 	NIL

EC_324 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_324  --> EC_325 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 325 , H : 139 , step : 0 >" as EC_325 #Pink
EC_325: 1: par
EC_325: 2: 	par
EC_325: 3: 		par
EC_325: 4: 			par sync [the alarm is disarmed]
EC_325: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_325: 6: 					[ clock==0 ] / turn off the tone
EC_325: 7: 					call( PostProc_R4 )
EC_325: 8: 			&&
EC_325: 9: 				NIL
EC_325: 10: 		||
EC_325: 11: 			NIL
EC_325: 12: 	||
EC_325: 13: 		NIL
EC_325: 14: ||
EC_325: 15: 	NIL

EC_325 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_325  --> EC_327 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 327 , H : 140 , step : 0 >" as EC_327 #Orange
EC_327: 1: par
EC_327: 2: 	par
EC_327: 3: 		par
EC_327: 4: 			par sync [the alarm is disarmed]
EC_327: 5: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_327: 6: 					[ clock==0 ] / turn off the tone
EC_327: 7: 					call( PostProc_R4 )
EC_327: 8: 			&&
EC_327: 9: 				NIL
EC_327: 10: 		||
EC_327: 11: 			NIL
EC_327: 12: 	||
EC_327: 13: 		NIL
EC_327: 14: ||
EC_327: 15: 	NIL

EC_327 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_327  --> EC_328 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True]\lact [clock==0] / turn off the tone

state "EC< id : 328 , H : 141 , step : 82 >" as EC_328 #LightBlue
EC_328: 1: par
EC_328: 2: 	par
EC_328: 3: 		par
EC_328: 4: 			par
EC_328: 5: 				call( PostProc_R4 )
EC_328: 6: 			||
EC_328: 7: 				NIL
EC_328: 8: 		||
EC_328: 9: 			NIL
EC_328: 10: 	||
EC_328: 11: 		NIL
EC_328: 12: ||
EC_328: 13: 	NIL

EC_328 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_328  --> EC_329 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R4, Proc_R1

state "EC< id : 329 , H : 142 , step : 0 >" as EC_329 #Pink
EC_329: 1: par
EC_329: 2: 	par
EC_329: 3: 		par
EC_329: 4: 			par
EC_329: 5: 				alt invariant( [] ~> true )
EC_329: 6: 					[ true ] / the set button is pressed
EC_329: 7: 					alt invariant( [clock] ~> clock<=60 )
EC_329: 8: 						[ clock==60 ] / activate the alarm
EC_329: 9: 						call( PostProc_R1 )
EC_329: 10: 			||
EC_329: 11: 				NIL
EC_329: 12: 		||
EC_329: 13: 			NIL
EC_329: 14: 	||
EC_329: 15: 		NIL
EC_329: 16: ||
EC_329: 17: 	NIL

EC_329 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_329  --> EC_331 : inv [] => [true, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 331 , H : 143 , step : 0 >" as EC_331 #Orange
EC_331: 1: par
EC_331: 2: 	par
EC_331: 3: 		par
EC_331: 4: 			par
EC_331: 5: 				alt invariant( [] ~> true )
EC_331: 6: 					[ true ] / the set button is pressed
EC_331: 7: 					alt invariant( [clock] ~> clock<=60 )
EC_331: 8: 						[ clock==60 ] / activate the alarm
EC_331: 9: 						call( PostProc_R1 )
EC_331: 10: 			||
EC_331: 11: 				NIL
EC_331: 12: 		||
EC_331: 13: 			NIL
EC_331: 14: 	||
EC_331: 15: 		NIL
EC_331: 16: ||
EC_331: 17: 	NIL

EC_331 : DBM: R3_x_resp>=240, R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_331  --> EC_332 : inv [] => [true, True, True, True, True]\lact [true] / the set button is pressed

state "EC< id : 332 , H : 144 , step : 83 >" as EC_332 #LightBlue
EC_332: 1: par
EC_332: 2: 	par
EC_332: 3: 		par
EC_332: 4: 			par
EC_332: 5: 				alt invariant( [clock] ~> clock<=60 )
EC_332: 6: 					[ clock==60 ] / activate the alarm
EC_332: 7: 					call( PostProc_R1 )
EC_332: 8: 			||
EC_332: 9: 				NIL
EC_332: 10: 		||
EC_332: 11: 			NIL
EC_332: 12: 	||
EC_332: 13: 		NIL
EC_332: 14: ||
EC_332: 15: 	NIL

EC_332 : DBM: R3_x_resp>=240, R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_332  --> EC_334 : inv [clock] => [clock<=60, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 334 , H : 145 , step : 0 >" as EC_334 #Orange
EC_334: 1: par
EC_334: 2: 	par
EC_334: 3: 		par
EC_334: 4: 			par
EC_334: 5: 				alt invariant( [clock] ~> clock<=60 )
EC_334: 6: 					[ clock==60 ] / activate the alarm
EC_334: 7: 					call( PostProc_R1 )
EC_334: 8: 			||
EC_334: 9: 				NIL
EC_334: 10: 		||
EC_334: 11: 			NIL
EC_334: 12: 	||
EC_334: 13: 		NIL
EC_334: 14: ||
EC_334: 15: 	NIL

EC_334 : DBM: R3_x_resp>=240, clock<=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-240,
EC_334  --> EC_335 : inv [clock] => [clock<=60, True, True, True, True]\lact [clock==60] / activate the alarm

state "EC< id : 335 , H : 146 , step : 84 >" as EC_335 #LightBlue
EC_335: 1: par
EC_335: 2: 	par
EC_335: 3: 		par
EC_335: 4: 			par
EC_335: 5: 				call( PostProc_R1 )
EC_335: 6: 			||
EC_335: 7: 				NIL
EC_335: 8: 		||
EC_335: 9: 			NIL
EC_335: 10: 	||
EC_335: 11: 		NIL
EC_335: 12: ||
EC_335: 13: 	NIL

EC_335 : DBM: R7_x_resp>=60, R3_x_resp>=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-240,
EC_335  --> EC_336 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R1, Proc_R2

state "EC< id : 336 , H : 147 , step : 0 >" as EC_336 #Pink
EC_336: 1: par
EC_336: 2: 	par
EC_336: 3: 		par
EC_336: 4: 			par
EC_336: 5: 				alt invariant( [] ~> true )
EC_336: 6: 					[ true ] / motion is detected
EC_336: 7: 					alt invariant( [clock] ~> clock<=0 )
EC_336: 8: 						[ clock==0 ] / emit a tone
EC_336: 9: 						call( PostProc_R2 )
EC_336: 10: 			||
EC_336: 11: 				NIL
EC_336: 12: 		||
EC_336: 13: 			NIL
EC_336: 14: 	||
EC_336: 15: 		NIL
EC_336: 16: ||
EC_336: 17: 	NIL

EC_336 : DBM: R7_x_resp>=60, R3_x_resp>=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-240,
EC_336  --> EC_338 : inv [] => [true, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 338 , H : 148 , step : 0 >" as EC_338 #Orange
EC_338: 1: par
EC_338: 2: 	par
EC_338: 3: 		par
EC_338: 4: 			par
EC_338: 5: 				alt invariant( [] ~> true )
EC_338: 6: 					[ true ] / motion is detected
EC_338: 7: 					alt invariant( [clock] ~> clock<=0 )
EC_338: 8: 						[ clock==0 ] / emit a tone
EC_338: 9: 						call( PostProc_R2 )
EC_338: 10: 			||
EC_338: 11: 				NIL
EC_338: 12: 		||
EC_338: 13: 			NIL
EC_338: 14: 	||
EC_338: 15: 		NIL
EC_338: 16: ||
EC_338: 17: 	NIL

EC_338 : DBM: R7_x_resp>=60, R3_x_resp>=300, clock>=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-240,
EC_338  --> EC_339 : inv [] => [true, True, True, True, True]\lact [true] / motion is detected

state "EC< id : 339 , H : 149 , step : 85 >" as EC_339 #LightBlue
EC_339: 1: par
EC_339: 2: 	par
EC_339: 3: 		par
EC_339: 4: 			par
EC_339: 5: 				alt invariant( [clock] ~> clock<=0 )
EC_339: 6: 					[ clock==0 ] / emit a tone
EC_339: 7: 					call( PostProc_R2 )
EC_339: 8: 			||
EC_339: 9: 				NIL
EC_339: 10: 		||
EC_339: 11: 			NIL
EC_339: 12: 	||
EC_339: 13: 		NIL
EC_339: 14: ||
EC_339: 15: 	NIL

EC_339 : DBM: R7_x_resp>=60, R3_x_resp>=300, clock>=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-240,
EC_339  --> EC_341 : inv [clock] => [clock<=0, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 341 , H : 150 , step : 0 >" as EC_341 #Orange
EC_341: 1: par
EC_341: 2: 	par
EC_341: 3: 		par
EC_341: 4: 			par
EC_341: 5: 				alt invariant( [clock] ~> clock<=0 )
EC_341: 6: 					[ clock==0 ] / emit a tone
EC_341: 7: 					call( PostProc_R2 )
EC_341: 8: 			||
EC_341: 9: 				NIL
EC_341: 10: 		||
EC_341: 11: 			NIL
EC_341: 12: 	||
EC_341: 13: 		NIL
EC_341: 14: ||
EC_341: 15: 	NIL

EC_341 : DBM: R7_x_resp>=60, R3_x_resp>=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-300,
EC_341  --> EC_342 : inv [clock] => [clock<=0, True, True, True, True]\lact [clock==0] / emit a tone

state "EC< id : 342 , H : 151 , step : 86 >" as EC_342 #LightBlue
EC_342: 1: par
EC_342: 2: 	par
EC_342: 3: 		par
EC_342: 4: 			par
EC_342: 5: 				call( PostProc_R2 )
EC_342: 6: 			||
EC_342: 7: 				NIL
EC_342: 8: 		||
EC_342: 9: 			NIL
EC_342: 10: 	||
EC_342: 11: 		NIL
EC_342: 12: ||
EC_342: 13: 	NIL

EC_342 : DBM: R7_x_resp>=60, R3_x_resp>=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-300,
EC_342  --> EC_343 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R2

state "EC< id : 343 , H : 152 , step : 0 >" as EC_343 #Pink
EC_343: 1: par
EC_343: 2: 	par
EC_343: 3: 		par
EC_343: 4: 			par
EC_343: 5: 				par sync [the alarm is disarmed]
EC_343: 6: 					alt invariant( [R3_x_resp] ~> R3_x_resp<=300 / start time period within 0 to 300 )
EC_343: 7: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_343: 8: 						call( PostProc_R3 )
EC_343: 9: 					++
EC_343: 10: 						[ R3_x_resp==300 ] / deadline at 300
EC_343: 11: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_343: 12: 							[ clock==0 ] / turn off the tone
EC_343: 13: 							call( PostProc_R5 )
EC_343: 14: 				&&
EC_343: 15: 					alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_343: 16: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_343: 17: 						call( PostProc_R7 )
EC_343: 18: 					++
EC_343: 19: 						[ R7_x_resp==60 ] / deadline at 60
EC_343: 20: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_343: 21: 							[ clock==0 ] / alert the emergency center
EC_343: 22: 							call( PostProc_R9 )
EC_343: 23: 			||
EC_343: 24: 				NIL
EC_343: 25: 		||
EC_343: 26: 			NIL
EC_343: 27: 	||
EC_343: 28: 		NIL
EC_343: 29: ||
EC_343: 30: 	NIL

EC_343 : DBM: R7_x_resp>=60, R3_x_resp>=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-300,
EC_343  --> EC_345 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [True] / META:[start time period within 0 to 300, start time period within 0 to 60]

state "EC< id : 345 , H : 153 , step : 0 >" as EC_345 #Orange
EC_345: 1: par
EC_345: 2: 	par
EC_345: 3: 		par
EC_345: 4: 			par
EC_345: 5: 				par sync [the alarm is disarmed]
EC_345: 6: 					alt invariant( [R3_x_resp] ~> R3_x_resp<=300 / start time period within 0 to 300 )
EC_345: 7: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_345: 8: 						call( PostProc_R3 )
EC_345: 9: 					++
EC_345: 10: 						[ R3_x_resp==300 ] / deadline at 300
EC_345: 11: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_345: 12: 							[ clock==0 ] / turn off the tone
EC_345: 13: 							call( PostProc_R5 )
EC_345: 14: 				&&
EC_345: 15: 					alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_345: 16: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_345: 17: 						call( PostProc_R7 )
EC_345: 18: 					++
EC_345: 19: 						[ R7_x_resp==60 ] / deadline at 60
EC_345: 20: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_345: 21: 							[ clock==0 ] / alert the emergency center
EC_345: 22: 							call( PostProc_R9 )
EC_345: 23: 			||
EC_345: 24: 				NIL
EC_345: 25: 		||
EC_345: 26: 			NIL
EC_345: 27: 	||
EC_345: 28: 		NIL
EC_345: 29: ||
EC_345: 30: 	NIL

EC_345 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_345  --> EC_346 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 346 , H : 154 , step : 87 >" as EC_346 #LightBlue
EC_346: 1: par
EC_346: 2: 	par
EC_346: 3: 		par
EC_346: 4: 			par
EC_346: 5: 				par sync [the alarm is disarmed]
EC_346: 6: 					call( PostProc_R3 )
EC_346: 7: 				&&
EC_346: 8: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_346: 9: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_346: 10: 						call( PostProc_R7 )
EC_346: 11: 					++
EC_346: 12: 						[ R7_x_resp==60 ] / deadline at 60
EC_346: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_346: 14: 							[ clock==0 ] / alert the emergency center
EC_346: 15: 							call( PostProc_R9 )
EC_346: 16: 			||
EC_346: 17: 				NIL
EC_346: 18: 		||
EC_346: 19: 			NIL
EC_346: 20: 	||
EC_346: 21: 		NIL
EC_346: 22: ||
EC_346: 23: 	NIL

EC_346 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_346  --> EC_350 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 350 , H : 155 , step : 0 >" as EC_350 #Pink
EC_350: 1: par
EC_350: 2: 	par
EC_350: 3: 		par
EC_350: 4: 			par
EC_350: 5: 				par sync [the alarm is disarmed]
EC_350: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_350: 7: 						[ true ] / the alarm is disarmed
EC_350: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_350: 9: 							[ clock==0 ] / turn off the tone
EC_350: 10: 							call( PostProc_R4 )
EC_350: 11: 				&&
EC_350: 12: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_350: 13: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_350: 14: 						call( PostProc_R7 )
EC_350: 15: 					++
EC_350: 16: 						[ R7_x_resp==60 ] / deadline at 60
EC_350: 17: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_350: 18: 							[ clock==0 ] / alert the emergency center
EC_350: 19: 							call( PostProc_R9 )
EC_350: 20: 			||
EC_350: 21: 				NIL
EC_350: 22: 		||
EC_350: 23: 			NIL
EC_350: 24: 	||
EC_350: 25: 		NIL
EC_350: 26: ||
EC_350: 27: 	NIL

EC_350 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_350  --> EC_352 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 352 , H : 156 , step : 0 >" as EC_352 #Orange
EC_352: 1: par
EC_352: 2: 	par
EC_352: 3: 		par
EC_352: 4: 			par
EC_352: 5: 				par sync [the alarm is disarmed]
EC_352: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_352: 7: 						[ true ] / the alarm is disarmed
EC_352: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_352: 9: 							[ clock==0 ] / turn off the tone
EC_352: 10: 							call( PostProc_R4 )
EC_352: 11: 				&&
EC_352: 12: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_352: 13: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_352: 14: 						call( PostProc_R7 )
EC_352: 15: 					++
EC_352: 16: 						[ R7_x_resp==60 ] / deadline at 60
EC_352: 17: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_352: 18: 							[ clock==0 ] / alert the emergency center
EC_352: 19: 							call( PostProc_R9 )
EC_352: 20: 			||
EC_352: 21: 				NIL
EC_352: 22: 		||
EC_352: 23: 			NIL
EC_352: 24: 	||
EC_352: 25: 		NIL
EC_352: 26: ||
EC_352: 27: 	NIL

EC_352 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_352  --> EC_353 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 353 , H : 157 , step : 88 >" as EC_353 #LightBlue
EC_353: 1: par
EC_353: 2: 	par
EC_353: 3: 		par
EC_353: 4: 			par
EC_353: 5: 				par sync [the alarm is disarmed]
EC_353: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_353: 7: 						[ true ] / the alarm is disarmed
EC_353: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_353: 9: 							[ clock==0 ] / turn off the tone
EC_353: 10: 							call( PostProc_R4 )
EC_353: 11: 				&&
EC_353: 12: 					call( PostProc_R7 )
EC_353: 13: 			||
EC_353: 14: 				NIL
EC_353: 15: 		||
EC_353: 16: 			NIL
EC_353: 17: 	||
EC_353: 18: 		NIL
EC_353: 19: ||
EC_353: 20: 	NIL

EC_353 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_353  --> EC_355 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 355 , H : 158 , step : 0 >" as EC_355 #Pink
EC_355: 1: par
EC_355: 2: 	par
EC_355: 3: 		par
EC_355: 4: 			par
EC_355: 5: 				par sync [the alarm is disarmed]
EC_355: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_355: 7: 						[ true ] / the alarm is disarmed
EC_355: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_355: 9: 							[ clock==0 ] / turn off the tone
EC_355: 10: 							call( PostProc_R4 )
EC_355: 11: 				&&
EC_355: 12: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_355: 13: 						[ true ] / the alarm is disarmed
EC_355: 14: 						call( PostProc_R8 )
EC_355: 15: 			||
EC_355: 16: 				NIL
EC_355: 17: 		||
EC_355: 18: 			NIL
EC_355: 19: 	||
EC_355: 20: 		NIL
EC_355: 21: ||
EC_355: 22: 	NIL

EC_355 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_355  --> EC_357 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 357 , H : 159 , step : 0 >" as EC_357 #Orange
EC_357: 1: par
EC_357: 2: 	par
EC_357: 3: 		par
EC_357: 4: 			par
EC_357: 5: 				par sync [the alarm is disarmed]
EC_357: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_357: 7: 						[ true ] / the alarm is disarmed
EC_357: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_357: 9: 							[ clock==0 ] / turn off the tone
EC_357: 10: 							call( PostProc_R4 )
EC_357: 11: 				&&
EC_357: 12: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_357: 13: 						[ true ] / the alarm is disarmed
EC_357: 14: 						call( PostProc_R8 )
EC_357: 15: 			||
EC_357: 16: 				NIL
EC_357: 17: 		||
EC_357: 18: 			NIL
EC_357: 19: 	||
EC_357: 20: 		NIL
EC_357: 21: ||
EC_357: 22: 	NIL

EC_357 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_357  --> EC_358 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 358 , H : 160 , step : 89 >" as EC_358 #LightBlue
EC_358: 1: par
EC_358: 2: 	par
EC_358: 3: 		par
EC_358: 4: 			par
EC_358: 5: 				par sync [the alarm is disarmed]
EC_358: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_358: 7: 						[ clock==0 ] / turn off the tone
EC_358: 8: 						call( PostProc_R4 )
EC_358: 9: 				&&
EC_358: 10: 					call( PostProc_R8 )
EC_358: 11: 			||
EC_358: 12: 				NIL
EC_358: 13: 		||
EC_358: 14: 			NIL
EC_358: 15: 	||
EC_358: 16: 		NIL
EC_358: 17: ||
EC_358: 18: 	NIL

EC_358 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_358  --> EC_359 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 359 , H : 161 , step : 0 >" as EC_359 #Pink
EC_359: 1: par
EC_359: 2: 	par
EC_359: 3: 		par
EC_359: 4: 			par
EC_359: 5: 				par sync [the alarm is disarmed]
EC_359: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_359: 7: 						[ clock==0 ] / turn off the tone
EC_359: 8: 						call( PostProc_R4 )
EC_359: 9: 				&&
EC_359: 10: 					NIL
EC_359: 11: 			||
EC_359: 12: 				NIL
EC_359: 13: 		||
EC_359: 14: 			NIL
EC_359: 15: 	||
EC_359: 16: 		NIL
EC_359: 17: ||
EC_359: 18: 	NIL

EC_359 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_359  --> EC_361 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 361 , H : 162 , step : 0 >" as EC_361 #Orange
EC_361: 1: par
EC_361: 2: 	par
EC_361: 3: 		par
EC_361: 4: 			par
EC_361: 5: 				par sync [the alarm is disarmed]
EC_361: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_361: 7: 						[ clock==0 ] / turn off the tone
EC_361: 8: 						call( PostProc_R4 )
EC_361: 9: 				&&
EC_361: 10: 					NIL
EC_361: 11: 			||
EC_361: 12: 				NIL
EC_361: 13: 		||
EC_361: 14: 			NIL
EC_361: 15: 	||
EC_361: 16: 		NIL
EC_361: 17: ||
EC_361: 18: 	NIL

EC_361 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_361  --> EC_362 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True]\lact [clock==0] / turn off the tone

state "EC< id : 362 , H : 163 , step : 90 >" as EC_362 #LightBlue
EC_362: 1: par
EC_362: 2: 	par
EC_362: 3: 		par
EC_362: 4: 			par
EC_362: 5: 				par
EC_362: 6: 					call( PostProc_R4 )
EC_362: 7: 				||
EC_362: 8: 					NIL
EC_362: 9: 			||
EC_362: 10: 				NIL
EC_362: 11: 		||
EC_362: 12: 			NIL
EC_362: 13: 	||
EC_362: 14: 		NIL
EC_362: 15: ||
EC_362: 16: 	NIL

EC_362 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_362  --> EC_363 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R4, Proc_R1

state "EC< id : 363 , H : 164 , step : 0 >" as EC_363 #Pink
EC_363: 1: par
EC_363: 2: 	par
EC_363: 3: 		par
EC_363: 4: 			par
EC_363: 5: 				par
EC_363: 6: 					alt invariant( [] ~> true )
EC_363: 7: 						[ true ] / the set button is pressed
EC_363: 8: 						alt invariant( [clock] ~> clock<=60 )
EC_363: 9: 							[ clock==60 ] / activate the alarm
EC_363: 10: 							call( PostProc_R1 )
EC_363: 11: 				||
EC_363: 12: 					NIL
EC_363: 13: 			||
EC_363: 14: 				NIL
EC_363: 15: 		||
EC_363: 16: 			NIL
EC_363: 17: 	||
EC_363: 18: 		NIL
EC_363: 19: ||
EC_363: 20: 	NIL

EC_363 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_363  --> EC_365 : inv [] => [true, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 365 , H : 165 , step : 0 >" as EC_365 #Orange
EC_365: 1: par
EC_365: 2: 	par
EC_365: 3: 		par
EC_365: 4: 			par
EC_365: 5: 				par
EC_365: 6: 					alt invariant( [] ~> true )
EC_365: 7: 						[ true ] / the set button is pressed
EC_365: 8: 						alt invariant( [clock] ~> clock<=60 )
EC_365: 9: 							[ clock==60 ] / activate the alarm
EC_365: 10: 							call( PostProc_R1 )
EC_365: 11: 				||
EC_365: 12: 					NIL
EC_365: 13: 			||
EC_365: 14: 				NIL
EC_365: 15: 		||
EC_365: 16: 			NIL
EC_365: 17: 	||
EC_365: 18: 		NIL
EC_365: 19: ||
EC_365: 20: 	NIL

EC_365 : DBM: R7_x_resp=R3_x_resp, R7_x_resp-clock<=60, clock-R7_x_resp<=0,\l   R3_x_resp-clock<=60, clock-R3_x_resp<=0,
EC_365  --> EC_366 : inv [] => [true, True, True, True, True, True]\lact [true] / the set button is pressed

state "EC< id : 366 , H : 166 , step : 91 >" as EC_366 #LightBlue
EC_366: 1: par
EC_366: 2: 	par
EC_366: 3: 		par
EC_366: 4: 			par
EC_366: 5: 				par
EC_366: 6: 					alt invariant( [clock] ~> clock<=60 )
EC_366: 7: 						[ clock==60 ] / activate the alarm
EC_366: 8: 						call( PostProc_R1 )
EC_366: 9: 				||
EC_366: 10: 					NIL
EC_366: 11: 			||
EC_366: 12: 				NIL
EC_366: 13: 		||
EC_366: 14: 			NIL
EC_366: 15: 	||
EC_366: 16: 		NIL
EC_366: 17: ||
EC_366: 18: 	NIL

EC_366 : DBM: R7_x_resp=R3_x_resp, R7_x_resp-clock<=60, clock-R7_x_resp<=0,\l   R3_x_resp-clock<=60, clock-R3_x_resp<=0,
EC_366  --> EC_368 : inv [clock] => [clock<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 368 , H : 167 , step : 0 >" as EC_368 #Orange
EC_368: 1: par
EC_368: 2: 	par
EC_368: 3: 		par
EC_368: 4: 			par
EC_368: 5: 				par
EC_368: 6: 					alt invariant( [clock] ~> clock<=60 )
EC_368: 7: 						[ clock==60 ] / activate the alarm
EC_368: 8: 						call( PostProc_R1 )
EC_368: 9: 				||
EC_368: 10: 					NIL
EC_368: 11: 			||
EC_368: 12: 				NIL
EC_368: 13: 		||
EC_368: 14: 			NIL
EC_368: 15: 	||
EC_368: 16: 		NIL
EC_368: 17: ||
EC_368: 18: 	NIL

EC_368 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_368  --> EC_369 : \lact [True] / META:REDUNDANCE:EC< id : 10 , H : 7 >

state "EC< id : 369 , H : 168 , step : 0 >" as EC_369 #Green
EC_369: 1: par
EC_369: 2: 	par
EC_369: 3: 		par
EC_369: 4: 			par
EC_369: 5: 				par
EC_369: 6: 					alt invariant( [clock] ~> clock<=60 )
EC_369: 7: 						[ clock==60 ] / activate the alarm
EC_369: 8: 						call( PostProc_R1 )
EC_369: 9: 				||
EC_369: 10: 					NIL
EC_369: 11: 			||
EC_369: 12: 				NIL
EC_369: 13: 		||
EC_369: 14: 			NIL
EC_369: 15: 	||
EC_369: 16: 		NIL
EC_369: 17: ||
EC_369: 18: 	NIL

EC_369 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_352  --> EC_354 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 354 , H : 157 , step : 92 >" as EC_354 #LightBlue
EC_354: 1: par
EC_354: 2: 	par
EC_354: 3: 		par
EC_354: 4: 			par
EC_354: 5: 				par sync [the alarm is disarmed]
EC_354: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_354: 7: 						[ true ] / the alarm is disarmed
EC_354: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_354: 9: 							[ clock==0 ] / turn off the tone
EC_354: 10: 							call( PostProc_R4 )
EC_354: 11: 				&&
EC_354: 12: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_354: 13: 						[ clock==0 ] / alert the emergency center
EC_354: 14: 						call( PostProc_R9 )
EC_354: 15: 			||
EC_354: 16: 				NIL
EC_354: 17: 		||
EC_354: 18: 			NIL
EC_354: 19: 	||
EC_354: 20: 		NIL
EC_354: 21: ||
EC_354: 22: 	NIL

EC_354 : DBM: R7_x_resp=60, R3_x_resp=60, clock=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_354  --> EC_371 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 371 , H : 158 , step : 0 >" as EC_371 #Orange
EC_371: 1: par
EC_371: 2: 	par
EC_371: 3: 		par
EC_371: 4: 			par
EC_371: 5: 				par sync [the alarm is disarmed]
EC_371: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_371: 7: 						[ true ] / the alarm is disarmed
EC_371: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_371: 9: 							[ clock==0 ] / turn off the tone
EC_371: 10: 							call( PostProc_R4 )
EC_371: 11: 				&&
EC_371: 12: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_371: 13: 						[ clock==0 ] / alert the emergency center
EC_371: 14: 						call( PostProc_R9 )
EC_371: 15: 			||
EC_371: 16: 				NIL
EC_371: 17: 		||
EC_371: 18: 			NIL
EC_371: 19: 	||
EC_371: 20: 		NIL
EC_371: 21: ||
EC_371: 22: 	NIL

EC_371 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_371  --> EC_372 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 372 , H : 159 , step : 93 >" as EC_372 #LightBlue
EC_372: 1: par
EC_372: 2: 	par
EC_372: 3: 		par
EC_372: 4: 			par
EC_372: 5: 				par sync [the alarm is disarmed]
EC_372: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_372: 7: 						[ true ] / the alarm is disarmed
EC_372: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_372: 9: 							[ clock==0 ] / turn off the tone
EC_372: 10: 							call( PostProc_R4 )
EC_372: 11: 				&&
EC_372: 12: 					call( PostProc_R9 )
EC_372: 13: 			||
EC_372: 14: 				NIL
EC_372: 15: 		||
EC_372: 16: 			NIL
EC_372: 17: 	||
EC_372: 18: 		NIL
EC_372: 19: ||
EC_372: 20: 	NIL

EC_372 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_372  --> EC_373 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 373 , H : 160 , step : 0 >" as EC_373 #Pink
EC_373: 1: par
EC_373: 2: 	par
EC_373: 3: 		par
EC_373: 4: 			par
EC_373: 5: 				par sync [the alarm is disarmed]
EC_373: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_373: 7: 						[ true ] / the alarm is disarmed
EC_373: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_373: 9: 							[ clock==0 ] / turn off the tone
EC_373: 10: 							call( PostProc_R4 )
EC_373: 11: 				&&
EC_373: 12: 					alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_373: 13: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_373: 14: 						call( PostProc_R7 )
EC_373: 15: 					++
EC_373: 16: 						[ R7_x_resp==60 ] / deadline at 60
EC_373: 17: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_373: 18: 							[ clock==0 ] / alert the emergency center
EC_373: 19: 							call( PostProc_R9 )
EC_373: 20: 			||
EC_373: 21: 				NIL
EC_373: 22: 		||
EC_373: 23: 			NIL
EC_373: 24: 	||
EC_373: 25: 		NIL
EC_373: 26: ||
EC_373: 27: 	NIL

EC_373 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_373  --> EC_375 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 375 , H : 161 , step : 0 >" as EC_375 #Orange
EC_375: 1: par
EC_375: 2: 	par
EC_375: 3: 		par
EC_375: 4: 			par
EC_375: 5: 				par sync [the alarm is disarmed]
EC_375: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_375: 7: 						[ true ] / the alarm is disarmed
EC_375: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_375: 9: 							[ clock==0 ] / turn off the tone
EC_375: 10: 							call( PostProc_R4 )
EC_375: 11: 				&&
EC_375: 12: 					alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_375: 13: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_375: 14: 						call( PostProc_R7 )
EC_375: 15: 					++
EC_375: 16: 						[ R7_x_resp==60 ] / deadline at 60
EC_375: 17: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_375: 18: 							[ clock==0 ] / alert the emergency center
EC_375: 19: 							call( PostProc_R9 )
EC_375: 20: 			||
EC_375: 21: 				NIL
EC_375: 22: 		||
EC_375: 23: 			NIL
EC_375: 24: 	||
EC_375: 25: 		NIL
EC_375: 26: ||
EC_375: 27: 	NIL

EC_375 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_375  --> EC_376 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 376 , H : 162 , step : 94 >" as EC_376 #LightBlue
EC_376: 1: par
EC_376: 2: 	par
EC_376: 3: 		par
EC_376: 4: 			par
EC_376: 5: 				par sync [the alarm is disarmed]
EC_376: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_376: 7: 						[ true ] / the alarm is disarmed
EC_376: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_376: 9: 							[ clock==0 ] / turn off the tone
EC_376: 10: 							call( PostProc_R4 )
EC_376: 11: 				&&
EC_376: 12: 					call( PostProc_R7 )
EC_376: 13: 			||
EC_376: 14: 				NIL
EC_376: 15: 		||
EC_376: 16: 			NIL
EC_376: 17: 	||
EC_376: 18: 		NIL
EC_376: 19: ||
EC_376: 20: 	NIL

EC_376 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_376  --> EC_378 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 378 , H : 163 , step : 0 >" as EC_378 #Pink
EC_378: 1: par
EC_378: 2: 	par
EC_378: 3: 		par
EC_378: 4: 			par
EC_378: 5: 				par sync [the alarm is disarmed]
EC_378: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_378: 7: 						[ true ] / the alarm is disarmed
EC_378: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_378: 9: 							[ clock==0 ] / turn off the tone
EC_378: 10: 							call( PostProc_R4 )
EC_378: 11: 				&&
EC_378: 12: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_378: 13: 						[ true ] / the alarm is disarmed
EC_378: 14: 						call( PostProc_R8 )
EC_378: 15: 			||
EC_378: 16: 				NIL
EC_378: 17: 		||
EC_378: 18: 			NIL
EC_378: 19: 	||
EC_378: 20: 		NIL
EC_378: 21: ||
EC_378: 22: 	NIL

EC_378 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_378  --> EC_380 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 380 , H : 164 , step : 0 >" as EC_380 #Orange
EC_380: 1: par
EC_380: 2: 	par
EC_380: 3: 		par
EC_380: 4: 			par
EC_380: 5: 				par sync [the alarm is disarmed]
EC_380: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_380: 7: 						[ true ] / the alarm is disarmed
EC_380: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_380: 9: 							[ clock==0 ] / turn off the tone
EC_380: 10: 							call( PostProc_R4 )
EC_380: 11: 				&&
EC_380: 12: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_380: 13: 						[ true ] / the alarm is disarmed
EC_380: 14: 						call( PostProc_R8 )
EC_380: 15: 			||
EC_380: 16: 				NIL
EC_380: 17: 		||
EC_380: 18: 			NIL
EC_380: 19: 	||
EC_380: 20: 		NIL
EC_380: 21: ||
EC_380: 22: 	NIL

EC_380 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_380  --> EC_381 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 381 , H : 165 , step : 95 >" as EC_381 #LightBlue
EC_381: 1: par
EC_381: 2: 	par
EC_381: 3: 		par
EC_381: 4: 			par
EC_381: 5: 				par sync [the alarm is disarmed]
EC_381: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_381: 7: 						[ clock==0 ] / turn off the tone
EC_381: 8: 						call( PostProc_R4 )
EC_381: 9: 				&&
EC_381: 10: 					call( PostProc_R8 )
EC_381: 11: 			||
EC_381: 12: 				NIL
EC_381: 13: 		||
EC_381: 14: 			NIL
EC_381: 15: 	||
EC_381: 16: 		NIL
EC_381: 17: ||
EC_381: 18: 	NIL

EC_381 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_381  --> EC_382 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 382 , H : 166 , step : 0 >" as EC_382 #Pink
EC_382: 1: par
EC_382: 2: 	par
EC_382: 3: 		par
EC_382: 4: 			par
EC_382: 5: 				par sync [the alarm is disarmed]
EC_382: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_382: 7: 						[ clock==0 ] / turn off the tone
EC_382: 8: 						call( PostProc_R4 )
EC_382: 9: 				&&
EC_382: 10: 					NIL
EC_382: 11: 			||
EC_382: 12: 				NIL
EC_382: 13: 		||
EC_382: 14: 			NIL
EC_382: 15: 	||
EC_382: 16: 		NIL
EC_382: 17: ||
EC_382: 18: 	NIL

EC_382 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_382  --> EC_384 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 384 , H : 167 , step : 0 >" as EC_384 #Orange
EC_384: 1: par
EC_384: 2: 	par
EC_384: 3: 		par
EC_384: 4: 			par
EC_384: 5: 				par sync [the alarm is disarmed]
EC_384: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_384: 7: 						[ clock==0 ] / turn off the tone
EC_384: 8: 						call( PostProc_R4 )
EC_384: 9: 				&&
EC_384: 10: 					NIL
EC_384: 11: 			||
EC_384: 12: 				NIL
EC_384: 13: 		||
EC_384: 14: 			NIL
EC_384: 15: 	||
EC_384: 16: 		NIL
EC_384: 17: ||
EC_384: 18: 	NIL

EC_384 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_384  --> EC_385 : \lact [True] / META:REDUNDANCE:EC< id : 60 , H : 29 >

state "EC< id : 385 , H : 168 , step : 0 >" as EC_385 #Green
EC_385: 1: par
EC_385: 2: 	par
EC_385: 3: 		par
EC_385: 4: 			par
EC_385: 5: 				par sync [the alarm is disarmed]
EC_385: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_385: 7: 						[ clock==0 ] / turn off the tone
EC_385: 8: 						call( PostProc_R4 )
EC_385: 9: 				&&
EC_385: 10: 					NIL
EC_385: 11: 			||
EC_385: 12: 				NIL
EC_385: 13: 		||
EC_385: 14: 			NIL
EC_385: 15: 	||
EC_385: 16: 		NIL
EC_385: 17: ||
EC_385: 18: 	NIL

EC_385 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_375  --> EC_377 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 377 , H : 162 , step : 96 >" as EC_377 #LightBlue
EC_377: 1: par
EC_377: 2: 	par
EC_377: 3: 		par
EC_377: 4: 			par
EC_377: 5: 				par sync [the alarm is disarmed]
EC_377: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_377: 7: 						[ true ] / the alarm is disarmed
EC_377: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_377: 9: 							[ clock==0 ] / turn off the tone
EC_377: 10: 							call( PostProc_R4 )
EC_377: 11: 				&&
EC_377: 12: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_377: 13: 						[ clock==0 ] / alert the emergency center
EC_377: 14: 						call( PostProc_R9 )
EC_377: 15: 			||
EC_377: 16: 				NIL
EC_377: 17: 		||
EC_377: 18: 			NIL
EC_377: 19: 	||
EC_377: 20: 		NIL
EC_377: 21: ||
EC_377: 22: 	NIL

EC_377 : DBM: R7_x_resp=60, R3_x_resp=120, clock=60, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp=clock, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_377  --> EC_387 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 387 , H : 163 , step : 0 >" as EC_387 #Orange
EC_387: 1: par
EC_387: 2: 	par
EC_387: 3: 		par
EC_387: 4: 			par
EC_387: 5: 				par sync [the alarm is disarmed]
EC_387: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_387: 7: 						[ true ] / the alarm is disarmed
EC_387: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_387: 9: 							[ clock==0 ] / turn off the tone
EC_387: 10: 							call( PostProc_R4 )
EC_387: 11: 				&&
EC_387: 12: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_387: 13: 						[ clock==0 ] / alert the emergency center
EC_387: 14: 						call( PostProc_R9 )
EC_387: 15: 			||
EC_387: 16: 				NIL
EC_387: 17: 		||
EC_387: 18: 			NIL
EC_387: 19: 	||
EC_387: 20: 		NIL
EC_387: 21: ||
EC_387: 22: 	NIL

EC_387 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_387  --> EC_388 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 388 , H : 164 , step : 97 >" as EC_388 #LightBlue
EC_388: 1: par
EC_388: 2: 	par
EC_388: 3: 		par
EC_388: 4: 			par
EC_388: 5: 				par sync [the alarm is disarmed]
EC_388: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_388: 7: 						[ true ] / the alarm is disarmed
EC_388: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_388: 9: 							[ clock==0 ] / turn off the tone
EC_388: 10: 							call( PostProc_R4 )
EC_388: 11: 				&&
EC_388: 12: 					call( PostProc_R9 )
EC_388: 13: 			||
EC_388: 14: 				NIL
EC_388: 15: 		||
EC_388: 16: 			NIL
EC_388: 17: 	||
EC_388: 18: 		NIL
EC_388: 19: ||
EC_388: 20: 	NIL

EC_388 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_388  --> EC_389 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 389 , H : 165 , step : 0 >" as EC_389 #Pink
EC_389: 1: par
EC_389: 2: 	par
EC_389: 3: 		par
EC_389: 4: 			par
EC_389: 5: 				par sync [the alarm is disarmed]
EC_389: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_389: 7: 						[ true ] / the alarm is disarmed
EC_389: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_389: 9: 							[ clock==0 ] / turn off the tone
EC_389: 10: 							call( PostProc_R4 )
EC_389: 11: 				&&
EC_389: 12: 					alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_389: 13: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_389: 14: 						call( PostProc_R7 )
EC_389: 15: 					++
EC_389: 16: 						[ R7_x_resp==60 ] / deadline at 60
EC_389: 17: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_389: 18: 							[ clock==0 ] / alert the emergency center
EC_389: 19: 							call( PostProc_R9 )
EC_389: 20: 			||
EC_389: 21: 				NIL
EC_389: 22: 		||
EC_389: 23: 			NIL
EC_389: 24: 	||
EC_389: 25: 		NIL
EC_389: 26: ||
EC_389: 27: 	NIL

EC_389 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_389  --> EC_391 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 391 , H : 166 , step : 0 >" as EC_391 #Orange
EC_391: 1: par
EC_391: 2: 	par
EC_391: 3: 		par
EC_391: 4: 			par
EC_391: 5: 				par sync [the alarm is disarmed]
EC_391: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_391: 7: 						[ true ] / the alarm is disarmed
EC_391: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_391: 9: 							[ clock==0 ] / turn off the tone
EC_391: 10: 							call( PostProc_R4 )
EC_391: 11: 				&&
EC_391: 12: 					alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_391: 13: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_391: 14: 						call( PostProc_R7 )
EC_391: 15: 					++
EC_391: 16: 						[ R7_x_resp==60 ] / deadline at 60
EC_391: 17: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_391: 18: 							[ clock==0 ] / alert the emergency center
EC_391: 19: 							call( PostProc_R9 )
EC_391: 20: 			||
EC_391: 21: 				NIL
EC_391: 22: 		||
EC_391: 23: 			NIL
EC_391: 24: 	||
EC_391: 25: 		NIL
EC_391: 26: ||
EC_391: 27: 	NIL

EC_391 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_391  --> EC_392 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 392 , H : 167 , step : 98 >" as EC_392 #LightBlue
EC_392: 1: par
EC_392: 2: 	par
EC_392: 3: 		par
EC_392: 4: 			par
EC_392: 5: 				par sync [the alarm is disarmed]
EC_392: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_392: 7: 						[ true ] / the alarm is disarmed
EC_392: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_392: 9: 							[ clock==0 ] / turn off the tone
EC_392: 10: 							call( PostProc_R4 )
EC_392: 11: 				&&
EC_392: 12: 					call( PostProc_R7 )
EC_392: 13: 			||
EC_392: 14: 				NIL
EC_392: 15: 		||
EC_392: 16: 			NIL
EC_392: 17: 	||
EC_392: 18: 		NIL
EC_392: 19: ||
EC_392: 20: 	NIL

EC_392 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_392  --> EC_394 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 394 , H : 168 , step : 0 >" as EC_394 #Pink
EC_394: 1: par
EC_394: 2: 	par
EC_394: 3: 		par
EC_394: 4: 			par
EC_394: 5: 				par sync [the alarm is disarmed]
EC_394: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_394: 7: 						[ true ] / the alarm is disarmed
EC_394: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_394: 9: 							[ clock==0 ] / turn off the tone
EC_394: 10: 							call( PostProc_R4 )
EC_394: 11: 				&&
EC_394: 12: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_394: 13: 						[ true ] / the alarm is disarmed
EC_394: 14: 						call( PostProc_R8 )
EC_394: 15: 			||
EC_394: 16: 				NIL
EC_394: 17: 		||
EC_394: 18: 			NIL
EC_394: 19: 	||
EC_394: 20: 		NIL
EC_394: 21: ||
EC_394: 22: 	NIL

EC_394 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_394  --> EC_396 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 396 , H : 169 , step : 0 >" as EC_396 #Orange
EC_396: 1: par
EC_396: 2: 	par
EC_396: 3: 		par
EC_396: 4: 			par
EC_396: 5: 				par sync [the alarm is disarmed]
EC_396: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_396: 7: 						[ true ] / the alarm is disarmed
EC_396: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_396: 9: 							[ clock==0 ] / turn off the tone
EC_396: 10: 							call( PostProc_R4 )
EC_396: 11: 				&&
EC_396: 12: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_396: 13: 						[ true ] / the alarm is disarmed
EC_396: 14: 						call( PostProc_R8 )
EC_396: 15: 			||
EC_396: 16: 				NIL
EC_396: 17: 		||
EC_396: 18: 			NIL
EC_396: 19: 	||
EC_396: 20: 		NIL
EC_396: 21: ||
EC_396: 22: 	NIL

EC_396 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_396  --> EC_397 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 397 , H : 170 , step : 99 >" as EC_397 #LightBlue
EC_397: 1: par
EC_397: 2: 	par
EC_397: 3: 		par
EC_397: 4: 			par
EC_397: 5: 				par sync [the alarm is disarmed]
EC_397: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_397: 7: 						[ clock==0 ] / turn off the tone
EC_397: 8: 						call( PostProc_R4 )
EC_397: 9: 				&&
EC_397: 10: 					call( PostProc_R8 )
EC_397: 11: 			||
EC_397: 12: 				NIL
EC_397: 13: 		||
EC_397: 14: 			NIL
EC_397: 15: 	||
EC_397: 16: 		NIL
EC_397: 17: ||
EC_397: 18: 	NIL

EC_397 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_397  --> EC_398 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 398 , H : 171 , step : 0 >" as EC_398 #Pink
EC_398: 1: par
EC_398: 2: 	par
EC_398: 3: 		par
EC_398: 4: 			par
EC_398: 5: 				par sync [the alarm is disarmed]
EC_398: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_398: 7: 						[ clock==0 ] / turn off the tone
EC_398: 8: 						call( PostProc_R4 )
EC_398: 9: 				&&
EC_398: 10: 					NIL
EC_398: 11: 			||
EC_398: 12: 				NIL
EC_398: 13: 		||
EC_398: 14: 			NIL
EC_398: 15: 	||
EC_398: 16: 		NIL
EC_398: 17: ||
EC_398: 18: 	NIL

EC_398 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_398  --> EC_400 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 400 , H : 172 , step : 0 >" as EC_400 #Orange
EC_400: 1: par
EC_400: 2: 	par
EC_400: 3: 		par
EC_400: 4: 			par
EC_400: 5: 				par sync [the alarm is disarmed]
EC_400: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_400: 7: 						[ clock==0 ] / turn off the tone
EC_400: 8: 						call( PostProc_R4 )
EC_400: 9: 				&&
EC_400: 10: 					NIL
EC_400: 11: 			||
EC_400: 12: 				NIL
EC_400: 13: 		||
EC_400: 14: 			NIL
EC_400: 15: 	||
EC_400: 16: 		NIL
EC_400: 17: ||
EC_400: 18: 	NIL

EC_400 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_400  --> EC_401 : \lact [True] / META:REDUNDANCE:EC< id : 133 , H : 61 >

state "EC< id : 401 , H : 173 , step : 0 >" as EC_401 #Green
EC_401: 1: par
EC_401: 2: 	par
EC_401: 3: 		par
EC_401: 4: 			par
EC_401: 5: 				par sync [the alarm is disarmed]
EC_401: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_401: 7: 						[ clock==0 ] / turn off the tone
EC_401: 8: 						call( PostProc_R4 )
EC_401: 9: 				&&
EC_401: 10: 					NIL
EC_401: 11: 			||
EC_401: 12: 				NIL
EC_401: 13: 		||
EC_401: 14: 			NIL
EC_401: 15: 	||
EC_401: 16: 		NIL
EC_401: 17: ||
EC_401: 18: 	NIL

EC_401 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_391  --> EC_393 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 393 , H : 167 , step : 100 >" as EC_393 #LightBlue
EC_393: 1: par
EC_393: 2: 	par
EC_393: 3: 		par
EC_393: 4: 			par
EC_393: 5: 				par sync [the alarm is disarmed]
EC_393: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_393: 7: 						[ true ] / the alarm is disarmed
EC_393: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_393: 9: 							[ clock==0 ] / turn off the tone
EC_393: 10: 							call( PostProc_R4 )
EC_393: 11: 				&&
EC_393: 12: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_393: 13: 						[ clock==0 ] / alert the emergency center
EC_393: 14: 						call( PostProc_R9 )
EC_393: 15: 			||
EC_393: 16: 				NIL
EC_393: 17: 		||
EC_393: 18: 			NIL
EC_393: 19: 	||
EC_393: 20: 		NIL
EC_393: 21: ||
EC_393: 22: 	NIL

EC_393 : DBM: R7_x_resp=60, R3_x_resp=180, clock=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp=clock, R3_x_resp-clock<=120,\l   clock-R3_x_resp<=-120,
EC_393  --> EC_403 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 403 , H : 168 , step : 0 >" as EC_403 #Orange
EC_403: 1: par
EC_403: 2: 	par
EC_403: 3: 		par
EC_403: 4: 			par
EC_403: 5: 				par sync [the alarm is disarmed]
EC_403: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_403: 7: 						[ true ] / the alarm is disarmed
EC_403: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_403: 9: 							[ clock==0 ] / turn off the tone
EC_403: 10: 							call( PostProc_R4 )
EC_403: 11: 				&&
EC_403: 12: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_403: 13: 						[ clock==0 ] / alert the emergency center
EC_403: 14: 						call( PostProc_R9 )
EC_403: 15: 			||
EC_403: 16: 				NIL
EC_403: 17: 		||
EC_403: 18: 			NIL
EC_403: 19: 	||
EC_403: 20: 		NIL
EC_403: 21: ||
EC_403: 22: 	NIL

EC_403 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_403  --> EC_404 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 404 , H : 169 , step : 101 >" as EC_404 #LightBlue
EC_404: 1: par
EC_404: 2: 	par
EC_404: 3: 		par
EC_404: 4: 			par
EC_404: 5: 				par sync [the alarm is disarmed]
EC_404: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_404: 7: 						[ true ] / the alarm is disarmed
EC_404: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_404: 9: 							[ clock==0 ] / turn off the tone
EC_404: 10: 							call( PostProc_R4 )
EC_404: 11: 				&&
EC_404: 12: 					call( PostProc_R9 )
EC_404: 13: 			||
EC_404: 14: 				NIL
EC_404: 15: 		||
EC_404: 16: 			NIL
EC_404: 17: 	||
EC_404: 18: 		NIL
EC_404: 19: ||
EC_404: 20: 	NIL

EC_404 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_404  --> EC_405 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 405 , H : 170 , step : 0 >" as EC_405 #Pink
EC_405: 1: par
EC_405: 2: 	par
EC_405: 3: 		par
EC_405: 4: 			par
EC_405: 5: 				par sync [the alarm is disarmed]
EC_405: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_405: 7: 						[ true ] / the alarm is disarmed
EC_405: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_405: 9: 							[ clock==0 ] / turn off the tone
EC_405: 10: 							call( PostProc_R4 )
EC_405: 11: 				&&
EC_405: 12: 					alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_405: 13: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_405: 14: 						call( PostProc_R7 )
EC_405: 15: 					++
EC_405: 16: 						[ R7_x_resp==60 ] / deadline at 60
EC_405: 17: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_405: 18: 							[ clock==0 ] / alert the emergency center
EC_405: 19: 							call( PostProc_R9 )
EC_405: 20: 			||
EC_405: 21: 				NIL
EC_405: 22: 		||
EC_405: 23: 			NIL
EC_405: 24: 	||
EC_405: 25: 		NIL
EC_405: 26: ||
EC_405: 27: 	NIL

EC_405 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_405  --> EC_407 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 407 , H : 171 , step : 0 >" as EC_407 #Orange
EC_407: 1: par
EC_407: 2: 	par
EC_407: 3: 		par
EC_407: 4: 			par
EC_407: 5: 				par sync [the alarm is disarmed]
EC_407: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_407: 7: 						[ true ] / the alarm is disarmed
EC_407: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_407: 9: 							[ clock==0 ] / turn off the tone
EC_407: 10: 							call( PostProc_R4 )
EC_407: 11: 				&&
EC_407: 12: 					alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_407: 13: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_407: 14: 						call( PostProc_R7 )
EC_407: 15: 					++
EC_407: 16: 						[ R7_x_resp==60 ] / deadline at 60
EC_407: 17: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_407: 18: 							[ clock==0 ] / alert the emergency center
EC_407: 19: 							call( PostProc_R9 )
EC_407: 20: 			||
EC_407: 21: 				NIL
EC_407: 22: 		||
EC_407: 23: 			NIL
EC_407: 24: 	||
EC_407: 25: 		NIL
EC_407: 26: ||
EC_407: 27: 	NIL

EC_407 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_407  --> EC_408 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 408 , H : 172 , step : 102 >" as EC_408 #LightBlue
EC_408: 1: par
EC_408: 2: 	par
EC_408: 3: 		par
EC_408: 4: 			par
EC_408: 5: 				par sync [the alarm is disarmed]
EC_408: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_408: 7: 						[ true ] / the alarm is disarmed
EC_408: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_408: 9: 							[ clock==0 ] / turn off the tone
EC_408: 10: 							call( PostProc_R4 )
EC_408: 11: 				&&
EC_408: 12: 					call( PostProc_R7 )
EC_408: 13: 			||
EC_408: 14: 				NIL
EC_408: 15: 		||
EC_408: 16: 			NIL
EC_408: 17: 	||
EC_408: 18: 		NIL
EC_408: 19: ||
EC_408: 20: 	NIL

EC_408 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_408  --> EC_410 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 410 , H : 173 , step : 0 >" as EC_410 #Pink
EC_410: 1: par
EC_410: 2: 	par
EC_410: 3: 		par
EC_410: 4: 			par
EC_410: 5: 				par sync [the alarm is disarmed]
EC_410: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_410: 7: 						[ true ] / the alarm is disarmed
EC_410: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_410: 9: 							[ clock==0 ] / turn off the tone
EC_410: 10: 							call( PostProc_R4 )
EC_410: 11: 				&&
EC_410: 12: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_410: 13: 						[ true ] / the alarm is disarmed
EC_410: 14: 						call( PostProc_R8 )
EC_410: 15: 			||
EC_410: 16: 				NIL
EC_410: 17: 		||
EC_410: 18: 			NIL
EC_410: 19: 	||
EC_410: 20: 		NIL
EC_410: 21: ||
EC_410: 22: 	NIL

EC_410 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_410  --> EC_412 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 412 , H : 174 , step : 0 >" as EC_412 #Orange
EC_412: 1: par
EC_412: 2: 	par
EC_412: 3: 		par
EC_412: 4: 			par
EC_412: 5: 				par sync [the alarm is disarmed]
EC_412: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_412: 7: 						[ true ] / the alarm is disarmed
EC_412: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_412: 9: 							[ clock==0 ] / turn off the tone
EC_412: 10: 							call( PostProc_R4 )
EC_412: 11: 				&&
EC_412: 12: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_412: 13: 						[ true ] / the alarm is disarmed
EC_412: 14: 						call( PostProc_R8 )
EC_412: 15: 			||
EC_412: 16: 				NIL
EC_412: 17: 		||
EC_412: 18: 			NIL
EC_412: 19: 	||
EC_412: 20: 		NIL
EC_412: 21: ||
EC_412: 22: 	NIL

EC_412 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_412  --> EC_413 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 413 , H : 175 , step : 103 >" as EC_413 #LightBlue
EC_413: 1: par
EC_413: 2: 	par
EC_413: 3: 		par
EC_413: 4: 			par
EC_413: 5: 				par sync [the alarm is disarmed]
EC_413: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_413: 7: 						[ clock==0 ] / turn off the tone
EC_413: 8: 						call( PostProc_R4 )
EC_413: 9: 				&&
EC_413: 10: 					call( PostProc_R8 )
EC_413: 11: 			||
EC_413: 12: 				NIL
EC_413: 13: 		||
EC_413: 14: 			NIL
EC_413: 15: 	||
EC_413: 16: 		NIL
EC_413: 17: ||
EC_413: 18: 	NIL

EC_413 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_413  --> EC_414 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 414 , H : 176 , step : 0 >" as EC_414 #Pink
EC_414: 1: par
EC_414: 2: 	par
EC_414: 3: 		par
EC_414: 4: 			par
EC_414: 5: 				par sync [the alarm is disarmed]
EC_414: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_414: 7: 						[ clock==0 ] / turn off the tone
EC_414: 8: 						call( PostProc_R4 )
EC_414: 9: 				&&
EC_414: 10: 					NIL
EC_414: 11: 			||
EC_414: 12: 				NIL
EC_414: 13: 		||
EC_414: 14: 			NIL
EC_414: 15: 	||
EC_414: 16: 		NIL
EC_414: 17: ||
EC_414: 18: 	NIL

EC_414 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_414  --> EC_416 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 416 , H : 177 , step : 0 >" as EC_416 #Orange
EC_416: 1: par
EC_416: 2: 	par
EC_416: 3: 		par
EC_416: 4: 			par
EC_416: 5: 				par sync [the alarm is disarmed]
EC_416: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_416: 7: 						[ clock==0 ] / turn off the tone
EC_416: 8: 						call( PostProc_R4 )
EC_416: 9: 				&&
EC_416: 10: 					NIL
EC_416: 11: 			||
EC_416: 12: 				NIL
EC_416: 13: 		||
EC_416: 14: 			NIL
EC_416: 15: 	||
EC_416: 16: 		NIL
EC_416: 17: ||
EC_416: 18: 	NIL

EC_416 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_416  --> EC_417 : \lact [True] / META:REDUNDANCE:EC< id : 222 , H : 98 >

state "EC< id : 417 , H : 178 , step : 0 >" as EC_417 #Green
EC_417: 1: par
EC_417: 2: 	par
EC_417: 3: 		par
EC_417: 4: 			par
EC_417: 5: 				par sync [the alarm is disarmed]
EC_417: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_417: 7: 						[ clock==0 ] / turn off the tone
EC_417: 8: 						call( PostProc_R4 )
EC_417: 9: 				&&
EC_417: 10: 					NIL
EC_417: 11: 			||
EC_417: 12: 				NIL
EC_417: 13: 		||
EC_417: 14: 			NIL
EC_417: 15: 	||
EC_417: 16: 		NIL
EC_417: 17: ||
EC_417: 18: 	NIL

EC_417 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_407  --> EC_409 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 409 , H : 172 , step : 104 >" as EC_409 #LightBlue
EC_409: 1: par
EC_409: 2: 	par
EC_409: 3: 		par
EC_409: 4: 			par
EC_409: 5: 				par sync [the alarm is disarmed]
EC_409: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_409: 7: 						[ true ] / the alarm is disarmed
EC_409: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_409: 9: 							[ clock==0 ] / turn off the tone
EC_409: 10: 							call( PostProc_R4 )
EC_409: 11: 				&&
EC_409: 12: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_409: 13: 						[ clock==0 ] / alert the emergency center
EC_409: 14: 						call( PostProc_R9 )
EC_409: 15: 			||
EC_409: 16: 				NIL
EC_409: 17: 		||
EC_409: 18: 			NIL
EC_409: 19: 	||
EC_409: 20: 		NIL
EC_409: 21: ||
EC_409: 22: 	NIL

EC_409 : DBM: R7_x_resp=60, R3_x_resp=240, clock=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp=clock, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-180,
EC_409  --> EC_419 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 419 , H : 173 , step : 0 >" as EC_419 #Orange
EC_419: 1: par
EC_419: 2: 	par
EC_419: 3: 		par
EC_419: 4: 			par
EC_419: 5: 				par sync [the alarm is disarmed]
EC_419: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_419: 7: 						[ true ] / the alarm is disarmed
EC_419: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_419: 9: 							[ clock==0 ] / turn off the tone
EC_419: 10: 							call( PostProc_R4 )
EC_419: 11: 				&&
EC_419: 12: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_419: 13: 						[ clock==0 ] / alert the emergency center
EC_419: 14: 						call( PostProc_R9 )
EC_419: 15: 			||
EC_419: 16: 				NIL
EC_419: 17: 		||
EC_419: 18: 			NIL
EC_419: 19: 	||
EC_419: 20: 		NIL
EC_419: 21: ||
EC_419: 22: 	NIL

EC_419 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_419  --> EC_420 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 420 , H : 174 , step : 105 >" as EC_420 #LightBlue
EC_420: 1: par
EC_420: 2: 	par
EC_420: 3: 		par
EC_420: 4: 			par
EC_420: 5: 				par sync [the alarm is disarmed]
EC_420: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_420: 7: 						[ true ] / the alarm is disarmed
EC_420: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_420: 9: 							[ clock==0 ] / turn off the tone
EC_420: 10: 							call( PostProc_R4 )
EC_420: 11: 				&&
EC_420: 12: 					call( PostProc_R9 )
EC_420: 13: 			||
EC_420: 14: 				NIL
EC_420: 15: 		||
EC_420: 16: 			NIL
EC_420: 17: 	||
EC_420: 18: 		NIL
EC_420: 19: ||
EC_420: 20: 	NIL

EC_420 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_420  --> EC_421 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 421 , H : 175 , step : 0 >" as EC_421 #Pink
EC_421: 1: par
EC_421: 2: 	par
EC_421: 3: 		par
EC_421: 4: 			par
EC_421: 5: 				par sync [the alarm is disarmed]
EC_421: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_421: 7: 						[ true ] / the alarm is disarmed
EC_421: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_421: 9: 							[ clock==0 ] / turn off the tone
EC_421: 10: 							call( PostProc_R4 )
EC_421: 11: 				&&
EC_421: 12: 					alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_421: 13: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_421: 14: 						call( PostProc_R7 )
EC_421: 15: 					++
EC_421: 16: 						[ R7_x_resp==60 ] / deadline at 60
EC_421: 17: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_421: 18: 							[ clock==0 ] / alert the emergency center
EC_421: 19: 							call( PostProc_R9 )
EC_421: 20: 			||
EC_421: 21: 				NIL
EC_421: 22: 		||
EC_421: 23: 			NIL
EC_421: 24: 	||
EC_421: 25: 		NIL
EC_421: 26: ||
EC_421: 27: 	NIL

EC_421 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_421  --> EC_423 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 423 , H : 176 , step : 0 >" as EC_423 #Orange
EC_423: 1: par
EC_423: 2: 	par
EC_423: 3: 		par
EC_423: 4: 			par
EC_423: 5: 				par sync [the alarm is disarmed]
EC_423: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_423: 7: 						[ true ] / the alarm is disarmed
EC_423: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_423: 9: 							[ clock==0 ] / turn off the tone
EC_423: 10: 							call( PostProc_R4 )
EC_423: 11: 				&&
EC_423: 12: 					alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_423: 13: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_423: 14: 						call( PostProc_R7 )
EC_423: 15: 					++
EC_423: 16: 						[ R7_x_resp==60 ] / deadline at 60
EC_423: 17: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_423: 18: 							[ clock==0 ] / alert the emergency center
EC_423: 19: 							call( PostProc_R9 )
EC_423: 20: 			||
EC_423: 21: 				NIL
EC_423: 22: 		||
EC_423: 23: 			NIL
EC_423: 24: 	||
EC_423: 25: 		NIL
EC_423: 26: ||
EC_423: 27: 	NIL

EC_423 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_423  --> EC_424 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 424 , H : 177 , step : 106 >" as EC_424 #LightBlue
EC_424: 1: par
EC_424: 2: 	par
EC_424: 3: 		par
EC_424: 4: 			par
EC_424: 5: 				par sync [the alarm is disarmed]
EC_424: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_424: 7: 						[ true ] / the alarm is disarmed
EC_424: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_424: 9: 							[ clock==0 ] / turn off the tone
EC_424: 10: 							call( PostProc_R4 )
EC_424: 11: 				&&
EC_424: 12: 					call( PostProc_R7 )
EC_424: 13: 			||
EC_424: 14: 				NIL
EC_424: 15: 		||
EC_424: 16: 			NIL
EC_424: 17: 	||
EC_424: 18: 		NIL
EC_424: 19: ||
EC_424: 20: 	NIL

EC_424 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_424  --> EC_426 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 426 , H : 178 , step : 0 >" as EC_426 #Pink
EC_426: 1: par
EC_426: 2: 	par
EC_426: 3: 		par
EC_426: 4: 			par
EC_426: 5: 				par sync [the alarm is disarmed]
EC_426: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_426: 7: 						[ true ] / the alarm is disarmed
EC_426: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_426: 9: 							[ clock==0 ] / turn off the tone
EC_426: 10: 							call( PostProc_R4 )
EC_426: 11: 				&&
EC_426: 12: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_426: 13: 						[ true ] / the alarm is disarmed
EC_426: 14: 						call( PostProc_R8 )
EC_426: 15: 			||
EC_426: 16: 				NIL
EC_426: 17: 		||
EC_426: 18: 			NIL
EC_426: 19: 	||
EC_426: 20: 		NIL
EC_426: 21: ||
EC_426: 22: 	NIL

EC_426 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_426  --> EC_428 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 428 , H : 179 , step : 0 >" as EC_428 #Orange
EC_428: 1: par
EC_428: 2: 	par
EC_428: 3: 		par
EC_428: 4: 			par
EC_428: 5: 				par sync [the alarm is disarmed]
EC_428: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_428: 7: 						[ true ] / the alarm is disarmed
EC_428: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_428: 9: 							[ clock==0 ] / turn off the tone
EC_428: 10: 							call( PostProc_R4 )
EC_428: 11: 				&&
EC_428: 12: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_428: 13: 						[ true ] / the alarm is disarmed
EC_428: 14: 						call( PostProc_R8 )
EC_428: 15: 			||
EC_428: 16: 				NIL
EC_428: 17: 		||
EC_428: 18: 			NIL
EC_428: 19: 	||
EC_428: 20: 		NIL
EC_428: 21: ||
EC_428: 22: 	NIL

EC_428 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_428  --> EC_429 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 429 , H : 180 , step : 107 >" as EC_429 #LightBlue
EC_429: 1: par
EC_429: 2: 	par
EC_429: 3: 		par
EC_429: 4: 			par
EC_429: 5: 				par sync [the alarm is disarmed]
EC_429: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_429: 7: 						[ clock==0 ] / turn off the tone
EC_429: 8: 						call( PostProc_R4 )
EC_429: 9: 				&&
EC_429: 10: 					call( PostProc_R8 )
EC_429: 11: 			||
EC_429: 12: 				NIL
EC_429: 13: 		||
EC_429: 14: 			NIL
EC_429: 15: 	||
EC_429: 16: 		NIL
EC_429: 17: ||
EC_429: 18: 	NIL

EC_429 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_429  --> EC_430 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 430 , H : 181 , step : 0 >" as EC_430 #Pink
EC_430: 1: par
EC_430: 2: 	par
EC_430: 3: 		par
EC_430: 4: 			par
EC_430: 5: 				par sync [the alarm is disarmed]
EC_430: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_430: 7: 						[ clock==0 ] / turn off the tone
EC_430: 8: 						call( PostProc_R4 )
EC_430: 9: 				&&
EC_430: 10: 					NIL
EC_430: 11: 			||
EC_430: 12: 				NIL
EC_430: 13: 		||
EC_430: 14: 			NIL
EC_430: 15: 	||
EC_430: 16: 		NIL
EC_430: 17: ||
EC_430: 18: 	NIL

EC_430 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_430  --> EC_432 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 432 , H : 182 , step : 0 >" as EC_432 #Orange
EC_432: 1: par
EC_432: 2: 	par
EC_432: 3: 		par
EC_432: 4: 			par
EC_432: 5: 				par sync [the alarm is disarmed]
EC_432: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_432: 7: 						[ clock==0 ] / turn off the tone
EC_432: 8: 						call( PostProc_R4 )
EC_432: 9: 				&&
EC_432: 10: 					NIL
EC_432: 11: 			||
EC_432: 12: 				NIL
EC_432: 13: 		||
EC_432: 14: 			NIL
EC_432: 15: 	||
EC_432: 16: 		NIL
EC_432: 17: ||
EC_432: 18: 	NIL

EC_432 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_432  --> EC_433 : \lact [True] / META:REDUNDANCE:EC< id : 327 , H : 140 >

state "EC< id : 433 , H : 183 , step : 0 >" as EC_433 #Green
EC_433: 1: par
EC_433: 2: 	par
EC_433: 3: 		par
EC_433: 4: 			par
EC_433: 5: 				par sync [the alarm is disarmed]
EC_433: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_433: 7: 						[ clock==0 ] / turn off the tone
EC_433: 8: 						call( PostProc_R4 )
EC_433: 9: 				&&
EC_433: 10: 					NIL
EC_433: 11: 			||
EC_433: 12: 				NIL
EC_433: 13: 		||
EC_433: 14: 			NIL
EC_433: 15: 	||
EC_433: 16: 		NIL
EC_433: 17: ||
EC_433: 18: 	NIL

EC_433 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_423  --> EC_425 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 425 , H : 177 , step : 108 >" as EC_425 #LightBlue
EC_425: 1: par
EC_425: 2: 	par
EC_425: 3: 		par
EC_425: 4: 			par
EC_425: 5: 				par sync [the alarm is disarmed]
EC_425: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_425: 7: 						[ true ] / the alarm is disarmed
EC_425: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_425: 9: 							[ clock==0 ] / turn off the tone
EC_425: 10: 							call( PostProc_R4 )
EC_425: 11: 				&&
EC_425: 12: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_425: 13: 						[ clock==0 ] / alert the emergency center
EC_425: 14: 						call( PostProc_R9 )
EC_425: 15: 			||
EC_425: 16: 				NIL
EC_425: 17: 		||
EC_425: 18: 			NIL
EC_425: 19: 	||
EC_425: 20: 		NIL
EC_425: 21: ||
EC_425: 22: 	NIL

EC_425 : DBM: R7_x_resp=60, R3_x_resp=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp=clock, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-240,
EC_425  --> EC_435 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 435 , H : 178 , step : 0 >" as EC_435 #Orange
EC_435: 1: par
EC_435: 2: 	par
EC_435: 3: 		par
EC_435: 4: 			par
EC_435: 5: 				par sync [the alarm is disarmed]
EC_435: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_435: 7: 						[ true ] / the alarm is disarmed
EC_435: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_435: 9: 							[ clock==0 ] / turn off the tone
EC_435: 10: 							call( PostProc_R4 )
EC_435: 11: 				&&
EC_435: 12: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_435: 13: 						[ clock==0 ] / alert the emergency center
EC_435: 14: 						call( PostProc_R9 )
EC_435: 15: 			||
EC_435: 16: 				NIL
EC_435: 17: 		||
EC_435: 18: 			NIL
EC_435: 19: 	||
EC_435: 20: 		NIL
EC_435: 21: ||
EC_435: 22: 	NIL

EC_435 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_435  --> EC_436 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 436 , H : 179 , step : 109 >" as EC_436 #LightBlue
EC_436: 1: par
EC_436: 2: 	par
EC_436: 3: 		par
EC_436: 4: 			par
EC_436: 5: 				par sync [the alarm is disarmed]
EC_436: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_436: 7: 						[ true ] / the alarm is disarmed
EC_436: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_436: 9: 							[ clock==0 ] / turn off the tone
EC_436: 10: 							call( PostProc_R4 )
EC_436: 11: 				&&
EC_436: 12: 					call( PostProc_R9 )
EC_436: 13: 			||
EC_436: 14: 				NIL
EC_436: 15: 		||
EC_436: 16: 			NIL
EC_436: 17: 	||
EC_436: 18: 		NIL
EC_436: 19: ||
EC_436: 20: 	NIL

EC_436 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_436  --> EC_437 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 437 , H : 180 , step : 0 >" as EC_437 #Pink
EC_437: 1: par
EC_437: 2: 	par
EC_437: 3: 		par
EC_437: 4: 			par
EC_437: 5: 				par sync [the alarm is disarmed]
EC_437: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_437: 7: 						[ true ] / the alarm is disarmed
EC_437: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_437: 9: 							[ clock==0 ] / turn off the tone
EC_437: 10: 							call( PostProc_R4 )
EC_437: 11: 				&&
EC_437: 12: 					alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_437: 13: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_437: 14: 						call( PostProc_R7 )
EC_437: 15: 					++
EC_437: 16: 						[ R7_x_resp==60 ] / deadline at 60
EC_437: 17: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_437: 18: 							[ clock==0 ] / alert the emergency center
EC_437: 19: 							call( PostProc_R9 )
EC_437: 20: 			||
EC_437: 21: 				NIL
EC_437: 22: 		||
EC_437: 23: 			NIL
EC_437: 24: 	||
EC_437: 25: 		NIL
EC_437: 26: ||
EC_437: 27: 	NIL

EC_437 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_437  --> EC_439 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 439 , H : 181 , step : 0 >" as EC_439 #Orange
EC_439: 1: par
EC_439: 2: 	par
EC_439: 3: 		par
EC_439: 4: 			par
EC_439: 5: 				par sync [the alarm is disarmed]
EC_439: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_439: 7: 						[ true ] / the alarm is disarmed
EC_439: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_439: 9: 							[ clock==0 ] / turn off the tone
EC_439: 10: 							call( PostProc_R4 )
EC_439: 11: 				&&
EC_439: 12: 					alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_439: 13: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_439: 14: 						call( PostProc_R7 )
EC_439: 15: 					++
EC_439: 16: 						[ R7_x_resp==60 ] / deadline at 60
EC_439: 17: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_439: 18: 							[ clock==0 ] / alert the emergency center
EC_439: 19: 							call( PostProc_R9 )
EC_439: 20: 			||
EC_439: 21: 				NIL
EC_439: 22: 		||
EC_439: 23: 			NIL
EC_439: 24: 	||
EC_439: 25: 		NIL
EC_439: 26: ||
EC_439: 27: 	NIL

EC_439 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_439  --> EC_440 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 440 , H : 182 , step : 110 >" as EC_440 #LightBlue
EC_440: 1: par
EC_440: 2: 	par
EC_440: 3: 		par
EC_440: 4: 			par
EC_440: 5: 				par sync [the alarm is disarmed]
EC_440: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_440: 7: 						[ true ] / the alarm is disarmed
EC_440: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_440: 9: 							[ clock==0 ] / turn off the tone
EC_440: 10: 							call( PostProc_R4 )
EC_440: 11: 				&&
EC_440: 12: 					call( PostProc_R7 )
EC_440: 13: 			||
EC_440: 14: 				NIL
EC_440: 15: 		||
EC_440: 16: 			NIL
EC_440: 17: 	||
EC_440: 18: 		NIL
EC_440: 19: ||
EC_440: 20: 	NIL

EC_440 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_440  --> EC_442 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 442 , H : 183 , step : 0 >" as EC_442 #Pink
EC_442: 1: par
EC_442: 2: 	par
EC_442: 3: 		par
EC_442: 4: 			par
EC_442: 5: 				par sync [the alarm is disarmed]
EC_442: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_442: 7: 						[ true ] / the alarm is disarmed
EC_442: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_442: 9: 							[ clock==0 ] / turn off the tone
EC_442: 10: 							call( PostProc_R4 )
EC_442: 11: 				&&
EC_442: 12: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_442: 13: 						[ true ] / the alarm is disarmed
EC_442: 14: 						call( PostProc_R8 )
EC_442: 15: 			||
EC_442: 16: 				NIL
EC_442: 17: 		||
EC_442: 18: 			NIL
EC_442: 19: 	||
EC_442: 20: 		NIL
EC_442: 21: ||
EC_442: 22: 	NIL

EC_442 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_442  --> EC_444 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 444 , H : 184 , step : 0 >" as EC_444 #Orange
EC_444: 1: par
EC_444: 2: 	par
EC_444: 3: 		par
EC_444: 4: 			par
EC_444: 5: 				par sync [the alarm is disarmed]
EC_444: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_444: 7: 						[ true ] / the alarm is disarmed
EC_444: 8: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_444: 9: 							[ clock==0 ] / turn off the tone
EC_444: 10: 							call( PostProc_R4 )
EC_444: 11: 				&&
EC_444: 12: 					alt invariant( [] ~> R7_x_resp<=60 )
EC_444: 13: 						[ true ] / the alarm is disarmed
EC_444: 14: 						call( PostProc_R8 )
EC_444: 15: 			||
EC_444: 16: 				NIL
EC_444: 17: 		||
EC_444: 18: 			NIL
EC_444: 19: 	||
EC_444: 20: 		NIL
EC_444: 21: ||
EC_444: 22: 	NIL

EC_444 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_444  --> EC_445 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 445 , H : 185 , step : 111 >" as EC_445 #LightBlue
EC_445: 1: par
EC_445: 2: 	par
EC_445: 3: 		par
EC_445: 4: 			par
EC_445: 5: 				par sync [the alarm is disarmed]
EC_445: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_445: 7: 						[ clock==0 ] / turn off the tone
EC_445: 8: 						call( PostProc_R4 )
EC_445: 9: 				&&
EC_445: 10: 					call( PostProc_R8 )
EC_445: 11: 			||
EC_445: 12: 				NIL
EC_445: 13: 		||
EC_445: 14: 			NIL
EC_445: 15: 	||
EC_445: 16: 		NIL
EC_445: 17: ||
EC_445: 18: 	NIL

EC_445 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_445  --> EC_446 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 446 , H : 186 , step : 0 >" as EC_446 #Pink
EC_446: 1: par
EC_446: 2: 	par
EC_446: 3: 		par
EC_446: 4: 			par
EC_446: 5: 				par sync [the alarm is disarmed]
EC_446: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_446: 7: 						[ clock==0 ] / turn off the tone
EC_446: 8: 						call( PostProc_R4 )
EC_446: 9: 				&&
EC_446: 10: 					NIL
EC_446: 11: 			||
EC_446: 12: 				NIL
EC_446: 13: 		||
EC_446: 14: 			NIL
EC_446: 15: 	||
EC_446: 16: 		NIL
EC_446: 17: ||
EC_446: 18: 	NIL

EC_446 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_446  --> EC_448 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 448 , H : 187 , step : 0 >" as EC_448 #Orange
EC_448: 1: par
EC_448: 2: 	par
EC_448: 3: 		par
EC_448: 4: 			par
EC_448: 5: 				par sync [the alarm is disarmed]
EC_448: 6: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_448: 7: 						[ clock==0 ] / turn off the tone
EC_448: 8: 						call( PostProc_R4 )
EC_448: 9: 				&&
EC_448: 10: 					NIL
EC_448: 11: 			||
EC_448: 12: 				NIL
EC_448: 13: 		||
EC_448: 14: 			NIL
EC_448: 15: 	||
EC_448: 16: 		NIL
EC_448: 17: ||
EC_448: 18: 	NIL

EC_448 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_448  --> EC_449 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True]\lact [clock==0] / turn off the tone

state "EC< id : 449 , H : 188 , step : 112 >" as EC_449 #LightBlue
EC_449: 1: par
EC_449: 2: 	par
EC_449: 3: 		par
EC_449: 4: 			par
EC_449: 5: 				par
EC_449: 6: 					call( PostProc_R4 )
EC_449: 7: 				||
EC_449: 8: 					NIL
EC_449: 9: 			||
EC_449: 10: 				NIL
EC_449: 11: 		||
EC_449: 12: 			NIL
EC_449: 13: 	||
EC_449: 14: 		NIL
EC_449: 15: ||
EC_449: 16: 	NIL

EC_449 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_449  --> EC_450 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R4, Proc_R1

state "EC< id : 450 , H : 189 , step : 0 >" as EC_450 #Pink
EC_450: 1: par
EC_450: 2: 	par
EC_450: 3: 		par
EC_450: 4: 			par
EC_450: 5: 				par
EC_450: 6: 					alt invariant( [] ~> true )
EC_450: 7: 						[ true ] / the set button is pressed
EC_450: 8: 						alt invariant( [clock] ~> clock<=60 )
EC_450: 9: 							[ clock==60 ] / activate the alarm
EC_450: 10: 							call( PostProc_R1 )
EC_450: 11: 				||
EC_450: 12: 					NIL
EC_450: 13: 			||
EC_450: 14: 				NIL
EC_450: 15: 		||
EC_450: 16: 			NIL
EC_450: 17: 	||
EC_450: 18: 		NIL
EC_450: 19: ||
EC_450: 20: 	NIL

EC_450 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_450  --> EC_452 : inv [] => [true, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 452 , H : 190 , step : 0 >" as EC_452 #Orange
EC_452: 1: par
EC_452: 2: 	par
EC_452: 3: 		par
EC_452: 4: 			par
EC_452: 5: 				par
EC_452: 6: 					alt invariant( [] ~> true )
EC_452: 7: 						[ true ] / the set button is pressed
EC_452: 8: 						alt invariant( [clock] ~> clock<=60 )
EC_452: 9: 							[ clock==60 ] / activate the alarm
EC_452: 10: 							call( PostProc_R1 )
EC_452: 11: 				||
EC_452: 12: 					NIL
EC_452: 13: 			||
EC_452: 14: 				NIL
EC_452: 15: 		||
EC_452: 16: 			NIL
EC_452: 17: 	||
EC_452: 18: 		NIL
EC_452: 19: ||
EC_452: 20: 	NIL

EC_452 : DBM: R3_x_resp>=300, R7_x_resp-R3_x_resp<=-300, R3_x_resp-R7_x_resp<=300,\l   R7_x_resp=clock, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_452  --> EC_453 : inv [] => [true, True, True, True, True, True]\lact [true] / the set button is pressed

state "EC< id : 453 , H : 191 , step : 113 >" as EC_453 #LightBlue
EC_453: 1: par
EC_453: 2: 	par
EC_453: 3: 		par
EC_453: 4: 			par
EC_453: 5: 				par
EC_453: 6: 					alt invariant( [clock] ~> clock<=60 )
EC_453: 7: 						[ clock==60 ] / activate the alarm
EC_453: 8: 						call( PostProc_R1 )
EC_453: 9: 				||
EC_453: 10: 					NIL
EC_453: 11: 			||
EC_453: 12: 				NIL
EC_453: 13: 		||
EC_453: 14: 			NIL
EC_453: 15: 	||
EC_453: 16: 		NIL
EC_453: 17: ||
EC_453: 18: 	NIL

EC_453 : DBM: R3_x_resp>=300, R7_x_resp-R3_x_resp<=-300, R3_x_resp-R7_x_resp<=300,\l   R7_x_resp=clock, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_453  --> EC_455 : inv [clock] => [clock<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 455 , H : 192 , step : 0 >" as EC_455 #Orange
EC_455: 1: par
EC_455: 2: 	par
EC_455: 3: 		par
EC_455: 4: 			par
EC_455: 5: 				par
EC_455: 6: 					alt invariant( [clock] ~> clock<=60 )
EC_455: 7: 						[ clock==60 ] / activate the alarm
EC_455: 8: 						call( PostProc_R1 )
EC_455: 9: 				||
EC_455: 10: 					NIL
EC_455: 11: 			||
EC_455: 12: 				NIL
EC_455: 13: 		||
EC_455: 14: 			NIL
EC_455: 15: 	||
EC_455: 16: 		NIL
EC_455: 17: ||
EC_455: 18: 	NIL

EC_455 : DBM: R3_x_resp>=300, clock<=60, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-300,
EC_455  --> EC_456 : inv [clock] => [clock<=60, True, True, True, True, True]\lact [clock==60] / activate the alarm

state "EC< id : 456 , H : 193 , step : 114 >" as EC_456 #LightBlue
EC_456: 1: par
EC_456: 2: 	par
EC_456: 3: 		par
EC_456: 4: 			par
EC_456: 5: 				par
EC_456: 6: 					call( PostProc_R1 )
EC_456: 7: 				||
EC_456: 8: 					NIL
EC_456: 9: 			||
EC_456: 10: 				NIL
EC_456: 11: 		||
EC_456: 12: 			NIL
EC_456: 13: 	||
EC_456: 14: 		NIL
EC_456: 15: ||
EC_456: 16: 	NIL

EC_456 : DBM: R7_x_resp>=60, R3_x_resp>=360, clock=60, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-300,
EC_456  --> EC_457 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R1, Proc_R2

state "EC< id : 457 , H : 194 , step : 0 >" as EC_457 #Pink
EC_457: 1: par
EC_457: 2: 	par
EC_457: 3: 		par
EC_457: 4: 			par
EC_457: 5: 				par
EC_457: 6: 					alt invariant( [] ~> true )
EC_457: 7: 						[ true ] / motion is detected
EC_457: 8: 						alt invariant( [clock] ~> clock<=0 )
EC_457: 9: 							[ clock==0 ] / emit a tone
EC_457: 10: 							call( PostProc_R2 )
EC_457: 11: 				||
EC_457: 12: 					NIL
EC_457: 13: 			||
EC_457: 14: 				NIL
EC_457: 15: 		||
EC_457: 16: 			NIL
EC_457: 17: 	||
EC_457: 18: 		NIL
EC_457: 19: ||
EC_457: 20: 	NIL

EC_457 : DBM: R7_x_resp>=60, R3_x_resp>=360, clock=60, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-300,
EC_457  --> EC_459 : inv [] => [true, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 459 , H : 195 , step : 0 >" as EC_459 #Orange
EC_459: 1: par
EC_459: 2: 	par
EC_459: 3: 		par
EC_459: 4: 			par
EC_459: 5: 				par
EC_459: 6: 					alt invariant( [] ~> true )
EC_459: 7: 						[ true ] / motion is detected
EC_459: 8: 						alt invariant( [clock] ~> clock<=0 )
EC_459: 9: 							[ clock==0 ] / emit a tone
EC_459: 10: 							call( PostProc_R2 )
EC_459: 11: 				||
EC_459: 12: 					NIL
EC_459: 13: 			||
EC_459: 14: 				NIL
EC_459: 15: 		||
EC_459: 16: 			NIL
EC_459: 17: 	||
EC_459: 18: 		NIL
EC_459: 19: ||
EC_459: 20: 	NIL

EC_459 : DBM: R7_x_resp>=60, R3_x_resp>=360, clock>=60, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-300,
EC_459  --> EC_460 : inv [] => [true, True, True, True, True, True]\lact [true] / motion is detected

state "EC< id : 460 , H : 196 , step : 115 >" as EC_460 #LightBlue
EC_460: 1: par
EC_460: 2: 	par
EC_460: 3: 		par
EC_460: 4: 			par
EC_460: 5: 				par
EC_460: 6: 					alt invariant( [clock] ~> clock<=0 )
EC_460: 7: 						[ clock==0 ] / emit a tone
EC_460: 8: 						call( PostProc_R2 )
EC_460: 9: 				||
EC_460: 10: 					NIL
EC_460: 11: 			||
EC_460: 12: 				NIL
EC_460: 13: 		||
EC_460: 14: 			NIL
EC_460: 15: 	||
EC_460: 16: 		NIL
EC_460: 17: ||
EC_460: 18: 	NIL

EC_460 : DBM: R7_x_resp>=60, R3_x_resp>=360, clock>=60, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=-300,
EC_460  --> EC_462 : inv [clock] => [clock<=0, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 462 , H : 197 , step : 0 >" as EC_462 #Orange
EC_462: 1: par
EC_462: 2: 	par
EC_462: 3: 		par
EC_462: 4: 			par
EC_462: 5: 				par
EC_462: 6: 					alt invariant( [clock] ~> clock<=0 )
EC_462: 7: 						[ clock==0 ] / emit a tone
EC_462: 8: 						call( PostProc_R2 )
EC_462: 9: 				||
EC_462: 10: 					NIL
EC_462: 11: 			||
EC_462: 12: 				NIL
EC_462: 13: 		||
EC_462: 14: 			NIL
EC_462: 15: 	||
EC_462: 16: 		NIL
EC_462: 17: ||
EC_462: 18: 	NIL

EC_462 : DBM: R7_x_resp>=60, R3_x_resp>=360, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-360,
EC_462  --> EC_463 : inv [clock] => [clock<=0, True, True, True, True, True]\lact [clock==0] / emit a tone

state "EC< id : 463 , H : 198 , step : 116 >" as EC_463 #LightBlue
EC_463: 1: par
EC_463: 2: 	par
EC_463: 3: 		par
EC_463: 4: 			par
EC_463: 5: 				par
EC_463: 6: 					call( PostProc_R2 )
EC_463: 7: 				||
EC_463: 8: 					NIL
EC_463: 9: 			||
EC_463: 10: 				NIL
EC_463: 11: 		||
EC_463: 12: 			NIL
EC_463: 13: 	||
EC_463: 14: 		NIL
EC_463: 15: ||
EC_463: 16: 	NIL

EC_463 : DBM: R7_x_resp>=60, R3_x_resp>=360, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-360,
EC_463  --> EC_464 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R2

state "EC< id : 464 , H : 199 , step : 0 >" as EC_464 #Pink
EC_464: 1: par
EC_464: 2: 	par
EC_464: 3: 		par
EC_464: 4: 			par
EC_464: 5: 				par
EC_464: 6: 					par sync [the alarm is disarmed]
EC_464: 7: 						alt invariant( [R3_x_resp] ~> R3_x_resp<=300 / start time period within 0 to 300 )
EC_464: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_464: 9: 							call( PostProc_R3 )
EC_464: 10: 						++
EC_464: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_464: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_464: 13: 								[ clock==0 ] / turn off the tone
EC_464: 14: 								call( PostProc_R5 )
EC_464: 15: 					&&
EC_464: 16: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_464: 17: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_464: 18: 							call( PostProc_R7 )
EC_464: 19: 						++
EC_464: 20: 							[ R7_x_resp==60 ] / deadline at 60
EC_464: 21: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_464: 22: 								[ clock==0 ] / alert the emergency center
EC_464: 23: 								call( PostProc_R9 )
EC_464: 24: 				||
EC_464: 25: 					NIL
EC_464: 26: 			||
EC_464: 27: 				NIL
EC_464: 28: 		||
EC_464: 29: 			NIL
EC_464: 30: 	||
EC_464: 31: 		NIL
EC_464: 32: ||
EC_464: 33: 	NIL

EC_464 : DBM: R7_x_resp>=60, R3_x_resp>=360, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, clock-R7_x_resp<=-60,\l   clock-R3_x_resp<=-360,
EC_464  --> EC_466 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:[start time period within 0 to 300, start time period within 0 to 60]

state "EC< id : 466 , H : 200 , step : 0 >" as EC_466 #Orange
EC_466: 1: par
EC_466: 2: 	par
EC_466: 3: 		par
EC_466: 4: 			par
EC_466: 5: 				par
EC_466: 6: 					par sync [the alarm is disarmed]
EC_466: 7: 						alt invariant( [R3_x_resp] ~> R3_x_resp<=300 / start time period within 0 to 300 )
EC_466: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_466: 9: 							call( PostProc_R3 )
EC_466: 10: 						++
EC_466: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_466: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_466: 13: 								[ clock==0 ] / turn off the tone
EC_466: 14: 								call( PostProc_R5 )
EC_466: 15: 					&&
EC_466: 16: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_466: 17: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_466: 18: 							call( PostProc_R7 )
EC_466: 19: 						++
EC_466: 20: 							[ R7_x_resp==60 ] / deadline at 60
EC_466: 21: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_466: 22: 								[ clock==0 ] / alert the emergency center
EC_466: 23: 								call( PostProc_R9 )
EC_466: 24: 				||
EC_466: 25: 					NIL
EC_466: 26: 			||
EC_466: 27: 				NIL
EC_466: 28: 		||
EC_466: 29: 			NIL
EC_466: 30: 	||
EC_466: 31: 		NIL
EC_466: 32: ||
EC_466: 33: 	NIL

EC_466 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_466  --> EC_467 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 467 , H : 201 , step : 117 >" as EC_467 #LightBlue
EC_467: 1: par
EC_467: 2: 	par
EC_467: 3: 		par
EC_467: 4: 			par
EC_467: 5: 				par
EC_467: 6: 					par sync [the alarm is disarmed]
EC_467: 7: 						call( PostProc_R3 )
EC_467: 8: 					&&
EC_467: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_467: 10: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_467: 11: 							call( PostProc_R7 )
EC_467: 12: 						++
EC_467: 13: 							[ R7_x_resp==60 ] / deadline at 60
EC_467: 14: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_467: 15: 								[ clock==0 ] / alert the emergency center
EC_467: 16: 								call( PostProc_R9 )
EC_467: 17: 				||
EC_467: 18: 					NIL
EC_467: 19: 			||
EC_467: 20: 				NIL
EC_467: 21: 		||
EC_467: 22: 			NIL
EC_467: 23: 	||
EC_467: 24: 		NIL
EC_467: 25: ||
EC_467: 26: 	NIL

EC_467 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_467  --> EC_471 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 471 , H : 202 , step : 0 >" as EC_471 #Pink
EC_471: 1: par
EC_471: 2: 	par
EC_471: 3: 		par
EC_471: 4: 			par
EC_471: 5: 				par
EC_471: 6: 					par sync [the alarm is disarmed]
EC_471: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_471: 8: 							[ true ] / the alarm is disarmed
EC_471: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_471: 10: 								[ clock==0 ] / turn off the tone
EC_471: 11: 								call( PostProc_R4 )
EC_471: 12: 					&&
EC_471: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_471: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_471: 15: 							call( PostProc_R7 )
EC_471: 16: 						++
EC_471: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_471: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_471: 19: 								[ clock==0 ] / alert the emergency center
EC_471: 20: 								call( PostProc_R9 )
EC_471: 21: 				||
EC_471: 22: 					NIL
EC_471: 23: 			||
EC_471: 24: 				NIL
EC_471: 25: 		||
EC_471: 26: 			NIL
EC_471: 27: 	||
EC_471: 28: 		NIL
EC_471: 29: ||
EC_471: 30: 	NIL

EC_471 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_471  --> EC_473 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 473 , H : 203 , step : 0 >" as EC_473 #Orange
EC_473: 1: par
EC_473: 2: 	par
EC_473: 3: 		par
EC_473: 4: 			par
EC_473: 5: 				par
EC_473: 6: 					par sync [the alarm is disarmed]
EC_473: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_473: 8: 							[ true ] / the alarm is disarmed
EC_473: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_473: 10: 								[ clock==0 ] / turn off the tone
EC_473: 11: 								call( PostProc_R4 )
EC_473: 12: 					&&
EC_473: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_473: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_473: 15: 							call( PostProc_R7 )
EC_473: 16: 						++
EC_473: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_473: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_473: 19: 								[ clock==0 ] / alert the emergency center
EC_473: 20: 								call( PostProc_R9 )
EC_473: 21: 				||
EC_473: 22: 					NIL
EC_473: 23: 			||
EC_473: 24: 				NIL
EC_473: 25: 		||
EC_473: 26: 			NIL
EC_473: 27: 	||
EC_473: 28: 		NIL
EC_473: 29: ||
EC_473: 30: 	NIL

EC_473 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_473  --> EC_474 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 474 , H : 204 , step : 118 >" as EC_474 #LightBlue
EC_474: 1: par
EC_474: 2: 	par
EC_474: 3: 		par
EC_474: 4: 			par
EC_474: 5: 				par
EC_474: 6: 					par sync [the alarm is disarmed]
EC_474: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_474: 8: 							[ true ] / the alarm is disarmed
EC_474: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_474: 10: 								[ clock==0 ] / turn off the tone
EC_474: 11: 								call( PostProc_R4 )
EC_474: 12: 					&&
EC_474: 13: 						call( PostProc_R7 )
EC_474: 14: 				||
EC_474: 15: 					NIL
EC_474: 16: 			||
EC_474: 17: 				NIL
EC_474: 18: 		||
EC_474: 19: 			NIL
EC_474: 20: 	||
EC_474: 21: 		NIL
EC_474: 22: ||
EC_474: 23: 	NIL

EC_474 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_474  --> EC_476 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 476 , H : 205 , step : 0 >" as EC_476 #Pink
EC_476: 1: par
EC_476: 2: 	par
EC_476: 3: 		par
EC_476: 4: 			par
EC_476: 5: 				par
EC_476: 6: 					par sync [the alarm is disarmed]
EC_476: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_476: 8: 							[ true ] / the alarm is disarmed
EC_476: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_476: 10: 								[ clock==0 ] / turn off the tone
EC_476: 11: 								call( PostProc_R4 )
EC_476: 12: 					&&
EC_476: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_476: 14: 							[ true ] / the alarm is disarmed
EC_476: 15: 							call( PostProc_R8 )
EC_476: 16: 				||
EC_476: 17: 					NIL
EC_476: 18: 			||
EC_476: 19: 				NIL
EC_476: 20: 		||
EC_476: 21: 			NIL
EC_476: 22: 	||
EC_476: 23: 		NIL
EC_476: 24: ||
EC_476: 25: 	NIL

EC_476 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_476  --> EC_478 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 478 , H : 206 , step : 0 >" as EC_478 #Orange
EC_478: 1: par
EC_478: 2: 	par
EC_478: 3: 		par
EC_478: 4: 			par
EC_478: 5: 				par
EC_478: 6: 					par sync [the alarm is disarmed]
EC_478: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_478: 8: 							[ true ] / the alarm is disarmed
EC_478: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_478: 10: 								[ clock==0 ] / turn off the tone
EC_478: 11: 								call( PostProc_R4 )
EC_478: 12: 					&&
EC_478: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_478: 14: 							[ true ] / the alarm is disarmed
EC_478: 15: 							call( PostProc_R8 )
EC_478: 16: 				||
EC_478: 17: 					NIL
EC_478: 18: 			||
EC_478: 19: 				NIL
EC_478: 20: 		||
EC_478: 21: 			NIL
EC_478: 22: 	||
EC_478: 23: 		NIL
EC_478: 24: ||
EC_478: 25: 	NIL

EC_478 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_478  --> EC_479 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 479 , H : 207 , step : 119 >" as EC_479 #LightBlue
EC_479: 1: par
EC_479: 2: 	par
EC_479: 3: 		par
EC_479: 4: 			par
EC_479: 5: 				par
EC_479: 6: 					par sync [the alarm is disarmed]
EC_479: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_479: 8: 							[ clock==0 ] / turn off the tone
EC_479: 9: 							call( PostProc_R4 )
EC_479: 10: 					&&
EC_479: 11: 						call( PostProc_R8 )
EC_479: 12: 				||
EC_479: 13: 					NIL
EC_479: 14: 			||
EC_479: 15: 				NIL
EC_479: 16: 		||
EC_479: 17: 			NIL
EC_479: 18: 	||
EC_479: 19: 		NIL
EC_479: 20: ||
EC_479: 21: 	NIL

EC_479 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_479  --> EC_480 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 480 , H : 208 , step : 0 >" as EC_480 #Pink
EC_480: 1: par
EC_480: 2: 	par
EC_480: 3: 		par
EC_480: 4: 			par
EC_480: 5: 				par
EC_480: 6: 					par sync [the alarm is disarmed]
EC_480: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_480: 8: 							[ clock==0 ] / turn off the tone
EC_480: 9: 							call( PostProc_R4 )
EC_480: 10: 					&&
EC_480: 11: 						NIL
EC_480: 12: 				||
EC_480: 13: 					NIL
EC_480: 14: 			||
EC_480: 15: 				NIL
EC_480: 16: 		||
EC_480: 17: 			NIL
EC_480: 18: 	||
EC_480: 19: 		NIL
EC_480: 20: ||
EC_480: 21: 	NIL

EC_480 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_480  --> EC_482 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 482 , H : 209 , step : 0 >" as EC_482 #Orange
EC_482: 1: par
EC_482: 2: 	par
EC_482: 3: 		par
EC_482: 4: 			par
EC_482: 5: 				par
EC_482: 6: 					par sync [the alarm is disarmed]
EC_482: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_482: 8: 							[ clock==0 ] / turn off the tone
EC_482: 9: 							call( PostProc_R4 )
EC_482: 10: 					&&
EC_482: 11: 						NIL
EC_482: 12: 				||
EC_482: 13: 					NIL
EC_482: 14: 			||
EC_482: 15: 				NIL
EC_482: 16: 		||
EC_482: 17: 			NIL
EC_482: 18: 	||
EC_482: 19: 		NIL
EC_482: 20: ||
EC_482: 21: 	NIL

EC_482 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_482  --> EC_483 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [clock==0] / turn off the tone

state "EC< id : 483 , H : 210 , step : 120 >" as EC_483 #LightBlue
EC_483: 1: par
EC_483: 2: 	par
EC_483: 3: 		par
EC_483: 4: 			par
EC_483: 5: 				par
EC_483: 6: 					par
EC_483: 7: 						call( PostProc_R4 )
EC_483: 8: 					||
EC_483: 9: 						NIL
EC_483: 10: 				||
EC_483: 11: 					NIL
EC_483: 12: 			||
EC_483: 13: 				NIL
EC_483: 14: 		||
EC_483: 15: 			NIL
EC_483: 16: 	||
EC_483: 17: 		NIL
EC_483: 18: ||
EC_483: 19: 	NIL

EC_483 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_483  --> EC_484 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R4, Proc_R1

state "EC< id : 484 , H : 211 , step : 0 >" as EC_484 #Pink
EC_484: 1: par
EC_484: 2: 	par
EC_484: 3: 		par
EC_484: 4: 			par
EC_484: 5: 				par
EC_484: 6: 					par
EC_484: 7: 						alt invariant( [] ~> true )
EC_484: 8: 							[ true ] / the set button is pressed
EC_484: 9: 							alt invariant( [clock] ~> clock<=60 )
EC_484: 10: 								[ clock==60 ] / activate the alarm
EC_484: 11: 								call( PostProc_R1 )
EC_484: 12: 					||
EC_484: 13: 						NIL
EC_484: 14: 				||
EC_484: 15: 					NIL
EC_484: 16: 			||
EC_484: 17: 				NIL
EC_484: 18: 		||
EC_484: 19: 			NIL
EC_484: 20: 	||
EC_484: 21: 		NIL
EC_484: 22: ||
EC_484: 23: 	NIL

EC_484 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_484  --> EC_486 : inv [] => [true, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 486 , H : 212 , step : 0 >" as EC_486 #Orange
EC_486: 1: par
EC_486: 2: 	par
EC_486: 3: 		par
EC_486: 4: 			par
EC_486: 5: 				par
EC_486: 6: 					par
EC_486: 7: 						alt invariant( [] ~> true )
EC_486: 8: 							[ true ] / the set button is pressed
EC_486: 9: 							alt invariant( [clock] ~> clock<=60 )
EC_486: 10: 								[ clock==60 ] / activate the alarm
EC_486: 11: 								call( PostProc_R1 )
EC_486: 12: 					||
EC_486: 13: 						NIL
EC_486: 14: 				||
EC_486: 15: 					NIL
EC_486: 16: 			||
EC_486: 17: 				NIL
EC_486: 18: 		||
EC_486: 19: 			NIL
EC_486: 20: 	||
EC_486: 21: 		NIL
EC_486: 22: ||
EC_486: 23: 	NIL

EC_486 : DBM: R7_x_resp=R3_x_resp, R7_x_resp-clock<=60, clock-R7_x_resp<=0,\l   R3_x_resp-clock<=60, clock-R3_x_resp<=0,
EC_486  --> EC_487 : inv [] => [true, True, True, True, True, True, True]\lact [true] / the set button is pressed

state "EC< id : 487 , H : 213 , step : 121 >" as EC_487 #LightBlue
EC_487: 1: par
EC_487: 2: 	par
EC_487: 3: 		par
EC_487: 4: 			par
EC_487: 5: 				par
EC_487: 6: 					par
EC_487: 7: 						alt invariant( [clock] ~> clock<=60 )
EC_487: 8: 							[ clock==60 ] / activate the alarm
EC_487: 9: 							call( PostProc_R1 )
EC_487: 10: 					||
EC_487: 11: 						NIL
EC_487: 12: 				||
EC_487: 13: 					NIL
EC_487: 14: 			||
EC_487: 15: 				NIL
EC_487: 16: 		||
EC_487: 17: 			NIL
EC_487: 18: 	||
EC_487: 19: 		NIL
EC_487: 20: ||
EC_487: 21: 	NIL

EC_487 : DBM: R7_x_resp=R3_x_resp, R7_x_resp-clock<=60, clock-R7_x_resp<=0,\l   R3_x_resp-clock<=60, clock-R3_x_resp<=0,
EC_487  --> EC_489 : inv [clock] => [clock<=60, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 489 , H : 214 , step : 0 >" as EC_489 #Orange
EC_489: 1: par
EC_489: 2: 	par
EC_489: 3: 		par
EC_489: 4: 			par
EC_489: 5: 				par
EC_489: 6: 					par
EC_489: 7: 						alt invariant( [clock] ~> clock<=60 )
EC_489: 8: 							[ clock==60 ] / activate the alarm
EC_489: 9: 							call( PostProc_R1 )
EC_489: 10: 					||
EC_489: 11: 						NIL
EC_489: 12: 				||
EC_489: 13: 					NIL
EC_489: 14: 			||
EC_489: 15: 				NIL
EC_489: 16: 		||
EC_489: 17: 			NIL
EC_489: 18: 	||
EC_489: 19: 		NIL
EC_489: 20: ||
EC_489: 21: 	NIL

EC_489 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_489  --> EC_490 : \lact [True] / META:REDUNDANCE:EC< id : 10 , H : 7 >

state "EC< id : 490 , H : 215 , step : 0 >" as EC_490 #Green
EC_490: 1: par
EC_490: 2: 	par
EC_490: 3: 		par
EC_490: 4: 			par
EC_490: 5: 				par
EC_490: 6: 					par
EC_490: 7: 						alt invariant( [clock] ~> clock<=60 )
EC_490: 8: 							[ clock==60 ] / activate the alarm
EC_490: 9: 							call( PostProc_R1 )
EC_490: 10: 					||
EC_490: 11: 						NIL
EC_490: 12: 				||
EC_490: 13: 					NIL
EC_490: 14: 			||
EC_490: 15: 				NIL
EC_490: 16: 		||
EC_490: 17: 			NIL
EC_490: 18: 	||
EC_490: 19: 		NIL
EC_490: 20: ||
EC_490: 21: 	NIL

EC_490 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_473  --> EC_475 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 475 , H : 204 , step : 122 >" as EC_475 #LightBlue
EC_475: 1: par
EC_475: 2: 	par
EC_475: 3: 		par
EC_475: 4: 			par
EC_475: 5: 				par
EC_475: 6: 					par sync [the alarm is disarmed]
EC_475: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_475: 8: 							[ true ] / the alarm is disarmed
EC_475: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_475: 10: 								[ clock==0 ] / turn off the tone
EC_475: 11: 								call( PostProc_R4 )
EC_475: 12: 					&&
EC_475: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_475: 14: 							[ clock==0 ] / alert the emergency center
EC_475: 15: 							call( PostProc_R9 )
EC_475: 16: 				||
EC_475: 17: 					NIL
EC_475: 18: 			||
EC_475: 19: 				NIL
EC_475: 20: 		||
EC_475: 21: 			NIL
EC_475: 22: 	||
EC_475: 23: 		NIL
EC_475: 24: ||
EC_475: 25: 	NIL

EC_475 : DBM: R7_x_resp=60, R3_x_resp=60, clock=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_475  --> EC_492 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 492 , H : 205 , step : 0 >" as EC_492 #Orange
EC_492: 1: par
EC_492: 2: 	par
EC_492: 3: 		par
EC_492: 4: 			par
EC_492: 5: 				par
EC_492: 6: 					par sync [the alarm is disarmed]
EC_492: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_492: 8: 							[ true ] / the alarm is disarmed
EC_492: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_492: 10: 								[ clock==0 ] / turn off the tone
EC_492: 11: 								call( PostProc_R4 )
EC_492: 12: 					&&
EC_492: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_492: 14: 							[ clock==0 ] / alert the emergency center
EC_492: 15: 							call( PostProc_R9 )
EC_492: 16: 				||
EC_492: 17: 					NIL
EC_492: 18: 			||
EC_492: 19: 				NIL
EC_492: 20: 		||
EC_492: 21: 			NIL
EC_492: 22: 	||
EC_492: 23: 		NIL
EC_492: 24: ||
EC_492: 25: 	NIL

EC_492 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_492  --> EC_493 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 493 , H : 206 , step : 123 >" as EC_493 #LightBlue
EC_493: 1: par
EC_493: 2: 	par
EC_493: 3: 		par
EC_493: 4: 			par
EC_493: 5: 				par
EC_493: 6: 					par sync [the alarm is disarmed]
EC_493: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_493: 8: 							[ true ] / the alarm is disarmed
EC_493: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_493: 10: 								[ clock==0 ] / turn off the tone
EC_493: 11: 								call( PostProc_R4 )
EC_493: 12: 					&&
EC_493: 13: 						call( PostProc_R9 )
EC_493: 14: 				||
EC_493: 15: 					NIL
EC_493: 16: 			||
EC_493: 17: 				NIL
EC_493: 18: 		||
EC_493: 19: 			NIL
EC_493: 20: 	||
EC_493: 21: 		NIL
EC_493: 22: ||
EC_493: 23: 	NIL

EC_493 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_493  --> EC_494 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 494 , H : 207 , step : 0 >" as EC_494 #Pink
EC_494: 1: par
EC_494: 2: 	par
EC_494: 3: 		par
EC_494: 4: 			par
EC_494: 5: 				par
EC_494: 6: 					par sync [the alarm is disarmed]
EC_494: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_494: 8: 							[ true ] / the alarm is disarmed
EC_494: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_494: 10: 								[ clock==0 ] / turn off the tone
EC_494: 11: 								call( PostProc_R4 )
EC_494: 12: 					&&
EC_494: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_494: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_494: 15: 							call( PostProc_R7 )
EC_494: 16: 						++
EC_494: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_494: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_494: 19: 								[ clock==0 ] / alert the emergency center
EC_494: 20: 								call( PostProc_R9 )
EC_494: 21: 				||
EC_494: 22: 					NIL
EC_494: 23: 			||
EC_494: 24: 				NIL
EC_494: 25: 		||
EC_494: 26: 			NIL
EC_494: 27: 	||
EC_494: 28: 		NIL
EC_494: 29: ||
EC_494: 30: 	NIL

EC_494 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_494  --> EC_496 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 496 , H : 208 , step : 0 >" as EC_496 #Orange
EC_496: 1: par
EC_496: 2: 	par
EC_496: 3: 		par
EC_496: 4: 			par
EC_496: 5: 				par
EC_496: 6: 					par sync [the alarm is disarmed]
EC_496: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_496: 8: 							[ true ] / the alarm is disarmed
EC_496: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_496: 10: 								[ clock==0 ] / turn off the tone
EC_496: 11: 								call( PostProc_R4 )
EC_496: 12: 					&&
EC_496: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_496: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_496: 15: 							call( PostProc_R7 )
EC_496: 16: 						++
EC_496: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_496: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_496: 19: 								[ clock==0 ] / alert the emergency center
EC_496: 20: 								call( PostProc_R9 )
EC_496: 21: 				||
EC_496: 22: 					NIL
EC_496: 23: 			||
EC_496: 24: 				NIL
EC_496: 25: 		||
EC_496: 26: 			NIL
EC_496: 27: 	||
EC_496: 28: 		NIL
EC_496: 29: ||
EC_496: 30: 	NIL

EC_496 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_496  --> EC_497 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 497 , H : 209 , step : 124 >" as EC_497 #LightBlue
EC_497: 1: par
EC_497: 2: 	par
EC_497: 3: 		par
EC_497: 4: 			par
EC_497: 5: 				par
EC_497: 6: 					par sync [the alarm is disarmed]
EC_497: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_497: 8: 							[ true ] / the alarm is disarmed
EC_497: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_497: 10: 								[ clock==0 ] / turn off the tone
EC_497: 11: 								call( PostProc_R4 )
EC_497: 12: 					&&
EC_497: 13: 						call( PostProc_R7 )
EC_497: 14: 				||
EC_497: 15: 					NIL
EC_497: 16: 			||
EC_497: 17: 				NIL
EC_497: 18: 		||
EC_497: 19: 			NIL
EC_497: 20: 	||
EC_497: 21: 		NIL
EC_497: 22: ||
EC_497: 23: 	NIL

EC_497 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_497  --> EC_499 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 499 , H : 210 , step : 0 >" as EC_499 #Pink
EC_499: 1: par
EC_499: 2: 	par
EC_499: 3: 		par
EC_499: 4: 			par
EC_499: 5: 				par
EC_499: 6: 					par sync [the alarm is disarmed]
EC_499: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_499: 8: 							[ true ] / the alarm is disarmed
EC_499: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_499: 10: 								[ clock==0 ] / turn off the tone
EC_499: 11: 								call( PostProc_R4 )
EC_499: 12: 					&&
EC_499: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_499: 14: 							[ true ] / the alarm is disarmed
EC_499: 15: 							call( PostProc_R8 )
EC_499: 16: 				||
EC_499: 17: 					NIL
EC_499: 18: 			||
EC_499: 19: 				NIL
EC_499: 20: 		||
EC_499: 21: 			NIL
EC_499: 22: 	||
EC_499: 23: 		NIL
EC_499: 24: ||
EC_499: 25: 	NIL

EC_499 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_499  --> EC_501 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 501 , H : 211 , step : 0 >" as EC_501 #Orange
EC_501: 1: par
EC_501: 2: 	par
EC_501: 3: 		par
EC_501: 4: 			par
EC_501: 5: 				par
EC_501: 6: 					par sync [the alarm is disarmed]
EC_501: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_501: 8: 							[ true ] / the alarm is disarmed
EC_501: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_501: 10: 								[ clock==0 ] / turn off the tone
EC_501: 11: 								call( PostProc_R4 )
EC_501: 12: 					&&
EC_501: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_501: 14: 							[ true ] / the alarm is disarmed
EC_501: 15: 							call( PostProc_R8 )
EC_501: 16: 				||
EC_501: 17: 					NIL
EC_501: 18: 			||
EC_501: 19: 				NIL
EC_501: 20: 		||
EC_501: 21: 			NIL
EC_501: 22: 	||
EC_501: 23: 		NIL
EC_501: 24: ||
EC_501: 25: 	NIL

EC_501 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_501  --> EC_502 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 502 , H : 212 , step : 125 >" as EC_502 #LightBlue
EC_502: 1: par
EC_502: 2: 	par
EC_502: 3: 		par
EC_502: 4: 			par
EC_502: 5: 				par
EC_502: 6: 					par sync [the alarm is disarmed]
EC_502: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_502: 8: 							[ clock==0 ] / turn off the tone
EC_502: 9: 							call( PostProc_R4 )
EC_502: 10: 					&&
EC_502: 11: 						call( PostProc_R8 )
EC_502: 12: 				||
EC_502: 13: 					NIL
EC_502: 14: 			||
EC_502: 15: 				NIL
EC_502: 16: 		||
EC_502: 17: 			NIL
EC_502: 18: 	||
EC_502: 19: 		NIL
EC_502: 20: ||
EC_502: 21: 	NIL

EC_502 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_502  --> EC_503 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 503 , H : 213 , step : 0 >" as EC_503 #Pink
EC_503: 1: par
EC_503: 2: 	par
EC_503: 3: 		par
EC_503: 4: 			par
EC_503: 5: 				par
EC_503: 6: 					par sync [the alarm is disarmed]
EC_503: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_503: 8: 							[ clock==0 ] / turn off the tone
EC_503: 9: 							call( PostProc_R4 )
EC_503: 10: 					&&
EC_503: 11: 						NIL
EC_503: 12: 				||
EC_503: 13: 					NIL
EC_503: 14: 			||
EC_503: 15: 				NIL
EC_503: 16: 		||
EC_503: 17: 			NIL
EC_503: 18: 	||
EC_503: 19: 		NIL
EC_503: 20: ||
EC_503: 21: 	NIL

EC_503 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_503  --> EC_505 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 505 , H : 214 , step : 0 >" as EC_505 #Orange
EC_505: 1: par
EC_505: 2: 	par
EC_505: 3: 		par
EC_505: 4: 			par
EC_505: 5: 				par
EC_505: 6: 					par sync [the alarm is disarmed]
EC_505: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_505: 8: 							[ clock==0 ] / turn off the tone
EC_505: 9: 							call( PostProc_R4 )
EC_505: 10: 					&&
EC_505: 11: 						NIL
EC_505: 12: 				||
EC_505: 13: 					NIL
EC_505: 14: 			||
EC_505: 15: 				NIL
EC_505: 16: 		||
EC_505: 17: 			NIL
EC_505: 18: 	||
EC_505: 19: 		NIL
EC_505: 20: ||
EC_505: 21: 	NIL

EC_505 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_505  --> EC_506 : \lact [True] / META:REDUNDANCE:EC< id : 60 , H : 29 >

state "EC< id : 506 , H : 215 , step : 0 >" as EC_506 #Green
EC_506: 1: par
EC_506: 2: 	par
EC_506: 3: 		par
EC_506: 4: 			par
EC_506: 5: 				par
EC_506: 6: 					par sync [the alarm is disarmed]
EC_506: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_506: 8: 							[ clock==0 ] / turn off the tone
EC_506: 9: 							call( PostProc_R4 )
EC_506: 10: 					&&
EC_506: 11: 						NIL
EC_506: 12: 				||
EC_506: 13: 					NIL
EC_506: 14: 			||
EC_506: 15: 				NIL
EC_506: 16: 		||
EC_506: 17: 			NIL
EC_506: 18: 	||
EC_506: 19: 		NIL
EC_506: 20: ||
EC_506: 21: 	NIL

EC_506 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_496  --> EC_498 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 498 , H : 209 , step : 126 >" as EC_498 #LightBlue
EC_498: 1: par
EC_498: 2: 	par
EC_498: 3: 		par
EC_498: 4: 			par
EC_498: 5: 				par
EC_498: 6: 					par sync [the alarm is disarmed]
EC_498: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_498: 8: 							[ true ] / the alarm is disarmed
EC_498: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_498: 10: 								[ clock==0 ] / turn off the tone
EC_498: 11: 								call( PostProc_R4 )
EC_498: 12: 					&&
EC_498: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_498: 14: 							[ clock==0 ] / alert the emergency center
EC_498: 15: 							call( PostProc_R9 )
EC_498: 16: 				||
EC_498: 17: 					NIL
EC_498: 18: 			||
EC_498: 19: 				NIL
EC_498: 20: 		||
EC_498: 21: 			NIL
EC_498: 22: 	||
EC_498: 23: 		NIL
EC_498: 24: ||
EC_498: 25: 	NIL

EC_498 : DBM: R7_x_resp=60, R3_x_resp=120, clock=60, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp=clock, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_498  --> EC_508 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 508 , H : 210 , step : 0 >" as EC_508 #Orange
EC_508: 1: par
EC_508: 2: 	par
EC_508: 3: 		par
EC_508: 4: 			par
EC_508: 5: 				par
EC_508: 6: 					par sync [the alarm is disarmed]
EC_508: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_508: 8: 							[ true ] / the alarm is disarmed
EC_508: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_508: 10: 								[ clock==0 ] / turn off the tone
EC_508: 11: 								call( PostProc_R4 )
EC_508: 12: 					&&
EC_508: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_508: 14: 							[ clock==0 ] / alert the emergency center
EC_508: 15: 							call( PostProc_R9 )
EC_508: 16: 				||
EC_508: 17: 					NIL
EC_508: 18: 			||
EC_508: 19: 				NIL
EC_508: 20: 		||
EC_508: 21: 			NIL
EC_508: 22: 	||
EC_508: 23: 		NIL
EC_508: 24: ||
EC_508: 25: 	NIL

EC_508 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_508  --> EC_509 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 509 , H : 211 , step : 127 >" as EC_509 #LightBlue
EC_509: 1: par
EC_509: 2: 	par
EC_509: 3: 		par
EC_509: 4: 			par
EC_509: 5: 				par
EC_509: 6: 					par sync [the alarm is disarmed]
EC_509: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_509: 8: 							[ true ] / the alarm is disarmed
EC_509: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_509: 10: 								[ clock==0 ] / turn off the tone
EC_509: 11: 								call( PostProc_R4 )
EC_509: 12: 					&&
EC_509: 13: 						call( PostProc_R9 )
EC_509: 14: 				||
EC_509: 15: 					NIL
EC_509: 16: 			||
EC_509: 17: 				NIL
EC_509: 18: 		||
EC_509: 19: 			NIL
EC_509: 20: 	||
EC_509: 21: 		NIL
EC_509: 22: ||
EC_509: 23: 	NIL

EC_509 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_509  --> EC_510 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 510 , H : 212 , step : 0 >" as EC_510 #Pink
EC_510: 1: par
EC_510: 2: 	par
EC_510: 3: 		par
EC_510: 4: 			par
EC_510: 5: 				par
EC_510: 6: 					par sync [the alarm is disarmed]
EC_510: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_510: 8: 							[ true ] / the alarm is disarmed
EC_510: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_510: 10: 								[ clock==0 ] / turn off the tone
EC_510: 11: 								call( PostProc_R4 )
EC_510: 12: 					&&
EC_510: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_510: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_510: 15: 							call( PostProc_R7 )
EC_510: 16: 						++
EC_510: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_510: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_510: 19: 								[ clock==0 ] / alert the emergency center
EC_510: 20: 								call( PostProc_R9 )
EC_510: 21: 				||
EC_510: 22: 					NIL
EC_510: 23: 			||
EC_510: 24: 				NIL
EC_510: 25: 		||
EC_510: 26: 			NIL
EC_510: 27: 	||
EC_510: 28: 		NIL
EC_510: 29: ||
EC_510: 30: 	NIL

EC_510 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_510  --> EC_512 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 512 , H : 213 , step : 0 >" as EC_512 #Orange
EC_512: 1: par
EC_512: 2: 	par
EC_512: 3: 		par
EC_512: 4: 			par
EC_512: 5: 				par
EC_512: 6: 					par sync [the alarm is disarmed]
EC_512: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_512: 8: 							[ true ] / the alarm is disarmed
EC_512: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_512: 10: 								[ clock==0 ] / turn off the tone
EC_512: 11: 								call( PostProc_R4 )
EC_512: 12: 					&&
EC_512: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_512: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_512: 15: 							call( PostProc_R7 )
EC_512: 16: 						++
EC_512: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_512: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_512: 19: 								[ clock==0 ] / alert the emergency center
EC_512: 20: 								call( PostProc_R9 )
EC_512: 21: 				||
EC_512: 22: 					NIL
EC_512: 23: 			||
EC_512: 24: 				NIL
EC_512: 25: 		||
EC_512: 26: 			NIL
EC_512: 27: 	||
EC_512: 28: 		NIL
EC_512: 29: ||
EC_512: 30: 	NIL

EC_512 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_512  --> EC_513 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 513 , H : 214 , step : 128 >" as EC_513 #LightBlue
EC_513: 1: par
EC_513: 2: 	par
EC_513: 3: 		par
EC_513: 4: 			par
EC_513: 5: 				par
EC_513: 6: 					par sync [the alarm is disarmed]
EC_513: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_513: 8: 							[ true ] / the alarm is disarmed
EC_513: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_513: 10: 								[ clock==0 ] / turn off the tone
EC_513: 11: 								call( PostProc_R4 )
EC_513: 12: 					&&
EC_513: 13: 						call( PostProc_R7 )
EC_513: 14: 				||
EC_513: 15: 					NIL
EC_513: 16: 			||
EC_513: 17: 				NIL
EC_513: 18: 		||
EC_513: 19: 			NIL
EC_513: 20: 	||
EC_513: 21: 		NIL
EC_513: 22: ||
EC_513: 23: 	NIL

EC_513 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_513  --> EC_515 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 515 , H : 215 , step : 0 >" as EC_515 #Pink
EC_515: 1: par
EC_515: 2: 	par
EC_515: 3: 		par
EC_515: 4: 			par
EC_515: 5: 				par
EC_515: 6: 					par sync [the alarm is disarmed]
EC_515: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_515: 8: 							[ true ] / the alarm is disarmed
EC_515: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_515: 10: 								[ clock==0 ] / turn off the tone
EC_515: 11: 								call( PostProc_R4 )
EC_515: 12: 					&&
EC_515: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_515: 14: 							[ true ] / the alarm is disarmed
EC_515: 15: 							call( PostProc_R8 )
EC_515: 16: 				||
EC_515: 17: 					NIL
EC_515: 18: 			||
EC_515: 19: 				NIL
EC_515: 20: 		||
EC_515: 21: 			NIL
EC_515: 22: 	||
EC_515: 23: 		NIL
EC_515: 24: ||
EC_515: 25: 	NIL

EC_515 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_515  --> EC_517 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 517 , H : 216 , step : 0 >" as EC_517 #Orange
EC_517: 1: par
EC_517: 2: 	par
EC_517: 3: 		par
EC_517: 4: 			par
EC_517: 5: 				par
EC_517: 6: 					par sync [the alarm is disarmed]
EC_517: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_517: 8: 							[ true ] / the alarm is disarmed
EC_517: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_517: 10: 								[ clock==0 ] / turn off the tone
EC_517: 11: 								call( PostProc_R4 )
EC_517: 12: 					&&
EC_517: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_517: 14: 							[ true ] / the alarm is disarmed
EC_517: 15: 							call( PostProc_R8 )
EC_517: 16: 				||
EC_517: 17: 					NIL
EC_517: 18: 			||
EC_517: 19: 				NIL
EC_517: 20: 		||
EC_517: 21: 			NIL
EC_517: 22: 	||
EC_517: 23: 		NIL
EC_517: 24: ||
EC_517: 25: 	NIL

EC_517 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_517  --> EC_518 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 518 , H : 217 , step : 129 >" as EC_518 #LightBlue
EC_518: 1: par
EC_518: 2: 	par
EC_518: 3: 		par
EC_518: 4: 			par
EC_518: 5: 				par
EC_518: 6: 					par sync [the alarm is disarmed]
EC_518: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_518: 8: 							[ clock==0 ] / turn off the tone
EC_518: 9: 							call( PostProc_R4 )
EC_518: 10: 					&&
EC_518: 11: 						call( PostProc_R8 )
EC_518: 12: 				||
EC_518: 13: 					NIL
EC_518: 14: 			||
EC_518: 15: 				NIL
EC_518: 16: 		||
EC_518: 17: 			NIL
EC_518: 18: 	||
EC_518: 19: 		NIL
EC_518: 20: ||
EC_518: 21: 	NIL

EC_518 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_518  --> EC_519 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 519 , H : 218 , step : 0 >" as EC_519 #Pink
EC_519: 1: par
EC_519: 2: 	par
EC_519: 3: 		par
EC_519: 4: 			par
EC_519: 5: 				par
EC_519: 6: 					par sync [the alarm is disarmed]
EC_519: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_519: 8: 							[ clock==0 ] / turn off the tone
EC_519: 9: 							call( PostProc_R4 )
EC_519: 10: 					&&
EC_519: 11: 						NIL
EC_519: 12: 				||
EC_519: 13: 					NIL
EC_519: 14: 			||
EC_519: 15: 				NIL
EC_519: 16: 		||
EC_519: 17: 			NIL
EC_519: 18: 	||
EC_519: 19: 		NIL
EC_519: 20: ||
EC_519: 21: 	NIL

EC_519 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_519  --> EC_521 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 521 , H : 219 , step : 0 >" as EC_521 #Orange
EC_521: 1: par
EC_521: 2: 	par
EC_521: 3: 		par
EC_521: 4: 			par
EC_521: 5: 				par
EC_521: 6: 					par sync [the alarm is disarmed]
EC_521: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_521: 8: 							[ clock==0 ] / turn off the tone
EC_521: 9: 							call( PostProc_R4 )
EC_521: 10: 					&&
EC_521: 11: 						NIL
EC_521: 12: 				||
EC_521: 13: 					NIL
EC_521: 14: 			||
EC_521: 15: 				NIL
EC_521: 16: 		||
EC_521: 17: 			NIL
EC_521: 18: 	||
EC_521: 19: 		NIL
EC_521: 20: ||
EC_521: 21: 	NIL

EC_521 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_521  --> EC_522 : \lact [True] / META:REDUNDANCE:EC< id : 133 , H : 61 >

state "EC< id : 522 , H : 220 , step : 0 >" as EC_522 #Green
EC_522: 1: par
EC_522: 2: 	par
EC_522: 3: 		par
EC_522: 4: 			par
EC_522: 5: 				par
EC_522: 6: 					par sync [the alarm is disarmed]
EC_522: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_522: 8: 							[ clock==0 ] / turn off the tone
EC_522: 9: 							call( PostProc_R4 )
EC_522: 10: 					&&
EC_522: 11: 						NIL
EC_522: 12: 				||
EC_522: 13: 					NIL
EC_522: 14: 			||
EC_522: 15: 				NIL
EC_522: 16: 		||
EC_522: 17: 			NIL
EC_522: 18: 	||
EC_522: 19: 		NIL
EC_522: 20: ||
EC_522: 21: 	NIL

EC_522 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_512  --> EC_514 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 514 , H : 214 , step : 130 >" as EC_514 #LightBlue
EC_514: 1: par
EC_514: 2: 	par
EC_514: 3: 		par
EC_514: 4: 			par
EC_514: 5: 				par
EC_514: 6: 					par sync [the alarm is disarmed]
EC_514: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_514: 8: 							[ true ] / the alarm is disarmed
EC_514: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_514: 10: 								[ clock==0 ] / turn off the tone
EC_514: 11: 								call( PostProc_R4 )
EC_514: 12: 					&&
EC_514: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_514: 14: 							[ clock==0 ] / alert the emergency center
EC_514: 15: 							call( PostProc_R9 )
EC_514: 16: 				||
EC_514: 17: 					NIL
EC_514: 18: 			||
EC_514: 19: 				NIL
EC_514: 20: 		||
EC_514: 21: 			NIL
EC_514: 22: 	||
EC_514: 23: 		NIL
EC_514: 24: ||
EC_514: 25: 	NIL

EC_514 : DBM: R7_x_resp=60, R3_x_resp=180, clock=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp=clock, R3_x_resp-clock<=120,\l   clock-R3_x_resp<=-120,
EC_514  --> EC_524 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 524 , H : 215 , step : 0 >" as EC_524 #Orange
EC_524: 1: par
EC_524: 2: 	par
EC_524: 3: 		par
EC_524: 4: 			par
EC_524: 5: 				par
EC_524: 6: 					par sync [the alarm is disarmed]
EC_524: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_524: 8: 							[ true ] / the alarm is disarmed
EC_524: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_524: 10: 								[ clock==0 ] / turn off the tone
EC_524: 11: 								call( PostProc_R4 )
EC_524: 12: 					&&
EC_524: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_524: 14: 							[ clock==0 ] / alert the emergency center
EC_524: 15: 							call( PostProc_R9 )
EC_524: 16: 				||
EC_524: 17: 					NIL
EC_524: 18: 			||
EC_524: 19: 				NIL
EC_524: 20: 		||
EC_524: 21: 			NIL
EC_524: 22: 	||
EC_524: 23: 		NIL
EC_524: 24: ||
EC_524: 25: 	NIL

EC_524 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_524  --> EC_525 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 525 , H : 216 , step : 131 >" as EC_525 #LightBlue
EC_525: 1: par
EC_525: 2: 	par
EC_525: 3: 		par
EC_525: 4: 			par
EC_525: 5: 				par
EC_525: 6: 					par sync [the alarm is disarmed]
EC_525: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_525: 8: 							[ true ] / the alarm is disarmed
EC_525: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_525: 10: 								[ clock==0 ] / turn off the tone
EC_525: 11: 								call( PostProc_R4 )
EC_525: 12: 					&&
EC_525: 13: 						call( PostProc_R9 )
EC_525: 14: 				||
EC_525: 15: 					NIL
EC_525: 16: 			||
EC_525: 17: 				NIL
EC_525: 18: 		||
EC_525: 19: 			NIL
EC_525: 20: 	||
EC_525: 21: 		NIL
EC_525: 22: ||
EC_525: 23: 	NIL

EC_525 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_525  --> EC_526 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 526 , H : 217 , step : 0 >" as EC_526 #Pink
EC_526: 1: par
EC_526: 2: 	par
EC_526: 3: 		par
EC_526: 4: 			par
EC_526: 5: 				par
EC_526: 6: 					par sync [the alarm is disarmed]
EC_526: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_526: 8: 							[ true ] / the alarm is disarmed
EC_526: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_526: 10: 								[ clock==0 ] / turn off the tone
EC_526: 11: 								call( PostProc_R4 )
EC_526: 12: 					&&
EC_526: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_526: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_526: 15: 							call( PostProc_R7 )
EC_526: 16: 						++
EC_526: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_526: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_526: 19: 								[ clock==0 ] / alert the emergency center
EC_526: 20: 								call( PostProc_R9 )
EC_526: 21: 				||
EC_526: 22: 					NIL
EC_526: 23: 			||
EC_526: 24: 				NIL
EC_526: 25: 		||
EC_526: 26: 			NIL
EC_526: 27: 	||
EC_526: 28: 		NIL
EC_526: 29: ||
EC_526: 30: 	NIL

EC_526 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_526  --> EC_528 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 528 , H : 218 , step : 0 >" as EC_528 #Orange
EC_528: 1: par
EC_528: 2: 	par
EC_528: 3: 		par
EC_528: 4: 			par
EC_528: 5: 				par
EC_528: 6: 					par sync [the alarm is disarmed]
EC_528: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_528: 8: 							[ true ] / the alarm is disarmed
EC_528: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_528: 10: 								[ clock==0 ] / turn off the tone
EC_528: 11: 								call( PostProc_R4 )
EC_528: 12: 					&&
EC_528: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_528: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_528: 15: 							call( PostProc_R7 )
EC_528: 16: 						++
EC_528: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_528: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_528: 19: 								[ clock==0 ] / alert the emergency center
EC_528: 20: 								call( PostProc_R9 )
EC_528: 21: 				||
EC_528: 22: 					NIL
EC_528: 23: 			||
EC_528: 24: 				NIL
EC_528: 25: 		||
EC_528: 26: 			NIL
EC_528: 27: 	||
EC_528: 28: 		NIL
EC_528: 29: ||
EC_528: 30: 	NIL

EC_528 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_528  --> EC_529 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 529 , H : 219 , step : 132 >" as EC_529 #LightBlue
EC_529: 1: par
EC_529: 2: 	par
EC_529: 3: 		par
EC_529: 4: 			par
EC_529: 5: 				par
EC_529: 6: 					par sync [the alarm is disarmed]
EC_529: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_529: 8: 							[ true ] / the alarm is disarmed
EC_529: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_529: 10: 								[ clock==0 ] / turn off the tone
EC_529: 11: 								call( PostProc_R4 )
EC_529: 12: 					&&
EC_529: 13: 						call( PostProc_R7 )
EC_529: 14: 				||
EC_529: 15: 					NIL
EC_529: 16: 			||
EC_529: 17: 				NIL
EC_529: 18: 		||
EC_529: 19: 			NIL
EC_529: 20: 	||
EC_529: 21: 		NIL
EC_529: 22: ||
EC_529: 23: 	NIL

EC_529 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_529  --> EC_531 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 531 , H : 220 , step : 0 >" as EC_531 #Pink
EC_531: 1: par
EC_531: 2: 	par
EC_531: 3: 		par
EC_531: 4: 			par
EC_531: 5: 				par
EC_531: 6: 					par sync [the alarm is disarmed]
EC_531: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_531: 8: 							[ true ] / the alarm is disarmed
EC_531: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_531: 10: 								[ clock==0 ] / turn off the tone
EC_531: 11: 								call( PostProc_R4 )
EC_531: 12: 					&&
EC_531: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_531: 14: 							[ true ] / the alarm is disarmed
EC_531: 15: 							call( PostProc_R8 )
EC_531: 16: 				||
EC_531: 17: 					NIL
EC_531: 18: 			||
EC_531: 19: 				NIL
EC_531: 20: 		||
EC_531: 21: 			NIL
EC_531: 22: 	||
EC_531: 23: 		NIL
EC_531: 24: ||
EC_531: 25: 	NIL

EC_531 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_531  --> EC_533 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 533 , H : 221 , step : 0 >" as EC_533 #Orange
EC_533: 1: par
EC_533: 2: 	par
EC_533: 3: 		par
EC_533: 4: 			par
EC_533: 5: 				par
EC_533: 6: 					par sync [the alarm is disarmed]
EC_533: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_533: 8: 							[ true ] / the alarm is disarmed
EC_533: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_533: 10: 								[ clock==0 ] / turn off the tone
EC_533: 11: 								call( PostProc_R4 )
EC_533: 12: 					&&
EC_533: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_533: 14: 							[ true ] / the alarm is disarmed
EC_533: 15: 							call( PostProc_R8 )
EC_533: 16: 				||
EC_533: 17: 					NIL
EC_533: 18: 			||
EC_533: 19: 				NIL
EC_533: 20: 		||
EC_533: 21: 			NIL
EC_533: 22: 	||
EC_533: 23: 		NIL
EC_533: 24: ||
EC_533: 25: 	NIL

EC_533 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_533  --> EC_534 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 534 , H : 222 , step : 133 >" as EC_534 #LightBlue
EC_534: 1: par
EC_534: 2: 	par
EC_534: 3: 		par
EC_534: 4: 			par
EC_534: 5: 				par
EC_534: 6: 					par sync [the alarm is disarmed]
EC_534: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_534: 8: 							[ clock==0 ] / turn off the tone
EC_534: 9: 							call( PostProc_R4 )
EC_534: 10: 					&&
EC_534: 11: 						call( PostProc_R8 )
EC_534: 12: 				||
EC_534: 13: 					NIL
EC_534: 14: 			||
EC_534: 15: 				NIL
EC_534: 16: 		||
EC_534: 17: 			NIL
EC_534: 18: 	||
EC_534: 19: 		NIL
EC_534: 20: ||
EC_534: 21: 	NIL

EC_534 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_534  --> EC_535 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 535 , H : 223 , step : 0 >" as EC_535 #Pink
EC_535: 1: par
EC_535: 2: 	par
EC_535: 3: 		par
EC_535: 4: 			par
EC_535: 5: 				par
EC_535: 6: 					par sync [the alarm is disarmed]
EC_535: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_535: 8: 							[ clock==0 ] / turn off the tone
EC_535: 9: 							call( PostProc_R4 )
EC_535: 10: 					&&
EC_535: 11: 						NIL
EC_535: 12: 				||
EC_535: 13: 					NIL
EC_535: 14: 			||
EC_535: 15: 				NIL
EC_535: 16: 		||
EC_535: 17: 			NIL
EC_535: 18: 	||
EC_535: 19: 		NIL
EC_535: 20: ||
EC_535: 21: 	NIL

EC_535 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_535  --> EC_537 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 537 , H : 224 , step : 0 >" as EC_537 #Orange
EC_537: 1: par
EC_537: 2: 	par
EC_537: 3: 		par
EC_537: 4: 			par
EC_537: 5: 				par
EC_537: 6: 					par sync [the alarm is disarmed]
EC_537: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_537: 8: 							[ clock==0 ] / turn off the tone
EC_537: 9: 							call( PostProc_R4 )
EC_537: 10: 					&&
EC_537: 11: 						NIL
EC_537: 12: 				||
EC_537: 13: 					NIL
EC_537: 14: 			||
EC_537: 15: 				NIL
EC_537: 16: 		||
EC_537: 17: 			NIL
EC_537: 18: 	||
EC_537: 19: 		NIL
EC_537: 20: ||
EC_537: 21: 	NIL

EC_537 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_537  --> EC_538 : \lact [True] / META:REDUNDANCE:EC< id : 222 , H : 98 >

state "EC< id : 538 , H : 225 , step : 0 >" as EC_538 #Green
EC_538: 1: par
EC_538: 2: 	par
EC_538: 3: 		par
EC_538: 4: 			par
EC_538: 5: 				par
EC_538: 6: 					par sync [the alarm is disarmed]
EC_538: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_538: 8: 							[ clock==0 ] / turn off the tone
EC_538: 9: 							call( PostProc_R4 )
EC_538: 10: 					&&
EC_538: 11: 						NIL
EC_538: 12: 				||
EC_538: 13: 					NIL
EC_538: 14: 			||
EC_538: 15: 				NIL
EC_538: 16: 		||
EC_538: 17: 			NIL
EC_538: 18: 	||
EC_538: 19: 		NIL
EC_538: 20: ||
EC_538: 21: 	NIL

EC_538 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_528  --> EC_530 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 530 , H : 219 , step : 134 >" as EC_530 #LightBlue
EC_530: 1: par
EC_530: 2: 	par
EC_530: 3: 		par
EC_530: 4: 			par
EC_530: 5: 				par
EC_530: 6: 					par sync [the alarm is disarmed]
EC_530: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_530: 8: 							[ true ] / the alarm is disarmed
EC_530: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_530: 10: 								[ clock==0 ] / turn off the tone
EC_530: 11: 								call( PostProc_R4 )
EC_530: 12: 					&&
EC_530: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_530: 14: 							[ clock==0 ] / alert the emergency center
EC_530: 15: 							call( PostProc_R9 )
EC_530: 16: 				||
EC_530: 17: 					NIL
EC_530: 18: 			||
EC_530: 19: 				NIL
EC_530: 20: 		||
EC_530: 21: 			NIL
EC_530: 22: 	||
EC_530: 23: 		NIL
EC_530: 24: ||
EC_530: 25: 	NIL

EC_530 : DBM: R7_x_resp=60, R3_x_resp=240, clock=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp=clock, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-180,
EC_530  --> EC_540 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 540 , H : 220 , step : 0 >" as EC_540 #Orange
EC_540: 1: par
EC_540: 2: 	par
EC_540: 3: 		par
EC_540: 4: 			par
EC_540: 5: 				par
EC_540: 6: 					par sync [the alarm is disarmed]
EC_540: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_540: 8: 							[ true ] / the alarm is disarmed
EC_540: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_540: 10: 								[ clock==0 ] / turn off the tone
EC_540: 11: 								call( PostProc_R4 )
EC_540: 12: 					&&
EC_540: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_540: 14: 							[ clock==0 ] / alert the emergency center
EC_540: 15: 							call( PostProc_R9 )
EC_540: 16: 				||
EC_540: 17: 					NIL
EC_540: 18: 			||
EC_540: 19: 				NIL
EC_540: 20: 		||
EC_540: 21: 			NIL
EC_540: 22: 	||
EC_540: 23: 		NIL
EC_540: 24: ||
EC_540: 25: 	NIL

EC_540 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_540  --> EC_541 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 541 , H : 221 , step : 135 >" as EC_541 #LightBlue
EC_541: 1: par
EC_541: 2: 	par
EC_541: 3: 		par
EC_541: 4: 			par
EC_541: 5: 				par
EC_541: 6: 					par sync [the alarm is disarmed]
EC_541: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_541: 8: 							[ true ] / the alarm is disarmed
EC_541: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_541: 10: 								[ clock==0 ] / turn off the tone
EC_541: 11: 								call( PostProc_R4 )
EC_541: 12: 					&&
EC_541: 13: 						call( PostProc_R9 )
EC_541: 14: 				||
EC_541: 15: 					NIL
EC_541: 16: 			||
EC_541: 17: 				NIL
EC_541: 18: 		||
EC_541: 19: 			NIL
EC_541: 20: 	||
EC_541: 21: 		NIL
EC_541: 22: ||
EC_541: 23: 	NIL

EC_541 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_541  --> EC_542 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 542 , H : 222 , step : 0 >" as EC_542 #Pink
EC_542: 1: par
EC_542: 2: 	par
EC_542: 3: 		par
EC_542: 4: 			par
EC_542: 5: 				par
EC_542: 6: 					par sync [the alarm is disarmed]
EC_542: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_542: 8: 							[ true ] / the alarm is disarmed
EC_542: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_542: 10: 								[ clock==0 ] / turn off the tone
EC_542: 11: 								call( PostProc_R4 )
EC_542: 12: 					&&
EC_542: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_542: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_542: 15: 							call( PostProc_R7 )
EC_542: 16: 						++
EC_542: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_542: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_542: 19: 								[ clock==0 ] / alert the emergency center
EC_542: 20: 								call( PostProc_R9 )
EC_542: 21: 				||
EC_542: 22: 					NIL
EC_542: 23: 			||
EC_542: 24: 				NIL
EC_542: 25: 		||
EC_542: 26: 			NIL
EC_542: 27: 	||
EC_542: 28: 		NIL
EC_542: 29: ||
EC_542: 30: 	NIL

EC_542 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_542  --> EC_544 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 544 , H : 223 , step : 0 >" as EC_544 #Orange
EC_544: 1: par
EC_544: 2: 	par
EC_544: 3: 		par
EC_544: 4: 			par
EC_544: 5: 				par
EC_544: 6: 					par sync [the alarm is disarmed]
EC_544: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_544: 8: 							[ true ] / the alarm is disarmed
EC_544: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_544: 10: 								[ clock==0 ] / turn off the tone
EC_544: 11: 								call( PostProc_R4 )
EC_544: 12: 					&&
EC_544: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_544: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_544: 15: 							call( PostProc_R7 )
EC_544: 16: 						++
EC_544: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_544: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_544: 19: 								[ clock==0 ] / alert the emergency center
EC_544: 20: 								call( PostProc_R9 )
EC_544: 21: 				||
EC_544: 22: 					NIL
EC_544: 23: 			||
EC_544: 24: 				NIL
EC_544: 25: 		||
EC_544: 26: 			NIL
EC_544: 27: 	||
EC_544: 28: 		NIL
EC_544: 29: ||
EC_544: 30: 	NIL

EC_544 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_544  --> EC_545 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 545 , H : 224 , step : 136 >" as EC_545 #LightBlue
EC_545: 1: par
EC_545: 2: 	par
EC_545: 3: 		par
EC_545: 4: 			par
EC_545: 5: 				par
EC_545: 6: 					par sync [the alarm is disarmed]
EC_545: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_545: 8: 							[ true ] / the alarm is disarmed
EC_545: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_545: 10: 								[ clock==0 ] / turn off the tone
EC_545: 11: 								call( PostProc_R4 )
EC_545: 12: 					&&
EC_545: 13: 						call( PostProc_R7 )
EC_545: 14: 				||
EC_545: 15: 					NIL
EC_545: 16: 			||
EC_545: 17: 				NIL
EC_545: 18: 		||
EC_545: 19: 			NIL
EC_545: 20: 	||
EC_545: 21: 		NIL
EC_545: 22: ||
EC_545: 23: 	NIL

EC_545 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_545  --> EC_547 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 547 , H : 225 , step : 0 >" as EC_547 #Pink
EC_547: 1: par
EC_547: 2: 	par
EC_547: 3: 		par
EC_547: 4: 			par
EC_547: 5: 				par
EC_547: 6: 					par sync [the alarm is disarmed]
EC_547: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_547: 8: 							[ true ] / the alarm is disarmed
EC_547: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_547: 10: 								[ clock==0 ] / turn off the tone
EC_547: 11: 								call( PostProc_R4 )
EC_547: 12: 					&&
EC_547: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_547: 14: 							[ true ] / the alarm is disarmed
EC_547: 15: 							call( PostProc_R8 )
EC_547: 16: 				||
EC_547: 17: 					NIL
EC_547: 18: 			||
EC_547: 19: 				NIL
EC_547: 20: 		||
EC_547: 21: 			NIL
EC_547: 22: 	||
EC_547: 23: 		NIL
EC_547: 24: ||
EC_547: 25: 	NIL

EC_547 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_547  --> EC_549 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 549 , H : 226 , step : 0 >" as EC_549 #Orange
EC_549: 1: par
EC_549: 2: 	par
EC_549: 3: 		par
EC_549: 4: 			par
EC_549: 5: 				par
EC_549: 6: 					par sync [the alarm is disarmed]
EC_549: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_549: 8: 							[ true ] / the alarm is disarmed
EC_549: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_549: 10: 								[ clock==0 ] / turn off the tone
EC_549: 11: 								call( PostProc_R4 )
EC_549: 12: 					&&
EC_549: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_549: 14: 							[ true ] / the alarm is disarmed
EC_549: 15: 							call( PostProc_R8 )
EC_549: 16: 				||
EC_549: 17: 					NIL
EC_549: 18: 			||
EC_549: 19: 				NIL
EC_549: 20: 		||
EC_549: 21: 			NIL
EC_549: 22: 	||
EC_549: 23: 		NIL
EC_549: 24: ||
EC_549: 25: 	NIL

EC_549 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_549  --> EC_550 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 550 , H : 227 , step : 137 >" as EC_550 #LightBlue
EC_550: 1: par
EC_550: 2: 	par
EC_550: 3: 		par
EC_550: 4: 			par
EC_550: 5: 				par
EC_550: 6: 					par sync [the alarm is disarmed]
EC_550: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_550: 8: 							[ clock==0 ] / turn off the tone
EC_550: 9: 							call( PostProc_R4 )
EC_550: 10: 					&&
EC_550: 11: 						call( PostProc_R8 )
EC_550: 12: 				||
EC_550: 13: 					NIL
EC_550: 14: 			||
EC_550: 15: 				NIL
EC_550: 16: 		||
EC_550: 17: 			NIL
EC_550: 18: 	||
EC_550: 19: 		NIL
EC_550: 20: ||
EC_550: 21: 	NIL

EC_550 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_550  --> EC_551 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 551 , H : 228 , step : 0 >" as EC_551 #Pink
EC_551: 1: par
EC_551: 2: 	par
EC_551: 3: 		par
EC_551: 4: 			par
EC_551: 5: 				par
EC_551: 6: 					par sync [the alarm is disarmed]
EC_551: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_551: 8: 							[ clock==0 ] / turn off the tone
EC_551: 9: 							call( PostProc_R4 )
EC_551: 10: 					&&
EC_551: 11: 						NIL
EC_551: 12: 				||
EC_551: 13: 					NIL
EC_551: 14: 			||
EC_551: 15: 				NIL
EC_551: 16: 		||
EC_551: 17: 			NIL
EC_551: 18: 	||
EC_551: 19: 		NIL
EC_551: 20: ||
EC_551: 21: 	NIL

EC_551 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_551  --> EC_553 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 553 , H : 229 , step : 0 >" as EC_553 #Orange
EC_553: 1: par
EC_553: 2: 	par
EC_553: 3: 		par
EC_553: 4: 			par
EC_553: 5: 				par
EC_553: 6: 					par sync [the alarm is disarmed]
EC_553: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_553: 8: 							[ clock==0 ] / turn off the tone
EC_553: 9: 							call( PostProc_R4 )
EC_553: 10: 					&&
EC_553: 11: 						NIL
EC_553: 12: 				||
EC_553: 13: 					NIL
EC_553: 14: 			||
EC_553: 15: 				NIL
EC_553: 16: 		||
EC_553: 17: 			NIL
EC_553: 18: 	||
EC_553: 19: 		NIL
EC_553: 20: ||
EC_553: 21: 	NIL

EC_553 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_553  --> EC_554 : \lact [True] / META:REDUNDANCE:EC< id : 327 , H : 140 >

state "EC< id : 554 , H : 230 , step : 0 >" as EC_554 #Green
EC_554: 1: par
EC_554: 2: 	par
EC_554: 3: 		par
EC_554: 4: 			par
EC_554: 5: 				par
EC_554: 6: 					par sync [the alarm is disarmed]
EC_554: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_554: 8: 							[ clock==0 ] / turn off the tone
EC_554: 9: 							call( PostProc_R4 )
EC_554: 10: 					&&
EC_554: 11: 						NIL
EC_554: 12: 				||
EC_554: 13: 					NIL
EC_554: 14: 			||
EC_554: 15: 				NIL
EC_554: 16: 		||
EC_554: 17: 			NIL
EC_554: 18: 	||
EC_554: 19: 		NIL
EC_554: 20: ||
EC_554: 21: 	NIL

EC_554 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_544  --> EC_546 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 546 , H : 224 , step : 138 >" as EC_546 #LightBlue
EC_546: 1: par
EC_546: 2: 	par
EC_546: 3: 		par
EC_546: 4: 			par
EC_546: 5: 				par
EC_546: 6: 					par sync [the alarm is disarmed]
EC_546: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_546: 8: 							[ true ] / the alarm is disarmed
EC_546: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_546: 10: 								[ clock==0 ] / turn off the tone
EC_546: 11: 								call( PostProc_R4 )
EC_546: 12: 					&&
EC_546: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_546: 14: 							[ clock==0 ] / alert the emergency center
EC_546: 15: 							call( PostProc_R9 )
EC_546: 16: 				||
EC_546: 17: 					NIL
EC_546: 18: 			||
EC_546: 19: 				NIL
EC_546: 20: 		||
EC_546: 21: 			NIL
EC_546: 22: 	||
EC_546: 23: 		NIL
EC_546: 24: ||
EC_546: 25: 	NIL

EC_546 : DBM: R7_x_resp=60, R3_x_resp=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp=clock, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-240,
EC_546  --> EC_556 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 556 , H : 225 , step : 0 >" as EC_556 #Orange
EC_556: 1: par
EC_556: 2: 	par
EC_556: 3: 		par
EC_556: 4: 			par
EC_556: 5: 				par
EC_556: 6: 					par sync [the alarm is disarmed]
EC_556: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_556: 8: 							[ true ] / the alarm is disarmed
EC_556: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_556: 10: 								[ clock==0 ] / turn off the tone
EC_556: 11: 								call( PostProc_R4 )
EC_556: 12: 					&&
EC_556: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_556: 14: 							[ clock==0 ] / alert the emergency center
EC_556: 15: 							call( PostProc_R9 )
EC_556: 16: 				||
EC_556: 17: 					NIL
EC_556: 18: 			||
EC_556: 19: 				NIL
EC_556: 20: 		||
EC_556: 21: 			NIL
EC_556: 22: 	||
EC_556: 23: 		NIL
EC_556: 24: ||
EC_556: 25: 	NIL

EC_556 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_556  --> EC_557 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 557 , H : 226 , step : 139 >" as EC_557 #LightBlue
EC_557: 1: par
EC_557: 2: 	par
EC_557: 3: 		par
EC_557: 4: 			par
EC_557: 5: 				par
EC_557: 6: 					par sync [the alarm is disarmed]
EC_557: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_557: 8: 							[ true ] / the alarm is disarmed
EC_557: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_557: 10: 								[ clock==0 ] / turn off the tone
EC_557: 11: 								call( PostProc_R4 )
EC_557: 12: 					&&
EC_557: 13: 						call( PostProc_R9 )
EC_557: 14: 				||
EC_557: 15: 					NIL
EC_557: 16: 			||
EC_557: 17: 				NIL
EC_557: 18: 		||
EC_557: 19: 			NIL
EC_557: 20: 	||
EC_557: 21: 		NIL
EC_557: 22: ||
EC_557: 23: 	NIL

EC_557 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_557  --> EC_558 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 558 , H : 227 , step : 0 >" as EC_558 #Pink
EC_558: 1: par
EC_558: 2: 	par
EC_558: 3: 		par
EC_558: 4: 			par
EC_558: 5: 				par
EC_558: 6: 					par sync [the alarm is disarmed]
EC_558: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_558: 8: 							[ true ] / the alarm is disarmed
EC_558: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_558: 10: 								[ clock==0 ] / turn off the tone
EC_558: 11: 								call( PostProc_R4 )
EC_558: 12: 					&&
EC_558: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_558: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_558: 15: 							call( PostProc_R7 )
EC_558: 16: 						++
EC_558: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_558: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_558: 19: 								[ clock==0 ] / alert the emergency center
EC_558: 20: 								call( PostProc_R9 )
EC_558: 21: 				||
EC_558: 22: 					NIL
EC_558: 23: 			||
EC_558: 24: 				NIL
EC_558: 25: 		||
EC_558: 26: 			NIL
EC_558: 27: 	||
EC_558: 28: 		NIL
EC_558: 29: ||
EC_558: 30: 	NIL

EC_558 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_558  --> EC_560 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 560 , H : 228 , step : 0 >" as EC_560 #Orange
EC_560: 1: par
EC_560: 2: 	par
EC_560: 3: 		par
EC_560: 4: 			par
EC_560: 5: 				par
EC_560: 6: 					par sync [the alarm is disarmed]
EC_560: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_560: 8: 							[ true ] / the alarm is disarmed
EC_560: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_560: 10: 								[ clock==0 ] / turn off the tone
EC_560: 11: 								call( PostProc_R4 )
EC_560: 12: 					&&
EC_560: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_560: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_560: 15: 							call( PostProc_R7 )
EC_560: 16: 						++
EC_560: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_560: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_560: 19: 								[ clock==0 ] / alert the emergency center
EC_560: 20: 								call( PostProc_R9 )
EC_560: 21: 				||
EC_560: 22: 					NIL
EC_560: 23: 			||
EC_560: 24: 				NIL
EC_560: 25: 		||
EC_560: 26: 			NIL
EC_560: 27: 	||
EC_560: 28: 		NIL
EC_560: 29: ||
EC_560: 30: 	NIL

EC_560 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_560  --> EC_561 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 561 , H : 229 , step : 140 >" as EC_561 #LightBlue
EC_561: 1: par
EC_561: 2: 	par
EC_561: 3: 		par
EC_561: 4: 			par
EC_561: 5: 				par
EC_561: 6: 					par sync [the alarm is disarmed]
EC_561: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_561: 8: 							[ true ] / the alarm is disarmed
EC_561: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_561: 10: 								[ clock==0 ] / turn off the tone
EC_561: 11: 								call( PostProc_R4 )
EC_561: 12: 					&&
EC_561: 13: 						call( PostProc_R7 )
EC_561: 14: 				||
EC_561: 15: 					NIL
EC_561: 16: 			||
EC_561: 17: 				NIL
EC_561: 18: 		||
EC_561: 19: 			NIL
EC_561: 20: 	||
EC_561: 21: 		NIL
EC_561: 22: ||
EC_561: 23: 	NIL

EC_561 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_561  --> EC_563 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 563 , H : 230 , step : 0 >" as EC_563 #Pink
EC_563: 1: par
EC_563: 2: 	par
EC_563: 3: 		par
EC_563: 4: 			par
EC_563: 5: 				par
EC_563: 6: 					par sync [the alarm is disarmed]
EC_563: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_563: 8: 							[ true ] / the alarm is disarmed
EC_563: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_563: 10: 								[ clock==0 ] / turn off the tone
EC_563: 11: 								call( PostProc_R4 )
EC_563: 12: 					&&
EC_563: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_563: 14: 							[ true ] / the alarm is disarmed
EC_563: 15: 							call( PostProc_R8 )
EC_563: 16: 				||
EC_563: 17: 					NIL
EC_563: 18: 			||
EC_563: 19: 				NIL
EC_563: 20: 		||
EC_563: 21: 			NIL
EC_563: 22: 	||
EC_563: 23: 		NIL
EC_563: 24: ||
EC_563: 25: 	NIL

EC_563 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_563  --> EC_565 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 565 , H : 231 , step : 0 >" as EC_565 #Orange
EC_565: 1: par
EC_565: 2: 	par
EC_565: 3: 		par
EC_565: 4: 			par
EC_565: 5: 				par
EC_565: 6: 					par sync [the alarm is disarmed]
EC_565: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_565: 8: 							[ true ] / the alarm is disarmed
EC_565: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_565: 10: 								[ clock==0 ] / turn off the tone
EC_565: 11: 								call( PostProc_R4 )
EC_565: 12: 					&&
EC_565: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_565: 14: 							[ true ] / the alarm is disarmed
EC_565: 15: 							call( PostProc_R8 )
EC_565: 16: 				||
EC_565: 17: 					NIL
EC_565: 18: 			||
EC_565: 19: 				NIL
EC_565: 20: 		||
EC_565: 21: 			NIL
EC_565: 22: 	||
EC_565: 23: 		NIL
EC_565: 24: ||
EC_565: 25: 	NIL

EC_565 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_565  --> EC_566 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 566 , H : 232 , step : 141 >" as EC_566 #LightBlue
EC_566: 1: par
EC_566: 2: 	par
EC_566: 3: 		par
EC_566: 4: 			par
EC_566: 5: 				par
EC_566: 6: 					par sync [the alarm is disarmed]
EC_566: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_566: 8: 							[ clock==0 ] / turn off the tone
EC_566: 9: 							call( PostProc_R4 )
EC_566: 10: 					&&
EC_566: 11: 						call( PostProc_R8 )
EC_566: 12: 				||
EC_566: 13: 					NIL
EC_566: 14: 			||
EC_566: 15: 				NIL
EC_566: 16: 		||
EC_566: 17: 			NIL
EC_566: 18: 	||
EC_566: 19: 		NIL
EC_566: 20: ||
EC_566: 21: 	NIL

EC_566 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_566  --> EC_567 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 567 , H : 233 , step : 0 >" as EC_567 #Pink
EC_567: 1: par
EC_567: 2: 	par
EC_567: 3: 		par
EC_567: 4: 			par
EC_567: 5: 				par
EC_567: 6: 					par sync [the alarm is disarmed]
EC_567: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_567: 8: 							[ clock==0 ] / turn off the tone
EC_567: 9: 							call( PostProc_R4 )
EC_567: 10: 					&&
EC_567: 11: 						NIL
EC_567: 12: 				||
EC_567: 13: 					NIL
EC_567: 14: 			||
EC_567: 15: 				NIL
EC_567: 16: 		||
EC_567: 17: 			NIL
EC_567: 18: 	||
EC_567: 19: 		NIL
EC_567: 20: ||
EC_567: 21: 	NIL

EC_567 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_567  --> EC_569 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 569 , H : 234 , step : 0 >" as EC_569 #Orange
EC_569: 1: par
EC_569: 2: 	par
EC_569: 3: 		par
EC_569: 4: 			par
EC_569: 5: 				par
EC_569: 6: 					par sync [the alarm is disarmed]
EC_569: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_569: 8: 							[ clock==0 ] / turn off the tone
EC_569: 9: 							call( PostProc_R4 )
EC_569: 10: 					&&
EC_569: 11: 						NIL
EC_569: 12: 				||
EC_569: 13: 					NIL
EC_569: 14: 			||
EC_569: 15: 				NIL
EC_569: 16: 		||
EC_569: 17: 			NIL
EC_569: 18: 	||
EC_569: 19: 		NIL
EC_569: 20: ||
EC_569: 21: 	NIL

EC_569 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_569  --> EC_570 : \lact [True] / META:REDUNDANCE:EC< id : 448 , H : 187 >

state "EC< id : 570 , H : 235 , step : 0 >" as EC_570 #Green
EC_570: 1: par
EC_570: 2: 	par
EC_570: 3: 		par
EC_570: 4: 			par
EC_570: 5: 				par
EC_570: 6: 					par sync [the alarm is disarmed]
EC_570: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_570: 8: 							[ clock==0 ] / turn off the tone
EC_570: 9: 							call( PostProc_R4 )
EC_570: 10: 					&&
EC_570: 11: 						NIL
EC_570: 12: 				||
EC_570: 13: 					NIL
EC_570: 14: 			||
EC_570: 15: 				NIL
EC_570: 16: 		||
EC_570: 17: 			NIL
EC_570: 18: 	||
EC_570: 19: 		NIL
EC_570: 20: ||
EC_570: 21: 	NIL

EC_570 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_466  --> EC_468 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 468 , H : 201 , step : 142 >" as EC_468 #LightBlue
EC_468: 1: par
EC_468: 2: 	par
EC_468: 3: 		par
EC_468: 4: 			par
EC_468: 5: 				par
EC_468: 6: 					par sync [the alarm is disarmed]
EC_468: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_468: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_468: 9: 							call( PostProc_R3 )
EC_468: 10: 						++
EC_468: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_468: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_468: 13: 								[ clock==0 ] / turn off the tone
EC_468: 14: 								call( PostProc_R5 )
EC_468: 15: 					&&
EC_468: 16: 						call( PostProc_R7 )
EC_468: 17: 				||
EC_468: 18: 					NIL
EC_468: 19: 			||
EC_468: 20: 				NIL
EC_468: 21: 		||
EC_468: 22: 			NIL
EC_468: 23: 	||
EC_468: 24: 		NIL
EC_468: 25: ||
EC_468: 26: 	NIL

EC_468 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_468  --> EC_571 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 571 , H : 202 , step : 0 >" as EC_571 #Pink
EC_571: 1: par
EC_571: 2: 	par
EC_571: 3: 		par
EC_571: 4: 			par
EC_571: 5: 				par
EC_571: 6: 					par sync [the alarm is disarmed]
EC_571: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_571: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_571: 9: 							call( PostProc_R3 )
EC_571: 10: 						++
EC_571: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_571: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_571: 13: 								[ clock==0 ] / turn off the tone
EC_571: 14: 								call( PostProc_R5 )
EC_571: 15: 					&&
EC_571: 16: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_571: 17: 							[ true ] / the alarm is disarmed
EC_571: 18: 							call( PostProc_R8 )
EC_571: 19: 				||
EC_571: 20: 					NIL
EC_571: 21: 			||
EC_571: 22: 				NIL
EC_571: 23: 		||
EC_571: 24: 			NIL
EC_571: 25: 	||
EC_571: 26: 		NIL
EC_571: 27: ||
EC_571: 28: 	NIL

EC_571 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_571  --> EC_573 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 573 , H : 203 , step : 0 >" as EC_573 #Orange
EC_573: 1: par
EC_573: 2: 	par
EC_573: 3: 		par
EC_573: 4: 			par
EC_573: 5: 				par
EC_573: 6: 					par sync [the alarm is disarmed]
EC_573: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_573: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_573: 9: 							call( PostProc_R3 )
EC_573: 10: 						++
EC_573: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_573: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_573: 13: 								[ clock==0 ] / turn off the tone
EC_573: 14: 								call( PostProc_R5 )
EC_573: 15: 					&&
EC_573: 16: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_573: 17: 							[ true ] / the alarm is disarmed
EC_573: 18: 							call( PostProc_R8 )
EC_573: 19: 				||
EC_573: 20: 					NIL
EC_573: 21: 			||
EC_573: 22: 				NIL
EC_573: 23: 		||
EC_573: 24: 			NIL
EC_573: 25: 	||
EC_573: 26: 		NIL
EC_573: 27: ||
EC_573: 28: 	NIL

EC_573 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_573  --> EC_574 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 574 , H : 204 , step : 143 >" as EC_574 #LightBlue
EC_574: 1: par
EC_574: 2: 	par
EC_574: 3: 		par
EC_574: 4: 			par
EC_574: 5: 				par
EC_574: 6: 					par sync [the alarm is disarmed]
EC_574: 7: 						call( PostProc_R3 )
EC_574: 8: 					&&
EC_574: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_574: 10: 							[ true ] / the alarm is disarmed
EC_574: 11: 							call( PostProc_R8 )
EC_574: 12: 				||
EC_574: 13: 					NIL
EC_574: 14: 			||
EC_574: 15: 				NIL
EC_574: 16: 		||
EC_574: 17: 			NIL
EC_574: 18: 	||
EC_574: 19: 		NIL
EC_574: 20: ||
EC_574: 21: 	NIL

EC_574 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_574  --> EC_576 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 576 , H : 205 , step : 0 >" as EC_576 #Pink
EC_576: 1: par
EC_576: 2: 	par
EC_576: 3: 		par
EC_576: 4: 			par
EC_576: 5: 				par
EC_576: 6: 					par sync [the alarm is disarmed]
EC_576: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_576: 8: 							[ true ] / the alarm is disarmed
EC_576: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_576: 10: 								[ clock==0 ] / turn off the tone
EC_576: 11: 								call( PostProc_R4 )
EC_576: 12: 					&&
EC_576: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_576: 14: 							[ true ] / the alarm is disarmed
EC_576: 15: 							call( PostProc_R8 )
EC_576: 16: 				||
EC_576: 17: 					NIL
EC_576: 18: 			||
EC_576: 19: 				NIL
EC_576: 20: 		||
EC_576: 21: 			NIL
EC_576: 22: 	||
EC_576: 23: 		NIL
EC_576: 24: ||
EC_576: 25: 	NIL

EC_576 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_576  --> EC_578 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 578 , H : 206 , step : 0 >" as EC_578 #Orange
EC_578: 1: par
EC_578: 2: 	par
EC_578: 3: 		par
EC_578: 4: 			par
EC_578: 5: 				par
EC_578: 6: 					par sync [the alarm is disarmed]
EC_578: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_578: 8: 							[ true ] / the alarm is disarmed
EC_578: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_578: 10: 								[ clock==0 ] / turn off the tone
EC_578: 11: 								call( PostProc_R4 )
EC_578: 12: 					&&
EC_578: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_578: 14: 							[ true ] / the alarm is disarmed
EC_578: 15: 							call( PostProc_R8 )
EC_578: 16: 				||
EC_578: 17: 					NIL
EC_578: 18: 			||
EC_578: 19: 				NIL
EC_578: 20: 		||
EC_578: 21: 			NIL
EC_578: 22: 	||
EC_578: 23: 		NIL
EC_578: 24: ||
EC_578: 25: 	NIL

EC_578 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_578  --> EC_579 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 579 , H : 207 , step : 144 >" as EC_579 #LightBlue
EC_579: 1: par
EC_579: 2: 	par
EC_579: 3: 		par
EC_579: 4: 			par
EC_579: 5: 				par
EC_579: 6: 					par sync [the alarm is disarmed]
EC_579: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_579: 8: 							[ clock==0 ] / turn off the tone
EC_579: 9: 							call( PostProc_R4 )
EC_579: 10: 					&&
EC_579: 11: 						call( PostProc_R8 )
EC_579: 12: 				||
EC_579: 13: 					NIL
EC_579: 14: 			||
EC_579: 15: 				NIL
EC_579: 16: 		||
EC_579: 17: 			NIL
EC_579: 18: 	||
EC_579: 19: 		NIL
EC_579: 20: ||
EC_579: 21: 	NIL

EC_579 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_579  --> EC_580 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 580 , H : 208 , step : 0 >" as EC_580 #Pink
EC_580: 1: par
EC_580: 2: 	par
EC_580: 3: 		par
EC_580: 4: 			par
EC_580: 5: 				par
EC_580: 6: 					par sync [the alarm is disarmed]
EC_580: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_580: 8: 							[ clock==0 ] / turn off the tone
EC_580: 9: 							call( PostProc_R4 )
EC_580: 10: 					&&
EC_580: 11: 						NIL
EC_580: 12: 				||
EC_580: 13: 					NIL
EC_580: 14: 			||
EC_580: 15: 				NIL
EC_580: 16: 		||
EC_580: 17: 			NIL
EC_580: 18: 	||
EC_580: 19: 		NIL
EC_580: 20: ||
EC_580: 21: 	NIL

EC_580 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_580  --> EC_582 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 582 , H : 209 , step : 0 >" as EC_582 #Orange
EC_582: 1: par
EC_582: 2: 	par
EC_582: 3: 		par
EC_582: 4: 			par
EC_582: 5: 				par
EC_582: 6: 					par sync [the alarm is disarmed]
EC_582: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_582: 8: 							[ clock==0 ] / turn off the tone
EC_582: 9: 							call( PostProc_R4 )
EC_582: 10: 					&&
EC_582: 11: 						NIL
EC_582: 12: 				||
EC_582: 13: 					NIL
EC_582: 14: 			||
EC_582: 15: 				NIL
EC_582: 16: 		||
EC_582: 17: 			NIL
EC_582: 18: 	||
EC_582: 19: 		NIL
EC_582: 20: ||
EC_582: 21: 	NIL

EC_582 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_582  --> EC_583 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [clock==0] / turn off the tone

state "EC< id : 583 , H : 210 , step : 145 >" as EC_583 #LightBlue
EC_583: 1: par
EC_583: 2: 	par
EC_583: 3: 		par
EC_583: 4: 			par
EC_583: 5: 				par
EC_583: 6: 					par
EC_583: 7: 						call( PostProc_R4 )
EC_583: 8: 					||
EC_583: 9: 						NIL
EC_583: 10: 				||
EC_583: 11: 					NIL
EC_583: 12: 			||
EC_583: 13: 				NIL
EC_583: 14: 		||
EC_583: 15: 			NIL
EC_583: 16: 	||
EC_583: 17: 		NIL
EC_583: 18: ||
EC_583: 19: 	NIL

EC_583 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_583  --> EC_584 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R4, Proc_R1

state "EC< id : 584 , H : 211 , step : 0 >" as EC_584 #Pink
EC_584: 1: par
EC_584: 2: 	par
EC_584: 3: 		par
EC_584: 4: 			par
EC_584: 5: 				par
EC_584: 6: 					par
EC_584: 7: 						alt invariant( [] ~> true )
EC_584: 8: 							[ true ] / the set button is pressed
EC_584: 9: 							alt invariant( [clock] ~> clock<=60 )
EC_584: 10: 								[ clock==60 ] / activate the alarm
EC_584: 11: 								call( PostProc_R1 )
EC_584: 12: 					||
EC_584: 13: 						NIL
EC_584: 14: 				||
EC_584: 15: 					NIL
EC_584: 16: 			||
EC_584: 17: 				NIL
EC_584: 18: 		||
EC_584: 19: 			NIL
EC_584: 20: 	||
EC_584: 21: 		NIL
EC_584: 22: ||
EC_584: 23: 	NIL

EC_584 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=0,
EC_584  --> EC_586 : inv [] => [true, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 586 , H : 212 , step : 0 >" as EC_586 #Orange
EC_586: 1: par
EC_586: 2: 	par
EC_586: 3: 		par
EC_586: 4: 			par
EC_586: 5: 				par
EC_586: 6: 					par
EC_586: 7: 						alt invariant( [] ~> true )
EC_586: 8: 							[ true ] / the set button is pressed
EC_586: 9: 							alt invariant( [clock] ~> clock<=60 )
EC_586: 10: 								[ clock==60 ] / activate the alarm
EC_586: 11: 								call( PostProc_R1 )
EC_586: 12: 					||
EC_586: 13: 						NIL
EC_586: 14: 				||
EC_586: 15: 					NIL
EC_586: 16: 			||
EC_586: 17: 				NIL
EC_586: 18: 		||
EC_586: 19: 			NIL
EC_586: 20: 	||
EC_586: 21: 		NIL
EC_586: 22: ||
EC_586: 23: 	NIL

EC_586 : DBM: R7_x_resp=R3_x_resp, R7_x_resp-clock<=60, clock-R7_x_resp<=0,\l   R3_x_resp-clock<=60, clock-R3_x_resp<=0,
EC_586  --> EC_587 : inv [] => [true, True, True, True, True, True, True]\lact [true] / the set button is pressed

state "EC< id : 587 , H : 213 , step : 146 >" as EC_587 #LightBlue
EC_587: 1: par
EC_587: 2: 	par
EC_587: 3: 		par
EC_587: 4: 			par
EC_587: 5: 				par
EC_587: 6: 					par
EC_587: 7: 						alt invariant( [clock] ~> clock<=60 )
EC_587: 8: 							[ clock==60 ] / activate the alarm
EC_587: 9: 							call( PostProc_R1 )
EC_587: 10: 					||
EC_587: 11: 						NIL
EC_587: 12: 				||
EC_587: 13: 					NIL
EC_587: 14: 			||
EC_587: 15: 				NIL
EC_587: 16: 		||
EC_587: 17: 			NIL
EC_587: 18: 	||
EC_587: 19: 		NIL
EC_587: 20: ||
EC_587: 21: 	NIL

EC_587 : DBM: R7_x_resp=R3_x_resp, R7_x_resp-clock<=60, clock-R7_x_resp<=0,\l   R3_x_resp-clock<=60, clock-R3_x_resp<=0,
EC_587  --> EC_589 : inv [clock] => [clock<=60, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 589 , H : 214 , step : 0 >" as EC_589 #Orange
EC_589: 1: par
EC_589: 2: 	par
EC_589: 3: 		par
EC_589: 4: 			par
EC_589: 5: 				par
EC_589: 6: 					par
EC_589: 7: 						alt invariant( [clock] ~> clock<=60 )
EC_589: 8: 							[ clock==60 ] / activate the alarm
EC_589: 9: 							call( PostProc_R1 )
EC_589: 10: 					||
EC_589: 11: 						NIL
EC_589: 12: 				||
EC_589: 13: 					NIL
EC_589: 14: 			||
EC_589: 15: 				NIL
EC_589: 16: 		||
EC_589: 17: 			NIL
EC_589: 18: 	||
EC_589: 19: 		NIL
EC_589: 20: ||
EC_589: 21: 	NIL

EC_589 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_589  --> EC_590 : \lact [True] / META:REDUNDANCE:EC< id : 10 , H : 7 >

state "EC< id : 590 , H : 215 , step : 0 >" as EC_590 #Green
EC_590: 1: par
EC_590: 2: 	par
EC_590: 3: 		par
EC_590: 4: 			par
EC_590: 5: 				par
EC_590: 6: 					par
EC_590: 7: 						alt invariant( [clock] ~> clock<=60 )
EC_590: 8: 							[ clock==60 ] / activate the alarm
EC_590: 9: 							call( PostProc_R1 )
EC_590: 10: 					||
EC_590: 11: 						NIL
EC_590: 12: 				||
EC_590: 13: 					NIL
EC_590: 14: 			||
EC_590: 15: 				NIL
EC_590: 16: 		||
EC_590: 17: 			NIL
EC_590: 18: 	||
EC_590: 19: 		NIL
EC_590: 20: ||
EC_590: 21: 	NIL

EC_590 : DBM: clock<=60, R7_x_resp=R3_x_resp, clock-R7_x_resp<=0,\l   clock-R3_x_resp<=0,
EC_466  --> EC_469 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 469 , H : 201 , step : 147 >" as EC_469 #LightBlue
EC_469: 1: par
EC_469: 2: 	par
EC_469: 3: 		par
EC_469: 4: 			par
EC_469: 5: 				par
EC_469: 6: 					par sync [the alarm is disarmed]
EC_469: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_469: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_469: 9: 							call( PostProc_R3 )
EC_469: 10: 						++
EC_469: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_469: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_469: 13: 								[ clock==0 ] / turn off the tone
EC_469: 14: 								call( PostProc_R5 )
EC_469: 15: 					&&
EC_469: 16: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_469: 17: 							[ clock==0 ] / alert the emergency center
EC_469: 18: 							call( PostProc_R9 )
EC_469: 19: 				||
EC_469: 20: 					NIL
EC_469: 21: 			||
EC_469: 22: 				NIL
EC_469: 23: 		||
EC_469: 24: 			NIL
EC_469: 25: 	||
EC_469: 26: 		NIL
EC_469: 27: ||
EC_469: 28: 	NIL

EC_469 : DBM: R7_x_resp=60, R3_x_resp=60, clock=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_469  --> EC_592 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 592 , H : 202 , step : 0 >" as EC_592 #Orange
EC_592: 1: par
EC_592: 2: 	par
EC_592: 3: 		par
EC_592: 4: 			par
EC_592: 5: 				par
EC_592: 6: 					par sync [the alarm is disarmed]
EC_592: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_592: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_592: 9: 							call( PostProc_R3 )
EC_592: 10: 						++
EC_592: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_592: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_592: 13: 								[ clock==0 ] / turn off the tone
EC_592: 14: 								call( PostProc_R5 )
EC_592: 15: 					&&
EC_592: 16: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_592: 17: 							[ clock==0 ] / alert the emergency center
EC_592: 18: 							call( PostProc_R9 )
EC_592: 19: 				||
EC_592: 20: 					NIL
EC_592: 21: 			||
EC_592: 22: 				NIL
EC_592: 23: 		||
EC_592: 24: 			NIL
EC_592: 25: 	||
EC_592: 26: 		NIL
EC_592: 27: ||
EC_592: 28: 	NIL

EC_592 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_592  --> EC_593 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 593 , H : 203 , step : 148 >" as EC_593 #LightBlue
EC_593: 1: par
EC_593: 2: 	par
EC_593: 3: 		par
EC_593: 4: 			par
EC_593: 5: 				par
EC_593: 6: 					par sync [the alarm is disarmed]
EC_593: 7: 						call( PostProc_R3 )
EC_593: 8: 					&&
EC_593: 9: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_593: 10: 							[ clock==0 ] / alert the emergency center
EC_593: 11: 							call( PostProc_R9 )
EC_593: 12: 				||
EC_593: 13: 					NIL
EC_593: 14: 			||
EC_593: 15: 				NIL
EC_593: 16: 		||
EC_593: 17: 			NIL
EC_593: 18: 	||
EC_593: 19: 		NIL
EC_593: 20: ||
EC_593: 21: 	NIL

EC_593 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_593  --> EC_596 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 596 , H : 204 , step : 0 >" as EC_596 #Pink
EC_596: 1: par
EC_596: 2: 	par
EC_596: 3: 		par
EC_596: 4: 			par
EC_596: 5: 				par
EC_596: 6: 					par sync [the alarm is disarmed]
EC_596: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_596: 8: 							[ true ] / the alarm is disarmed
EC_596: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_596: 10: 								[ clock==0 ] / turn off the tone
EC_596: 11: 								call( PostProc_R4 )
EC_596: 12: 					&&
EC_596: 13: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_596: 14: 							[ clock==0 ] / alert the emergency center
EC_596: 15: 							call( PostProc_R9 )
EC_596: 16: 				||
EC_596: 17: 					NIL
EC_596: 18: 			||
EC_596: 19: 				NIL
EC_596: 20: 		||
EC_596: 21: 			NIL
EC_596: 22: 	||
EC_596: 23: 		NIL
EC_596: 24: ||
EC_596: 25: 	NIL

EC_596 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_596  --> EC_598 : inv [] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 598 , H : 205 , step : 0 >" as EC_598 #Orange
EC_598: 1: par
EC_598: 2: 	par
EC_598: 3: 		par
EC_598: 4: 			par
EC_598: 5: 				par
EC_598: 6: 					par sync [the alarm is disarmed]
EC_598: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_598: 8: 							[ true ] / the alarm is disarmed
EC_598: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_598: 10: 								[ clock==0 ] / turn off the tone
EC_598: 11: 								call( PostProc_R4 )
EC_598: 12: 					&&
EC_598: 13: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_598: 14: 							[ clock==0 ] / alert the emergency center
EC_598: 15: 							call( PostProc_R9 )
EC_598: 16: 				||
EC_598: 17: 					NIL
EC_598: 18: 			||
EC_598: 19: 				NIL
EC_598: 20: 		||
EC_598: 21: 			NIL
EC_598: 22: 	||
EC_598: 23: 		NIL
EC_598: 24: ||
EC_598: 25: 	NIL

EC_598 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_598  --> EC_599 : inv [] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 599 , H : 206 , step : 149 >" as EC_599 #LightBlue
EC_599: 1: par
EC_599: 2: 	par
EC_599: 3: 		par
EC_599: 4: 			par
EC_599: 5: 				par
EC_599: 6: 					par sync [the alarm is disarmed]
EC_599: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_599: 8: 							[ true ] / the alarm is disarmed
EC_599: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_599: 10: 								[ clock==0 ] / turn off the tone
EC_599: 11: 								call( PostProc_R4 )
EC_599: 12: 					&&
EC_599: 13: 						call( PostProc_R9 )
EC_599: 14: 				||
EC_599: 15: 					NIL
EC_599: 16: 			||
EC_599: 17: 				NIL
EC_599: 18: 		||
EC_599: 19: 			NIL
EC_599: 20: 	||
EC_599: 21: 		NIL
EC_599: 22: ||
EC_599: 23: 	NIL

EC_599 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_599  --> EC_600 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 600 , H : 207 , step : 0 >" as EC_600 #Pink
EC_600: 1: par
EC_600: 2: 	par
EC_600: 3: 		par
EC_600: 4: 			par
EC_600: 5: 				par
EC_600: 6: 					par sync [the alarm is disarmed]
EC_600: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_600: 8: 							[ true ] / the alarm is disarmed
EC_600: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_600: 10: 								[ clock==0 ] / turn off the tone
EC_600: 11: 								call( PostProc_R4 )
EC_600: 12: 					&&
EC_600: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_600: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_600: 15: 							call( PostProc_R7 )
EC_600: 16: 						++
EC_600: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_600: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_600: 19: 								[ clock==0 ] / alert the emergency center
EC_600: 20: 								call( PostProc_R9 )
EC_600: 21: 				||
EC_600: 22: 					NIL
EC_600: 23: 			||
EC_600: 24: 				NIL
EC_600: 25: 		||
EC_600: 26: 			NIL
EC_600: 27: 	||
EC_600: 28: 		NIL
EC_600: 29: ||
EC_600: 30: 	NIL

EC_600 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_600  --> EC_602 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 602 , H : 208 , step : 0 >" as EC_602 #Orange
EC_602: 1: par
EC_602: 2: 	par
EC_602: 3: 		par
EC_602: 4: 			par
EC_602: 5: 				par
EC_602: 6: 					par sync [the alarm is disarmed]
EC_602: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_602: 8: 							[ true ] / the alarm is disarmed
EC_602: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_602: 10: 								[ clock==0 ] / turn off the tone
EC_602: 11: 								call( PostProc_R4 )
EC_602: 12: 					&&
EC_602: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_602: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_602: 15: 							call( PostProc_R7 )
EC_602: 16: 						++
EC_602: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_602: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_602: 19: 								[ clock==0 ] / alert the emergency center
EC_602: 20: 								call( PostProc_R9 )
EC_602: 21: 				||
EC_602: 22: 					NIL
EC_602: 23: 			||
EC_602: 24: 				NIL
EC_602: 25: 		||
EC_602: 26: 			NIL
EC_602: 27: 	||
EC_602: 28: 		NIL
EC_602: 29: ||
EC_602: 30: 	NIL

EC_602 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_602  --> EC_603 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 603 , H : 209 , step : 150 >" as EC_603 #LightBlue
EC_603: 1: par
EC_603: 2: 	par
EC_603: 3: 		par
EC_603: 4: 			par
EC_603: 5: 				par
EC_603: 6: 					par sync [the alarm is disarmed]
EC_603: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_603: 8: 							[ true ] / the alarm is disarmed
EC_603: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_603: 10: 								[ clock==0 ] / turn off the tone
EC_603: 11: 								call( PostProc_R4 )
EC_603: 12: 					&&
EC_603: 13: 						call( PostProc_R7 )
EC_603: 14: 				||
EC_603: 15: 					NIL
EC_603: 16: 			||
EC_603: 17: 				NIL
EC_603: 18: 		||
EC_603: 19: 			NIL
EC_603: 20: 	||
EC_603: 21: 		NIL
EC_603: 22: ||
EC_603: 23: 	NIL

EC_603 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_603  --> EC_605 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 605 , H : 210 , step : 0 >" as EC_605 #Pink
EC_605: 1: par
EC_605: 2: 	par
EC_605: 3: 		par
EC_605: 4: 			par
EC_605: 5: 				par
EC_605: 6: 					par sync [the alarm is disarmed]
EC_605: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_605: 8: 							[ true ] / the alarm is disarmed
EC_605: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_605: 10: 								[ clock==0 ] / turn off the tone
EC_605: 11: 								call( PostProc_R4 )
EC_605: 12: 					&&
EC_605: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_605: 14: 							[ true ] / the alarm is disarmed
EC_605: 15: 							call( PostProc_R8 )
EC_605: 16: 				||
EC_605: 17: 					NIL
EC_605: 18: 			||
EC_605: 19: 				NIL
EC_605: 20: 		||
EC_605: 21: 			NIL
EC_605: 22: 	||
EC_605: 23: 		NIL
EC_605: 24: ||
EC_605: 25: 	NIL

EC_605 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_605  --> EC_607 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 607 , H : 211 , step : 0 >" as EC_607 #Orange
EC_607: 1: par
EC_607: 2: 	par
EC_607: 3: 		par
EC_607: 4: 			par
EC_607: 5: 				par
EC_607: 6: 					par sync [the alarm is disarmed]
EC_607: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_607: 8: 							[ true ] / the alarm is disarmed
EC_607: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_607: 10: 								[ clock==0 ] / turn off the tone
EC_607: 11: 								call( PostProc_R4 )
EC_607: 12: 					&&
EC_607: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_607: 14: 							[ true ] / the alarm is disarmed
EC_607: 15: 							call( PostProc_R8 )
EC_607: 16: 				||
EC_607: 17: 					NIL
EC_607: 18: 			||
EC_607: 19: 				NIL
EC_607: 20: 		||
EC_607: 21: 			NIL
EC_607: 22: 	||
EC_607: 23: 		NIL
EC_607: 24: ||
EC_607: 25: 	NIL

EC_607 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_607  --> EC_608 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 608 , H : 212 , step : 151 >" as EC_608 #LightBlue
EC_608: 1: par
EC_608: 2: 	par
EC_608: 3: 		par
EC_608: 4: 			par
EC_608: 5: 				par
EC_608: 6: 					par sync [the alarm is disarmed]
EC_608: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_608: 8: 							[ clock==0 ] / turn off the tone
EC_608: 9: 							call( PostProc_R4 )
EC_608: 10: 					&&
EC_608: 11: 						call( PostProc_R8 )
EC_608: 12: 				||
EC_608: 13: 					NIL
EC_608: 14: 			||
EC_608: 15: 				NIL
EC_608: 16: 		||
EC_608: 17: 			NIL
EC_608: 18: 	||
EC_608: 19: 		NIL
EC_608: 20: ||
EC_608: 21: 	NIL

EC_608 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_608  --> EC_609 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 609 , H : 213 , step : 0 >" as EC_609 #Pink
EC_609: 1: par
EC_609: 2: 	par
EC_609: 3: 		par
EC_609: 4: 			par
EC_609: 5: 				par
EC_609: 6: 					par sync [the alarm is disarmed]
EC_609: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_609: 8: 							[ clock==0 ] / turn off the tone
EC_609: 9: 							call( PostProc_R4 )
EC_609: 10: 					&&
EC_609: 11: 						NIL
EC_609: 12: 				||
EC_609: 13: 					NIL
EC_609: 14: 			||
EC_609: 15: 				NIL
EC_609: 16: 		||
EC_609: 17: 			NIL
EC_609: 18: 	||
EC_609: 19: 		NIL
EC_609: 20: ||
EC_609: 21: 	NIL

EC_609 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_609  --> EC_611 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 611 , H : 214 , step : 0 >" as EC_611 #Orange
EC_611: 1: par
EC_611: 2: 	par
EC_611: 3: 		par
EC_611: 4: 			par
EC_611: 5: 				par
EC_611: 6: 					par sync [the alarm is disarmed]
EC_611: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_611: 8: 							[ clock==0 ] / turn off the tone
EC_611: 9: 							call( PostProc_R4 )
EC_611: 10: 					&&
EC_611: 11: 						NIL
EC_611: 12: 				||
EC_611: 13: 					NIL
EC_611: 14: 			||
EC_611: 15: 				NIL
EC_611: 16: 		||
EC_611: 17: 			NIL
EC_611: 18: 	||
EC_611: 19: 		NIL
EC_611: 20: ||
EC_611: 21: 	NIL

EC_611 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_611  --> EC_612 : \lact [True] / META:REDUNDANCE:EC< id : 60 , H : 29 >

state "EC< id : 612 , H : 215 , step : 0 >" as EC_612 #Green
EC_612: 1: par
EC_612: 2: 	par
EC_612: 3: 		par
EC_612: 4: 			par
EC_612: 5: 				par
EC_612: 6: 					par sync [the alarm is disarmed]
EC_612: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_612: 8: 							[ clock==0 ] / turn off the tone
EC_612: 9: 							call( PostProc_R4 )
EC_612: 10: 					&&
EC_612: 11: 						NIL
EC_612: 12: 				||
EC_612: 13: 					NIL
EC_612: 14: 			||
EC_612: 15: 				NIL
EC_612: 16: 		||
EC_612: 17: 			NIL
EC_612: 18: 	||
EC_612: 19: 		NIL
EC_612: 20: ||
EC_612: 21: 	NIL

EC_612 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_602  --> EC_604 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 604 , H : 209 , step : 152 >" as EC_604 #LightBlue
EC_604: 1: par
EC_604: 2: 	par
EC_604: 3: 		par
EC_604: 4: 			par
EC_604: 5: 				par
EC_604: 6: 					par sync [the alarm is disarmed]
EC_604: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_604: 8: 							[ true ] / the alarm is disarmed
EC_604: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_604: 10: 								[ clock==0 ] / turn off the tone
EC_604: 11: 								call( PostProc_R4 )
EC_604: 12: 					&&
EC_604: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_604: 14: 							[ clock==0 ] / alert the emergency center
EC_604: 15: 							call( PostProc_R9 )
EC_604: 16: 				||
EC_604: 17: 					NIL
EC_604: 18: 			||
EC_604: 19: 				NIL
EC_604: 20: 		||
EC_604: 21: 			NIL
EC_604: 22: 	||
EC_604: 23: 		NIL
EC_604: 24: ||
EC_604: 25: 	NIL

EC_604 : DBM: R7_x_resp=60, R3_x_resp=120, clock=60, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp=clock, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_604  --> EC_614 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 614 , H : 210 , step : 0 >" as EC_614 #Orange
EC_614: 1: par
EC_614: 2: 	par
EC_614: 3: 		par
EC_614: 4: 			par
EC_614: 5: 				par
EC_614: 6: 					par sync [the alarm is disarmed]
EC_614: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_614: 8: 							[ true ] / the alarm is disarmed
EC_614: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_614: 10: 								[ clock==0 ] / turn off the tone
EC_614: 11: 								call( PostProc_R4 )
EC_614: 12: 					&&
EC_614: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_614: 14: 							[ clock==0 ] / alert the emergency center
EC_614: 15: 							call( PostProc_R9 )
EC_614: 16: 				||
EC_614: 17: 					NIL
EC_614: 18: 			||
EC_614: 19: 				NIL
EC_614: 20: 		||
EC_614: 21: 			NIL
EC_614: 22: 	||
EC_614: 23: 		NIL
EC_614: 24: ||
EC_614: 25: 	NIL

EC_614 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_614  --> EC_615 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 615 , H : 211 , step : 153 >" as EC_615 #LightBlue
EC_615: 1: par
EC_615: 2: 	par
EC_615: 3: 		par
EC_615: 4: 			par
EC_615: 5: 				par
EC_615: 6: 					par sync [the alarm is disarmed]
EC_615: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_615: 8: 							[ true ] / the alarm is disarmed
EC_615: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_615: 10: 								[ clock==0 ] / turn off the tone
EC_615: 11: 								call( PostProc_R4 )
EC_615: 12: 					&&
EC_615: 13: 						call( PostProc_R9 )
EC_615: 14: 				||
EC_615: 15: 					NIL
EC_615: 16: 			||
EC_615: 17: 				NIL
EC_615: 18: 		||
EC_615: 19: 			NIL
EC_615: 20: 	||
EC_615: 21: 		NIL
EC_615: 22: ||
EC_615: 23: 	NIL

EC_615 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_615  --> EC_616 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 616 , H : 212 , step : 0 >" as EC_616 #Pink
EC_616: 1: par
EC_616: 2: 	par
EC_616: 3: 		par
EC_616: 4: 			par
EC_616: 5: 				par
EC_616: 6: 					par sync [the alarm is disarmed]
EC_616: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_616: 8: 							[ true ] / the alarm is disarmed
EC_616: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_616: 10: 								[ clock==0 ] / turn off the tone
EC_616: 11: 								call( PostProc_R4 )
EC_616: 12: 					&&
EC_616: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_616: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_616: 15: 							call( PostProc_R7 )
EC_616: 16: 						++
EC_616: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_616: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_616: 19: 								[ clock==0 ] / alert the emergency center
EC_616: 20: 								call( PostProc_R9 )
EC_616: 21: 				||
EC_616: 22: 					NIL
EC_616: 23: 			||
EC_616: 24: 				NIL
EC_616: 25: 		||
EC_616: 26: 			NIL
EC_616: 27: 	||
EC_616: 28: 		NIL
EC_616: 29: ||
EC_616: 30: 	NIL

EC_616 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_616  --> EC_618 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 618 , H : 213 , step : 0 >" as EC_618 #Orange
EC_618: 1: par
EC_618: 2: 	par
EC_618: 3: 		par
EC_618: 4: 			par
EC_618: 5: 				par
EC_618: 6: 					par sync [the alarm is disarmed]
EC_618: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_618: 8: 							[ true ] / the alarm is disarmed
EC_618: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_618: 10: 								[ clock==0 ] / turn off the tone
EC_618: 11: 								call( PostProc_R4 )
EC_618: 12: 					&&
EC_618: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_618: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_618: 15: 							call( PostProc_R7 )
EC_618: 16: 						++
EC_618: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_618: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_618: 19: 								[ clock==0 ] / alert the emergency center
EC_618: 20: 								call( PostProc_R9 )
EC_618: 21: 				||
EC_618: 22: 					NIL
EC_618: 23: 			||
EC_618: 24: 				NIL
EC_618: 25: 		||
EC_618: 26: 			NIL
EC_618: 27: 	||
EC_618: 28: 		NIL
EC_618: 29: ||
EC_618: 30: 	NIL

EC_618 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_618  --> EC_619 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 619 , H : 214 , step : 154 >" as EC_619 #LightBlue
EC_619: 1: par
EC_619: 2: 	par
EC_619: 3: 		par
EC_619: 4: 			par
EC_619: 5: 				par
EC_619: 6: 					par sync [the alarm is disarmed]
EC_619: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_619: 8: 							[ true ] / the alarm is disarmed
EC_619: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_619: 10: 								[ clock==0 ] / turn off the tone
EC_619: 11: 								call( PostProc_R4 )
EC_619: 12: 					&&
EC_619: 13: 						call( PostProc_R7 )
EC_619: 14: 				||
EC_619: 15: 					NIL
EC_619: 16: 			||
EC_619: 17: 				NIL
EC_619: 18: 		||
EC_619: 19: 			NIL
EC_619: 20: 	||
EC_619: 21: 		NIL
EC_619: 22: ||
EC_619: 23: 	NIL

EC_619 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_619  --> EC_621 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 621 , H : 215 , step : 0 >" as EC_621 #Pink
EC_621: 1: par
EC_621: 2: 	par
EC_621: 3: 		par
EC_621: 4: 			par
EC_621: 5: 				par
EC_621: 6: 					par sync [the alarm is disarmed]
EC_621: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_621: 8: 							[ true ] / the alarm is disarmed
EC_621: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_621: 10: 								[ clock==0 ] / turn off the tone
EC_621: 11: 								call( PostProc_R4 )
EC_621: 12: 					&&
EC_621: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_621: 14: 							[ true ] / the alarm is disarmed
EC_621: 15: 							call( PostProc_R8 )
EC_621: 16: 				||
EC_621: 17: 					NIL
EC_621: 18: 			||
EC_621: 19: 				NIL
EC_621: 20: 		||
EC_621: 21: 			NIL
EC_621: 22: 	||
EC_621: 23: 		NIL
EC_621: 24: ||
EC_621: 25: 	NIL

EC_621 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_621  --> EC_623 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 623 , H : 216 , step : 0 >" as EC_623 #Orange
EC_623: 1: par
EC_623: 2: 	par
EC_623: 3: 		par
EC_623: 4: 			par
EC_623: 5: 				par
EC_623: 6: 					par sync [the alarm is disarmed]
EC_623: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_623: 8: 							[ true ] / the alarm is disarmed
EC_623: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_623: 10: 								[ clock==0 ] / turn off the tone
EC_623: 11: 								call( PostProc_R4 )
EC_623: 12: 					&&
EC_623: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_623: 14: 							[ true ] / the alarm is disarmed
EC_623: 15: 							call( PostProc_R8 )
EC_623: 16: 				||
EC_623: 17: 					NIL
EC_623: 18: 			||
EC_623: 19: 				NIL
EC_623: 20: 		||
EC_623: 21: 			NIL
EC_623: 22: 	||
EC_623: 23: 		NIL
EC_623: 24: ||
EC_623: 25: 	NIL

EC_623 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_623  --> EC_624 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 624 , H : 217 , step : 155 >" as EC_624 #LightBlue
EC_624: 1: par
EC_624: 2: 	par
EC_624: 3: 		par
EC_624: 4: 			par
EC_624: 5: 				par
EC_624: 6: 					par sync [the alarm is disarmed]
EC_624: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_624: 8: 							[ clock==0 ] / turn off the tone
EC_624: 9: 							call( PostProc_R4 )
EC_624: 10: 					&&
EC_624: 11: 						call( PostProc_R8 )
EC_624: 12: 				||
EC_624: 13: 					NIL
EC_624: 14: 			||
EC_624: 15: 				NIL
EC_624: 16: 		||
EC_624: 17: 			NIL
EC_624: 18: 	||
EC_624: 19: 		NIL
EC_624: 20: ||
EC_624: 21: 	NIL

EC_624 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_624  --> EC_625 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 625 , H : 218 , step : 0 >" as EC_625 #Pink
EC_625: 1: par
EC_625: 2: 	par
EC_625: 3: 		par
EC_625: 4: 			par
EC_625: 5: 				par
EC_625: 6: 					par sync [the alarm is disarmed]
EC_625: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_625: 8: 							[ clock==0 ] / turn off the tone
EC_625: 9: 							call( PostProc_R4 )
EC_625: 10: 					&&
EC_625: 11: 						NIL
EC_625: 12: 				||
EC_625: 13: 					NIL
EC_625: 14: 			||
EC_625: 15: 				NIL
EC_625: 16: 		||
EC_625: 17: 			NIL
EC_625: 18: 	||
EC_625: 19: 		NIL
EC_625: 20: ||
EC_625: 21: 	NIL

EC_625 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_625  --> EC_627 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 627 , H : 219 , step : 0 >" as EC_627 #Orange
EC_627: 1: par
EC_627: 2: 	par
EC_627: 3: 		par
EC_627: 4: 			par
EC_627: 5: 				par
EC_627: 6: 					par sync [the alarm is disarmed]
EC_627: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_627: 8: 							[ clock==0 ] / turn off the tone
EC_627: 9: 							call( PostProc_R4 )
EC_627: 10: 					&&
EC_627: 11: 						NIL
EC_627: 12: 				||
EC_627: 13: 					NIL
EC_627: 14: 			||
EC_627: 15: 				NIL
EC_627: 16: 		||
EC_627: 17: 			NIL
EC_627: 18: 	||
EC_627: 19: 		NIL
EC_627: 20: ||
EC_627: 21: 	NIL

EC_627 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_627  --> EC_628 : \lact [True] / META:REDUNDANCE:EC< id : 133 , H : 61 >

state "EC< id : 628 , H : 220 , step : 0 >" as EC_628 #Green
EC_628: 1: par
EC_628: 2: 	par
EC_628: 3: 		par
EC_628: 4: 			par
EC_628: 5: 				par
EC_628: 6: 					par sync [the alarm is disarmed]
EC_628: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_628: 8: 							[ clock==0 ] / turn off the tone
EC_628: 9: 							call( PostProc_R4 )
EC_628: 10: 					&&
EC_628: 11: 						NIL
EC_628: 12: 				||
EC_628: 13: 					NIL
EC_628: 14: 			||
EC_628: 15: 				NIL
EC_628: 16: 		||
EC_628: 17: 			NIL
EC_628: 18: 	||
EC_628: 19: 		NIL
EC_628: 20: ||
EC_628: 21: 	NIL

EC_628 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_618  --> EC_620 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 620 , H : 214 , step : 156 >" as EC_620 #LightBlue
EC_620: 1: par
EC_620: 2: 	par
EC_620: 3: 		par
EC_620: 4: 			par
EC_620: 5: 				par
EC_620: 6: 					par sync [the alarm is disarmed]
EC_620: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_620: 8: 							[ true ] / the alarm is disarmed
EC_620: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_620: 10: 								[ clock==0 ] / turn off the tone
EC_620: 11: 								call( PostProc_R4 )
EC_620: 12: 					&&
EC_620: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_620: 14: 							[ clock==0 ] / alert the emergency center
EC_620: 15: 							call( PostProc_R9 )
EC_620: 16: 				||
EC_620: 17: 					NIL
EC_620: 18: 			||
EC_620: 19: 				NIL
EC_620: 20: 		||
EC_620: 21: 			NIL
EC_620: 22: 	||
EC_620: 23: 		NIL
EC_620: 24: ||
EC_620: 25: 	NIL

EC_620 : DBM: R7_x_resp=60, R3_x_resp=180, clock=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp=clock, R3_x_resp-clock<=120,\l   clock-R3_x_resp<=-120,
EC_620  --> EC_630 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 630 , H : 215 , step : 0 >" as EC_630 #Orange
EC_630: 1: par
EC_630: 2: 	par
EC_630: 3: 		par
EC_630: 4: 			par
EC_630: 5: 				par
EC_630: 6: 					par sync [the alarm is disarmed]
EC_630: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_630: 8: 							[ true ] / the alarm is disarmed
EC_630: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_630: 10: 								[ clock==0 ] / turn off the tone
EC_630: 11: 								call( PostProc_R4 )
EC_630: 12: 					&&
EC_630: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_630: 14: 							[ clock==0 ] / alert the emergency center
EC_630: 15: 							call( PostProc_R9 )
EC_630: 16: 				||
EC_630: 17: 					NIL
EC_630: 18: 			||
EC_630: 19: 				NIL
EC_630: 20: 		||
EC_630: 21: 			NIL
EC_630: 22: 	||
EC_630: 23: 		NIL
EC_630: 24: ||
EC_630: 25: 	NIL

EC_630 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_630  --> EC_631 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 631 , H : 216 , step : 157 >" as EC_631 #LightBlue
EC_631: 1: par
EC_631: 2: 	par
EC_631: 3: 		par
EC_631: 4: 			par
EC_631: 5: 				par
EC_631: 6: 					par sync [the alarm is disarmed]
EC_631: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_631: 8: 							[ true ] / the alarm is disarmed
EC_631: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_631: 10: 								[ clock==0 ] / turn off the tone
EC_631: 11: 								call( PostProc_R4 )
EC_631: 12: 					&&
EC_631: 13: 						call( PostProc_R9 )
EC_631: 14: 				||
EC_631: 15: 					NIL
EC_631: 16: 			||
EC_631: 17: 				NIL
EC_631: 18: 		||
EC_631: 19: 			NIL
EC_631: 20: 	||
EC_631: 21: 		NIL
EC_631: 22: ||
EC_631: 23: 	NIL

EC_631 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_631  --> EC_632 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 632 , H : 217 , step : 0 >" as EC_632 #Pink
EC_632: 1: par
EC_632: 2: 	par
EC_632: 3: 		par
EC_632: 4: 			par
EC_632: 5: 				par
EC_632: 6: 					par sync [the alarm is disarmed]
EC_632: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_632: 8: 							[ true ] / the alarm is disarmed
EC_632: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_632: 10: 								[ clock==0 ] / turn off the tone
EC_632: 11: 								call( PostProc_R4 )
EC_632: 12: 					&&
EC_632: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_632: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_632: 15: 							call( PostProc_R7 )
EC_632: 16: 						++
EC_632: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_632: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_632: 19: 								[ clock==0 ] / alert the emergency center
EC_632: 20: 								call( PostProc_R9 )
EC_632: 21: 				||
EC_632: 22: 					NIL
EC_632: 23: 			||
EC_632: 24: 				NIL
EC_632: 25: 		||
EC_632: 26: 			NIL
EC_632: 27: 	||
EC_632: 28: 		NIL
EC_632: 29: ||
EC_632: 30: 	NIL

EC_632 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_632  --> EC_634 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 634 , H : 218 , step : 0 >" as EC_634 #Orange
EC_634: 1: par
EC_634: 2: 	par
EC_634: 3: 		par
EC_634: 4: 			par
EC_634: 5: 				par
EC_634: 6: 					par sync [the alarm is disarmed]
EC_634: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_634: 8: 							[ true ] / the alarm is disarmed
EC_634: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_634: 10: 								[ clock==0 ] / turn off the tone
EC_634: 11: 								call( PostProc_R4 )
EC_634: 12: 					&&
EC_634: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_634: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_634: 15: 							call( PostProc_R7 )
EC_634: 16: 						++
EC_634: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_634: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_634: 19: 								[ clock==0 ] / alert the emergency center
EC_634: 20: 								call( PostProc_R9 )
EC_634: 21: 				||
EC_634: 22: 					NIL
EC_634: 23: 			||
EC_634: 24: 				NIL
EC_634: 25: 		||
EC_634: 26: 			NIL
EC_634: 27: 	||
EC_634: 28: 		NIL
EC_634: 29: ||
EC_634: 30: 	NIL

EC_634 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_634  --> EC_635 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 635 , H : 219 , step : 158 >" as EC_635 #LightBlue
EC_635: 1: par
EC_635: 2: 	par
EC_635: 3: 		par
EC_635: 4: 			par
EC_635: 5: 				par
EC_635: 6: 					par sync [the alarm is disarmed]
EC_635: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_635: 8: 							[ true ] / the alarm is disarmed
EC_635: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_635: 10: 								[ clock==0 ] / turn off the tone
EC_635: 11: 								call( PostProc_R4 )
EC_635: 12: 					&&
EC_635: 13: 						call( PostProc_R7 )
EC_635: 14: 				||
EC_635: 15: 					NIL
EC_635: 16: 			||
EC_635: 17: 				NIL
EC_635: 18: 		||
EC_635: 19: 			NIL
EC_635: 20: 	||
EC_635: 21: 		NIL
EC_635: 22: ||
EC_635: 23: 	NIL

EC_635 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_635  --> EC_637 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 637 , H : 220 , step : 0 >" as EC_637 #Pink
EC_637: 1: par
EC_637: 2: 	par
EC_637: 3: 		par
EC_637: 4: 			par
EC_637: 5: 				par
EC_637: 6: 					par sync [the alarm is disarmed]
EC_637: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_637: 8: 							[ true ] / the alarm is disarmed
EC_637: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_637: 10: 								[ clock==0 ] / turn off the tone
EC_637: 11: 								call( PostProc_R4 )
EC_637: 12: 					&&
EC_637: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_637: 14: 							[ true ] / the alarm is disarmed
EC_637: 15: 							call( PostProc_R8 )
EC_637: 16: 				||
EC_637: 17: 					NIL
EC_637: 18: 			||
EC_637: 19: 				NIL
EC_637: 20: 		||
EC_637: 21: 			NIL
EC_637: 22: 	||
EC_637: 23: 		NIL
EC_637: 24: ||
EC_637: 25: 	NIL

EC_637 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_637  --> EC_639 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 639 , H : 221 , step : 0 >" as EC_639 #Orange
EC_639: 1: par
EC_639: 2: 	par
EC_639: 3: 		par
EC_639: 4: 			par
EC_639: 5: 				par
EC_639: 6: 					par sync [the alarm is disarmed]
EC_639: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_639: 8: 							[ true ] / the alarm is disarmed
EC_639: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_639: 10: 								[ clock==0 ] / turn off the tone
EC_639: 11: 								call( PostProc_R4 )
EC_639: 12: 					&&
EC_639: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_639: 14: 							[ true ] / the alarm is disarmed
EC_639: 15: 							call( PostProc_R8 )
EC_639: 16: 				||
EC_639: 17: 					NIL
EC_639: 18: 			||
EC_639: 19: 				NIL
EC_639: 20: 		||
EC_639: 21: 			NIL
EC_639: 22: 	||
EC_639: 23: 		NIL
EC_639: 24: ||
EC_639: 25: 	NIL

EC_639 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_639  --> EC_640 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 640 , H : 222 , step : 159 >" as EC_640 #LightBlue
EC_640: 1: par
EC_640: 2: 	par
EC_640: 3: 		par
EC_640: 4: 			par
EC_640: 5: 				par
EC_640: 6: 					par sync [the alarm is disarmed]
EC_640: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_640: 8: 							[ clock==0 ] / turn off the tone
EC_640: 9: 							call( PostProc_R4 )
EC_640: 10: 					&&
EC_640: 11: 						call( PostProc_R8 )
EC_640: 12: 				||
EC_640: 13: 					NIL
EC_640: 14: 			||
EC_640: 15: 				NIL
EC_640: 16: 		||
EC_640: 17: 			NIL
EC_640: 18: 	||
EC_640: 19: 		NIL
EC_640: 20: ||
EC_640: 21: 	NIL

EC_640 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_640  --> EC_641 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 641 , H : 223 , step : 0 >" as EC_641 #Pink
EC_641: 1: par
EC_641: 2: 	par
EC_641: 3: 		par
EC_641: 4: 			par
EC_641: 5: 				par
EC_641: 6: 					par sync [the alarm is disarmed]
EC_641: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_641: 8: 							[ clock==0 ] / turn off the tone
EC_641: 9: 							call( PostProc_R4 )
EC_641: 10: 					&&
EC_641: 11: 						NIL
EC_641: 12: 				||
EC_641: 13: 					NIL
EC_641: 14: 			||
EC_641: 15: 				NIL
EC_641: 16: 		||
EC_641: 17: 			NIL
EC_641: 18: 	||
EC_641: 19: 		NIL
EC_641: 20: ||
EC_641: 21: 	NIL

EC_641 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_641  --> EC_643 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 643 , H : 224 , step : 0 >" as EC_643 #Orange
EC_643: 1: par
EC_643: 2: 	par
EC_643: 3: 		par
EC_643: 4: 			par
EC_643: 5: 				par
EC_643: 6: 					par sync [the alarm is disarmed]
EC_643: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_643: 8: 							[ clock==0 ] / turn off the tone
EC_643: 9: 							call( PostProc_R4 )
EC_643: 10: 					&&
EC_643: 11: 						NIL
EC_643: 12: 				||
EC_643: 13: 					NIL
EC_643: 14: 			||
EC_643: 15: 				NIL
EC_643: 16: 		||
EC_643: 17: 			NIL
EC_643: 18: 	||
EC_643: 19: 		NIL
EC_643: 20: ||
EC_643: 21: 	NIL

EC_643 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_643  --> EC_644 : \lact [True] / META:REDUNDANCE:EC< id : 222 , H : 98 >

state "EC< id : 644 , H : 225 , step : 0 >" as EC_644 #Green
EC_644: 1: par
EC_644: 2: 	par
EC_644: 3: 		par
EC_644: 4: 			par
EC_644: 5: 				par
EC_644: 6: 					par sync [the alarm is disarmed]
EC_644: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_644: 8: 							[ clock==0 ] / turn off the tone
EC_644: 9: 							call( PostProc_R4 )
EC_644: 10: 					&&
EC_644: 11: 						NIL
EC_644: 12: 				||
EC_644: 13: 					NIL
EC_644: 14: 			||
EC_644: 15: 				NIL
EC_644: 16: 		||
EC_644: 17: 			NIL
EC_644: 18: 	||
EC_644: 19: 		NIL
EC_644: 20: ||
EC_644: 21: 	NIL

EC_644 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_634  --> EC_636 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 636 , H : 219 , step : 160 >" as EC_636 #LightBlue
EC_636: 1: par
EC_636: 2: 	par
EC_636: 3: 		par
EC_636: 4: 			par
EC_636: 5: 				par
EC_636: 6: 					par sync [the alarm is disarmed]
EC_636: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_636: 8: 							[ true ] / the alarm is disarmed
EC_636: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_636: 10: 								[ clock==0 ] / turn off the tone
EC_636: 11: 								call( PostProc_R4 )
EC_636: 12: 					&&
EC_636: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_636: 14: 							[ clock==0 ] / alert the emergency center
EC_636: 15: 							call( PostProc_R9 )
EC_636: 16: 				||
EC_636: 17: 					NIL
EC_636: 18: 			||
EC_636: 19: 				NIL
EC_636: 20: 		||
EC_636: 21: 			NIL
EC_636: 22: 	||
EC_636: 23: 		NIL
EC_636: 24: ||
EC_636: 25: 	NIL

EC_636 : DBM: R7_x_resp=60, R3_x_resp=240, clock=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp=clock, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-180,
EC_636  --> EC_646 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 646 , H : 220 , step : 0 >" as EC_646 #Orange
EC_646: 1: par
EC_646: 2: 	par
EC_646: 3: 		par
EC_646: 4: 			par
EC_646: 5: 				par
EC_646: 6: 					par sync [the alarm is disarmed]
EC_646: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_646: 8: 							[ true ] / the alarm is disarmed
EC_646: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_646: 10: 								[ clock==0 ] / turn off the tone
EC_646: 11: 								call( PostProc_R4 )
EC_646: 12: 					&&
EC_646: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_646: 14: 							[ clock==0 ] / alert the emergency center
EC_646: 15: 							call( PostProc_R9 )
EC_646: 16: 				||
EC_646: 17: 					NIL
EC_646: 18: 			||
EC_646: 19: 				NIL
EC_646: 20: 		||
EC_646: 21: 			NIL
EC_646: 22: 	||
EC_646: 23: 		NIL
EC_646: 24: ||
EC_646: 25: 	NIL

EC_646 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_646  --> EC_647 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 647 , H : 221 , step : 161 >" as EC_647 #LightBlue
EC_647: 1: par
EC_647: 2: 	par
EC_647: 3: 		par
EC_647: 4: 			par
EC_647: 5: 				par
EC_647: 6: 					par sync [the alarm is disarmed]
EC_647: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_647: 8: 							[ true ] / the alarm is disarmed
EC_647: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_647: 10: 								[ clock==0 ] / turn off the tone
EC_647: 11: 								call( PostProc_R4 )
EC_647: 12: 					&&
EC_647: 13: 						call( PostProc_R9 )
EC_647: 14: 				||
EC_647: 15: 					NIL
EC_647: 16: 			||
EC_647: 17: 				NIL
EC_647: 18: 		||
EC_647: 19: 			NIL
EC_647: 20: 	||
EC_647: 21: 		NIL
EC_647: 22: ||
EC_647: 23: 	NIL

EC_647 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_647  --> EC_648 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 648 , H : 222 , step : 0 >" as EC_648 #Pink
EC_648: 1: par
EC_648: 2: 	par
EC_648: 3: 		par
EC_648: 4: 			par
EC_648: 5: 				par
EC_648: 6: 					par sync [the alarm is disarmed]
EC_648: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_648: 8: 							[ true ] / the alarm is disarmed
EC_648: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_648: 10: 								[ clock==0 ] / turn off the tone
EC_648: 11: 								call( PostProc_R4 )
EC_648: 12: 					&&
EC_648: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_648: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_648: 15: 							call( PostProc_R7 )
EC_648: 16: 						++
EC_648: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_648: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_648: 19: 								[ clock==0 ] / alert the emergency center
EC_648: 20: 								call( PostProc_R9 )
EC_648: 21: 				||
EC_648: 22: 					NIL
EC_648: 23: 			||
EC_648: 24: 				NIL
EC_648: 25: 		||
EC_648: 26: 			NIL
EC_648: 27: 	||
EC_648: 28: 		NIL
EC_648: 29: ||
EC_648: 30: 	NIL

EC_648 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_648  --> EC_650 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 650 , H : 223 , step : 0 >" as EC_650 #Orange
EC_650: 1: par
EC_650: 2: 	par
EC_650: 3: 		par
EC_650: 4: 			par
EC_650: 5: 				par
EC_650: 6: 					par sync [the alarm is disarmed]
EC_650: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_650: 8: 							[ true ] / the alarm is disarmed
EC_650: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_650: 10: 								[ clock==0 ] / turn off the tone
EC_650: 11: 								call( PostProc_R4 )
EC_650: 12: 					&&
EC_650: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_650: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_650: 15: 							call( PostProc_R7 )
EC_650: 16: 						++
EC_650: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_650: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_650: 19: 								[ clock==0 ] / alert the emergency center
EC_650: 20: 								call( PostProc_R9 )
EC_650: 21: 				||
EC_650: 22: 					NIL
EC_650: 23: 			||
EC_650: 24: 				NIL
EC_650: 25: 		||
EC_650: 26: 			NIL
EC_650: 27: 	||
EC_650: 28: 		NIL
EC_650: 29: ||
EC_650: 30: 	NIL

EC_650 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_650  --> EC_651 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 651 , H : 224 , step : 162 >" as EC_651 #LightBlue
EC_651: 1: par
EC_651: 2: 	par
EC_651: 3: 		par
EC_651: 4: 			par
EC_651: 5: 				par
EC_651: 6: 					par sync [the alarm is disarmed]
EC_651: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_651: 8: 							[ true ] / the alarm is disarmed
EC_651: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_651: 10: 								[ clock==0 ] / turn off the tone
EC_651: 11: 								call( PostProc_R4 )
EC_651: 12: 					&&
EC_651: 13: 						call( PostProc_R7 )
EC_651: 14: 				||
EC_651: 15: 					NIL
EC_651: 16: 			||
EC_651: 17: 				NIL
EC_651: 18: 		||
EC_651: 19: 			NIL
EC_651: 20: 	||
EC_651: 21: 		NIL
EC_651: 22: ||
EC_651: 23: 	NIL

EC_651 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_651  --> EC_653 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 653 , H : 225 , step : 0 >" as EC_653 #Pink
EC_653: 1: par
EC_653: 2: 	par
EC_653: 3: 		par
EC_653: 4: 			par
EC_653: 5: 				par
EC_653: 6: 					par sync [the alarm is disarmed]
EC_653: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_653: 8: 							[ true ] / the alarm is disarmed
EC_653: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_653: 10: 								[ clock==0 ] / turn off the tone
EC_653: 11: 								call( PostProc_R4 )
EC_653: 12: 					&&
EC_653: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_653: 14: 							[ true ] / the alarm is disarmed
EC_653: 15: 							call( PostProc_R8 )
EC_653: 16: 				||
EC_653: 17: 					NIL
EC_653: 18: 			||
EC_653: 19: 				NIL
EC_653: 20: 		||
EC_653: 21: 			NIL
EC_653: 22: 	||
EC_653: 23: 		NIL
EC_653: 24: ||
EC_653: 25: 	NIL

EC_653 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_653  --> EC_655 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 655 , H : 226 , step : 0 >" as EC_655 #Orange
EC_655: 1: par
EC_655: 2: 	par
EC_655: 3: 		par
EC_655: 4: 			par
EC_655: 5: 				par
EC_655: 6: 					par sync [the alarm is disarmed]
EC_655: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_655: 8: 							[ true ] / the alarm is disarmed
EC_655: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_655: 10: 								[ clock==0 ] / turn off the tone
EC_655: 11: 								call( PostProc_R4 )
EC_655: 12: 					&&
EC_655: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_655: 14: 							[ true ] / the alarm is disarmed
EC_655: 15: 							call( PostProc_R8 )
EC_655: 16: 				||
EC_655: 17: 					NIL
EC_655: 18: 			||
EC_655: 19: 				NIL
EC_655: 20: 		||
EC_655: 21: 			NIL
EC_655: 22: 	||
EC_655: 23: 		NIL
EC_655: 24: ||
EC_655: 25: 	NIL

EC_655 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_655  --> EC_656 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 656 , H : 227 , step : 163 >" as EC_656 #LightBlue
EC_656: 1: par
EC_656: 2: 	par
EC_656: 3: 		par
EC_656: 4: 			par
EC_656: 5: 				par
EC_656: 6: 					par sync [the alarm is disarmed]
EC_656: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_656: 8: 							[ clock==0 ] / turn off the tone
EC_656: 9: 							call( PostProc_R4 )
EC_656: 10: 					&&
EC_656: 11: 						call( PostProc_R8 )
EC_656: 12: 				||
EC_656: 13: 					NIL
EC_656: 14: 			||
EC_656: 15: 				NIL
EC_656: 16: 		||
EC_656: 17: 			NIL
EC_656: 18: 	||
EC_656: 19: 		NIL
EC_656: 20: ||
EC_656: 21: 	NIL

EC_656 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_656  --> EC_657 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 657 , H : 228 , step : 0 >" as EC_657 #Pink
EC_657: 1: par
EC_657: 2: 	par
EC_657: 3: 		par
EC_657: 4: 			par
EC_657: 5: 				par
EC_657: 6: 					par sync [the alarm is disarmed]
EC_657: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_657: 8: 							[ clock==0 ] / turn off the tone
EC_657: 9: 							call( PostProc_R4 )
EC_657: 10: 					&&
EC_657: 11: 						NIL
EC_657: 12: 				||
EC_657: 13: 					NIL
EC_657: 14: 			||
EC_657: 15: 				NIL
EC_657: 16: 		||
EC_657: 17: 			NIL
EC_657: 18: 	||
EC_657: 19: 		NIL
EC_657: 20: ||
EC_657: 21: 	NIL

EC_657 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_657  --> EC_659 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 659 , H : 229 , step : 0 >" as EC_659 #Orange
EC_659: 1: par
EC_659: 2: 	par
EC_659: 3: 		par
EC_659: 4: 			par
EC_659: 5: 				par
EC_659: 6: 					par sync [the alarm is disarmed]
EC_659: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_659: 8: 							[ clock==0 ] / turn off the tone
EC_659: 9: 							call( PostProc_R4 )
EC_659: 10: 					&&
EC_659: 11: 						NIL
EC_659: 12: 				||
EC_659: 13: 					NIL
EC_659: 14: 			||
EC_659: 15: 				NIL
EC_659: 16: 		||
EC_659: 17: 			NIL
EC_659: 18: 	||
EC_659: 19: 		NIL
EC_659: 20: ||
EC_659: 21: 	NIL

EC_659 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_659  --> EC_660 : \lact [True] / META:REDUNDANCE:EC< id : 327 , H : 140 >

state "EC< id : 660 , H : 230 , step : 0 >" as EC_660 #Green
EC_660: 1: par
EC_660: 2: 	par
EC_660: 3: 		par
EC_660: 4: 			par
EC_660: 5: 				par
EC_660: 6: 					par sync [the alarm is disarmed]
EC_660: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_660: 8: 							[ clock==0 ] / turn off the tone
EC_660: 9: 							call( PostProc_R4 )
EC_660: 10: 					&&
EC_660: 11: 						NIL
EC_660: 12: 				||
EC_660: 13: 					NIL
EC_660: 14: 			||
EC_660: 15: 				NIL
EC_660: 16: 		||
EC_660: 17: 			NIL
EC_660: 18: 	||
EC_660: 19: 		NIL
EC_660: 20: ||
EC_660: 21: 	NIL

EC_660 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_650  --> EC_652 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 652 , H : 224 , step : 164 >" as EC_652 #LightBlue
EC_652: 1: par
EC_652: 2: 	par
EC_652: 3: 		par
EC_652: 4: 			par
EC_652: 5: 				par
EC_652: 6: 					par sync [the alarm is disarmed]
EC_652: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_652: 8: 							[ true ] / the alarm is disarmed
EC_652: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_652: 10: 								[ clock==0 ] / turn off the tone
EC_652: 11: 								call( PostProc_R4 )
EC_652: 12: 					&&
EC_652: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_652: 14: 							[ clock==0 ] / alert the emergency center
EC_652: 15: 							call( PostProc_R9 )
EC_652: 16: 				||
EC_652: 17: 					NIL
EC_652: 18: 			||
EC_652: 19: 				NIL
EC_652: 20: 		||
EC_652: 21: 			NIL
EC_652: 22: 	||
EC_652: 23: 		NIL
EC_652: 24: ||
EC_652: 25: 	NIL

EC_652 : DBM: R7_x_resp=60, R3_x_resp=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp=clock, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-240,
EC_652  --> EC_662 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 662 , H : 225 , step : 0 >" as EC_662 #Orange
EC_662: 1: par
EC_662: 2: 	par
EC_662: 3: 		par
EC_662: 4: 			par
EC_662: 5: 				par
EC_662: 6: 					par sync [the alarm is disarmed]
EC_662: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_662: 8: 							[ true ] / the alarm is disarmed
EC_662: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_662: 10: 								[ clock==0 ] / turn off the tone
EC_662: 11: 								call( PostProc_R4 )
EC_662: 12: 					&&
EC_662: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_662: 14: 							[ clock==0 ] / alert the emergency center
EC_662: 15: 							call( PostProc_R9 )
EC_662: 16: 				||
EC_662: 17: 					NIL
EC_662: 18: 			||
EC_662: 19: 				NIL
EC_662: 20: 		||
EC_662: 21: 			NIL
EC_662: 22: 	||
EC_662: 23: 		NIL
EC_662: 24: ||
EC_662: 25: 	NIL

EC_662 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_662  --> EC_663 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 663 , H : 226 , step : 165 >" as EC_663 #LightBlue
EC_663: 1: par
EC_663: 2: 	par
EC_663: 3: 		par
EC_663: 4: 			par
EC_663: 5: 				par
EC_663: 6: 					par sync [the alarm is disarmed]
EC_663: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_663: 8: 							[ true ] / the alarm is disarmed
EC_663: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_663: 10: 								[ clock==0 ] / turn off the tone
EC_663: 11: 								call( PostProc_R4 )
EC_663: 12: 					&&
EC_663: 13: 						call( PostProc_R9 )
EC_663: 14: 				||
EC_663: 15: 					NIL
EC_663: 16: 			||
EC_663: 17: 				NIL
EC_663: 18: 		||
EC_663: 19: 			NIL
EC_663: 20: 	||
EC_663: 21: 		NIL
EC_663: 22: ||
EC_663: 23: 	NIL

EC_663 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_663  --> EC_664 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 664 , H : 227 , step : 0 >" as EC_664 #Pink
EC_664: 1: par
EC_664: 2: 	par
EC_664: 3: 		par
EC_664: 4: 			par
EC_664: 5: 				par
EC_664: 6: 					par sync [the alarm is disarmed]
EC_664: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_664: 8: 							[ true ] / the alarm is disarmed
EC_664: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_664: 10: 								[ clock==0 ] / turn off the tone
EC_664: 11: 								call( PostProc_R4 )
EC_664: 12: 					&&
EC_664: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_664: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_664: 15: 							call( PostProc_R7 )
EC_664: 16: 						++
EC_664: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_664: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_664: 19: 								[ clock==0 ] / alert the emergency center
EC_664: 20: 								call( PostProc_R9 )
EC_664: 21: 				||
EC_664: 22: 					NIL
EC_664: 23: 			||
EC_664: 24: 				NIL
EC_664: 25: 		||
EC_664: 26: 			NIL
EC_664: 27: 	||
EC_664: 28: 		NIL
EC_664: 29: ||
EC_664: 30: 	NIL

EC_664 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_664  --> EC_666 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 666 , H : 228 , step : 0 >" as EC_666 #Orange
EC_666: 1: par
EC_666: 2: 	par
EC_666: 3: 		par
EC_666: 4: 			par
EC_666: 5: 				par
EC_666: 6: 					par sync [the alarm is disarmed]
EC_666: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_666: 8: 							[ true ] / the alarm is disarmed
EC_666: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_666: 10: 								[ clock==0 ] / turn off the tone
EC_666: 11: 								call( PostProc_R4 )
EC_666: 12: 					&&
EC_666: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_666: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_666: 15: 							call( PostProc_R7 )
EC_666: 16: 						++
EC_666: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_666: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_666: 19: 								[ clock==0 ] / alert the emergency center
EC_666: 20: 								call( PostProc_R9 )
EC_666: 21: 				||
EC_666: 22: 					NIL
EC_666: 23: 			||
EC_666: 24: 				NIL
EC_666: 25: 		||
EC_666: 26: 			NIL
EC_666: 27: 	||
EC_666: 28: 		NIL
EC_666: 29: ||
EC_666: 30: 	NIL

EC_666 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_666  --> EC_667 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 667 , H : 229 , step : 166 >" as EC_667 #LightBlue
EC_667: 1: par
EC_667: 2: 	par
EC_667: 3: 		par
EC_667: 4: 			par
EC_667: 5: 				par
EC_667: 6: 					par sync [the alarm is disarmed]
EC_667: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_667: 8: 							[ true ] / the alarm is disarmed
EC_667: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_667: 10: 								[ clock==0 ] / turn off the tone
EC_667: 11: 								call( PostProc_R4 )
EC_667: 12: 					&&
EC_667: 13: 						call( PostProc_R7 )
EC_667: 14: 				||
EC_667: 15: 					NIL
EC_667: 16: 			||
EC_667: 17: 				NIL
EC_667: 18: 		||
EC_667: 19: 			NIL
EC_667: 20: 	||
EC_667: 21: 		NIL
EC_667: 22: ||
EC_667: 23: 	NIL

EC_667 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_667  --> EC_669 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 669 , H : 230 , step : 0 >" as EC_669 #Pink
EC_669: 1: par
EC_669: 2: 	par
EC_669: 3: 		par
EC_669: 4: 			par
EC_669: 5: 				par
EC_669: 6: 					par sync [the alarm is disarmed]
EC_669: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_669: 8: 							[ true ] / the alarm is disarmed
EC_669: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_669: 10: 								[ clock==0 ] / turn off the tone
EC_669: 11: 								call( PostProc_R4 )
EC_669: 12: 					&&
EC_669: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_669: 14: 							[ true ] / the alarm is disarmed
EC_669: 15: 							call( PostProc_R8 )
EC_669: 16: 				||
EC_669: 17: 					NIL
EC_669: 18: 			||
EC_669: 19: 				NIL
EC_669: 20: 		||
EC_669: 21: 			NIL
EC_669: 22: 	||
EC_669: 23: 		NIL
EC_669: 24: ||
EC_669: 25: 	NIL

EC_669 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_669  --> EC_671 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 671 , H : 231 , step : 0 >" as EC_671 #Orange
EC_671: 1: par
EC_671: 2: 	par
EC_671: 3: 		par
EC_671: 4: 			par
EC_671: 5: 				par
EC_671: 6: 					par sync [the alarm is disarmed]
EC_671: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_671: 8: 							[ true ] / the alarm is disarmed
EC_671: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_671: 10: 								[ clock==0 ] / turn off the tone
EC_671: 11: 								call( PostProc_R4 )
EC_671: 12: 					&&
EC_671: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_671: 14: 							[ true ] / the alarm is disarmed
EC_671: 15: 							call( PostProc_R8 )
EC_671: 16: 				||
EC_671: 17: 					NIL
EC_671: 18: 			||
EC_671: 19: 				NIL
EC_671: 20: 		||
EC_671: 21: 			NIL
EC_671: 22: 	||
EC_671: 23: 		NIL
EC_671: 24: ||
EC_671: 25: 	NIL

EC_671 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_671  --> EC_672 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 672 , H : 232 , step : 167 >" as EC_672 #LightBlue
EC_672: 1: par
EC_672: 2: 	par
EC_672: 3: 		par
EC_672: 4: 			par
EC_672: 5: 				par
EC_672: 6: 					par sync [the alarm is disarmed]
EC_672: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_672: 8: 							[ clock==0 ] / turn off the tone
EC_672: 9: 							call( PostProc_R4 )
EC_672: 10: 					&&
EC_672: 11: 						call( PostProc_R8 )
EC_672: 12: 				||
EC_672: 13: 					NIL
EC_672: 14: 			||
EC_672: 15: 				NIL
EC_672: 16: 		||
EC_672: 17: 			NIL
EC_672: 18: 	||
EC_672: 19: 		NIL
EC_672: 20: ||
EC_672: 21: 	NIL

EC_672 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_672  --> EC_673 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 673 , H : 233 , step : 0 >" as EC_673 #Pink
EC_673: 1: par
EC_673: 2: 	par
EC_673: 3: 		par
EC_673: 4: 			par
EC_673: 5: 				par
EC_673: 6: 					par sync [the alarm is disarmed]
EC_673: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_673: 8: 							[ clock==0 ] / turn off the tone
EC_673: 9: 							call( PostProc_R4 )
EC_673: 10: 					&&
EC_673: 11: 						NIL
EC_673: 12: 				||
EC_673: 13: 					NIL
EC_673: 14: 			||
EC_673: 15: 				NIL
EC_673: 16: 		||
EC_673: 17: 			NIL
EC_673: 18: 	||
EC_673: 19: 		NIL
EC_673: 20: ||
EC_673: 21: 	NIL

EC_673 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_673  --> EC_675 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 675 , H : 234 , step : 0 >" as EC_675 #Orange
EC_675: 1: par
EC_675: 2: 	par
EC_675: 3: 		par
EC_675: 4: 			par
EC_675: 5: 				par
EC_675: 6: 					par sync [the alarm is disarmed]
EC_675: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_675: 8: 							[ clock==0 ] / turn off the tone
EC_675: 9: 							call( PostProc_R4 )
EC_675: 10: 					&&
EC_675: 11: 						NIL
EC_675: 12: 				||
EC_675: 13: 					NIL
EC_675: 14: 			||
EC_675: 15: 				NIL
EC_675: 16: 		||
EC_675: 17: 			NIL
EC_675: 18: 	||
EC_675: 19: 		NIL
EC_675: 20: ||
EC_675: 21: 	NIL

EC_675 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_675  --> EC_676 : \lact [True] / META:REDUNDANCE:EC< id : 448 , H : 187 >

state "EC< id : 676 , H : 235 , step : 0 >" as EC_676 #Green
EC_676: 1: par
EC_676: 2: 	par
EC_676: 3: 		par
EC_676: 4: 			par
EC_676: 5: 				par
EC_676: 6: 					par sync [the alarm is disarmed]
EC_676: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_676: 8: 							[ clock==0 ] / turn off the tone
EC_676: 9: 							call( PostProc_R4 )
EC_676: 10: 					&&
EC_676: 11: 						NIL
EC_676: 12: 				||
EC_676: 13: 					NIL
EC_676: 14: 			||
EC_676: 15: 				NIL
EC_676: 16: 		||
EC_676: 17: 			NIL
EC_676: 18: 	||
EC_676: 19: 		NIL
EC_676: 20: ||
EC_676: 21: 	NIL

EC_676 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_592  --> EC_594 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 594 , H : 203 , step : 168 >" as EC_594 #LightBlue
EC_594: 1: par
EC_594: 2: 	par
EC_594: 3: 		par
EC_594: 4: 			par
EC_594: 5: 				par
EC_594: 6: 					par sync [the alarm is disarmed]
EC_594: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_594: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_594: 9: 							call( PostProc_R3 )
EC_594: 10: 						++
EC_594: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_594: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_594: 13: 								[ clock==0 ] / turn off the tone
EC_594: 14: 								call( PostProc_R5 )
EC_594: 15: 					&&
EC_594: 16: 						call( PostProc_R9 )
EC_594: 17: 				||
EC_594: 18: 					NIL
EC_594: 19: 			||
EC_594: 20: 				NIL
EC_594: 21: 		||
EC_594: 22: 			NIL
EC_594: 23: 	||
EC_594: 24: 		NIL
EC_594: 25: ||
EC_594: 26: 	NIL

EC_594 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_594  --> EC_677 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 677 , H : 204 , step : 0 >" as EC_677 #Pink
EC_677: 1: par
EC_677: 2: 	par
EC_677: 3: 		par
EC_677: 4: 			par
EC_677: 5: 				par
EC_677: 6: 					par sync [the alarm is disarmed]
EC_677: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_677: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_677: 9: 							call( PostProc_R3 )
EC_677: 10: 						++
EC_677: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_677: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_677: 13: 								[ clock==0 ] / turn off the tone
EC_677: 14: 								call( PostProc_R5 )
EC_677: 15: 					&&
EC_677: 16: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_677: 17: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_677: 18: 							call( PostProc_R7 )
EC_677: 19: 						++
EC_677: 20: 							[ R7_x_resp==60 ] / deadline at 60
EC_677: 21: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_677: 22: 								[ clock==0 ] / alert the emergency center
EC_677: 23: 								call( PostProc_R9 )
EC_677: 24: 				||
EC_677: 25: 					NIL
EC_677: 26: 			||
EC_677: 27: 				NIL
EC_677: 28: 		||
EC_677: 29: 			NIL
EC_677: 30: 	||
EC_677: 31: 		NIL
EC_677: 32: ||
EC_677: 33: 	NIL

EC_677 : DBM: R7_x_resp=60, R3_x_resp=60, clock<=0, R7_x_resp=R3_x_resp,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=-60, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_677  --> EC_679 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 679 , H : 205 , step : 0 >" as EC_679 #Orange
EC_679: 1: par
EC_679: 2: 	par
EC_679: 3: 		par
EC_679: 4: 			par
EC_679: 5: 				par
EC_679: 6: 					par sync [the alarm is disarmed]
EC_679: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_679: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_679: 9: 							call( PostProc_R3 )
EC_679: 10: 						++
EC_679: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_679: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_679: 13: 								[ clock==0 ] / turn off the tone
EC_679: 14: 								call( PostProc_R5 )
EC_679: 15: 					&&
EC_679: 16: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_679: 17: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_679: 18: 							call( PostProc_R7 )
EC_679: 19: 						++
EC_679: 20: 							[ R7_x_resp==60 ] / deadline at 60
EC_679: 21: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_679: 22: 								[ clock==0 ] / alert the emergency center
EC_679: 23: 								call( PostProc_R9 )
EC_679: 24: 				||
EC_679: 25: 					NIL
EC_679: 26: 			||
EC_679: 27: 				NIL
EC_679: 28: 		||
EC_679: 29: 			NIL
EC_679: 30: 	||
EC_679: 31: 		NIL
EC_679: 32: ||
EC_679: 33: 	NIL

EC_679 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_679  --> EC_680 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 680 , H : 206 , step : 169 >" as EC_680 #LightBlue
EC_680: 1: par
EC_680: 2: 	par
EC_680: 3: 		par
EC_680: 4: 			par
EC_680: 5: 				par
EC_680: 6: 					par sync [the alarm is disarmed]
EC_680: 7: 						call( PostProc_R3 )
EC_680: 8: 					&&
EC_680: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_680: 10: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_680: 11: 							call( PostProc_R7 )
EC_680: 12: 						++
EC_680: 13: 							[ R7_x_resp==60 ] / deadline at 60
EC_680: 14: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_680: 15: 								[ clock==0 ] / alert the emergency center
EC_680: 16: 								call( PostProc_R9 )
EC_680: 17: 				||
EC_680: 18: 					NIL
EC_680: 19: 			||
EC_680: 20: 				NIL
EC_680: 21: 		||
EC_680: 22: 			NIL
EC_680: 23: 	||
EC_680: 24: 		NIL
EC_680: 25: ||
EC_680: 26: 	NIL

EC_680 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_680  --> EC_684 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 684 , H : 207 , step : 0 >" as EC_684 #Pink
EC_684: 1: par
EC_684: 2: 	par
EC_684: 3: 		par
EC_684: 4: 			par
EC_684: 5: 				par
EC_684: 6: 					par sync [the alarm is disarmed]
EC_684: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_684: 8: 							[ true ] / the alarm is disarmed
EC_684: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_684: 10: 								[ clock==0 ] / turn off the tone
EC_684: 11: 								call( PostProc_R4 )
EC_684: 12: 					&&
EC_684: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_684: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_684: 15: 							call( PostProc_R7 )
EC_684: 16: 						++
EC_684: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_684: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_684: 19: 								[ clock==0 ] / alert the emergency center
EC_684: 20: 								call( PostProc_R9 )
EC_684: 21: 				||
EC_684: 22: 					NIL
EC_684: 23: 			||
EC_684: 24: 				NIL
EC_684: 25: 		||
EC_684: 26: 			NIL
EC_684: 27: 	||
EC_684: 28: 		NIL
EC_684: 29: ||
EC_684: 30: 	NIL

EC_684 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_684  --> EC_686 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 686 , H : 208 , step : 0 >" as EC_686 #Orange
EC_686: 1: par
EC_686: 2: 	par
EC_686: 3: 		par
EC_686: 4: 			par
EC_686: 5: 				par
EC_686: 6: 					par sync [the alarm is disarmed]
EC_686: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_686: 8: 							[ true ] / the alarm is disarmed
EC_686: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_686: 10: 								[ clock==0 ] / turn off the tone
EC_686: 11: 								call( PostProc_R4 )
EC_686: 12: 					&&
EC_686: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_686: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_686: 15: 							call( PostProc_R7 )
EC_686: 16: 						++
EC_686: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_686: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_686: 19: 								[ clock==0 ] / alert the emergency center
EC_686: 20: 								call( PostProc_R9 )
EC_686: 21: 				||
EC_686: 22: 					NIL
EC_686: 23: 			||
EC_686: 24: 				NIL
EC_686: 25: 		||
EC_686: 26: 			NIL
EC_686: 27: 	||
EC_686: 28: 		NIL
EC_686: 29: ||
EC_686: 30: 	NIL

EC_686 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_686  --> EC_687 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 687 , H : 209 , step : 170 >" as EC_687 #LightBlue
EC_687: 1: par
EC_687: 2: 	par
EC_687: 3: 		par
EC_687: 4: 			par
EC_687: 5: 				par
EC_687: 6: 					par sync [the alarm is disarmed]
EC_687: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_687: 8: 							[ true ] / the alarm is disarmed
EC_687: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_687: 10: 								[ clock==0 ] / turn off the tone
EC_687: 11: 								call( PostProc_R4 )
EC_687: 12: 					&&
EC_687: 13: 						call( PostProc_R7 )
EC_687: 14: 				||
EC_687: 15: 					NIL
EC_687: 16: 			||
EC_687: 17: 				NIL
EC_687: 18: 		||
EC_687: 19: 			NIL
EC_687: 20: 	||
EC_687: 21: 		NIL
EC_687: 22: ||
EC_687: 23: 	NIL

EC_687 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_687  --> EC_689 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 689 , H : 210 , step : 0 >" as EC_689 #Pink
EC_689: 1: par
EC_689: 2: 	par
EC_689: 3: 		par
EC_689: 4: 			par
EC_689: 5: 				par
EC_689: 6: 					par sync [the alarm is disarmed]
EC_689: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_689: 8: 							[ true ] / the alarm is disarmed
EC_689: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_689: 10: 								[ clock==0 ] / turn off the tone
EC_689: 11: 								call( PostProc_R4 )
EC_689: 12: 					&&
EC_689: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_689: 14: 							[ true ] / the alarm is disarmed
EC_689: 15: 							call( PostProc_R8 )
EC_689: 16: 				||
EC_689: 17: 					NIL
EC_689: 18: 			||
EC_689: 19: 				NIL
EC_689: 20: 		||
EC_689: 21: 			NIL
EC_689: 22: 	||
EC_689: 23: 		NIL
EC_689: 24: ||
EC_689: 25: 	NIL

EC_689 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_689  --> EC_691 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 691 , H : 211 , step : 0 >" as EC_691 #Orange
EC_691: 1: par
EC_691: 2: 	par
EC_691: 3: 		par
EC_691: 4: 			par
EC_691: 5: 				par
EC_691: 6: 					par sync [the alarm is disarmed]
EC_691: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_691: 8: 							[ true ] / the alarm is disarmed
EC_691: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_691: 10: 								[ clock==0 ] / turn off the tone
EC_691: 11: 								call( PostProc_R4 )
EC_691: 12: 					&&
EC_691: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_691: 14: 							[ true ] / the alarm is disarmed
EC_691: 15: 							call( PostProc_R8 )
EC_691: 16: 				||
EC_691: 17: 					NIL
EC_691: 18: 			||
EC_691: 19: 				NIL
EC_691: 20: 		||
EC_691: 21: 			NIL
EC_691: 22: 	||
EC_691: 23: 		NIL
EC_691: 24: ||
EC_691: 25: 	NIL

EC_691 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_691  --> EC_692 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 692 , H : 212 , step : 171 >" as EC_692 #LightBlue
EC_692: 1: par
EC_692: 2: 	par
EC_692: 3: 		par
EC_692: 4: 			par
EC_692: 5: 				par
EC_692: 6: 					par sync [the alarm is disarmed]
EC_692: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_692: 8: 							[ clock==0 ] / turn off the tone
EC_692: 9: 							call( PostProc_R4 )
EC_692: 10: 					&&
EC_692: 11: 						call( PostProc_R8 )
EC_692: 12: 				||
EC_692: 13: 					NIL
EC_692: 14: 			||
EC_692: 15: 				NIL
EC_692: 16: 		||
EC_692: 17: 			NIL
EC_692: 18: 	||
EC_692: 19: 		NIL
EC_692: 20: ||
EC_692: 21: 	NIL

EC_692 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_692  --> EC_693 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 693 , H : 213 , step : 0 >" as EC_693 #Pink
EC_693: 1: par
EC_693: 2: 	par
EC_693: 3: 		par
EC_693: 4: 			par
EC_693: 5: 				par
EC_693: 6: 					par sync [the alarm is disarmed]
EC_693: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_693: 8: 							[ clock==0 ] / turn off the tone
EC_693: 9: 							call( PostProc_R4 )
EC_693: 10: 					&&
EC_693: 11: 						NIL
EC_693: 12: 				||
EC_693: 13: 					NIL
EC_693: 14: 			||
EC_693: 15: 				NIL
EC_693: 16: 		||
EC_693: 17: 			NIL
EC_693: 18: 	||
EC_693: 19: 		NIL
EC_693: 20: ||
EC_693: 21: 	NIL

EC_693 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_693  --> EC_695 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 695 , H : 214 , step : 0 >" as EC_695 #Orange
EC_695: 1: par
EC_695: 2: 	par
EC_695: 3: 		par
EC_695: 4: 			par
EC_695: 5: 				par
EC_695: 6: 					par sync [the alarm is disarmed]
EC_695: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_695: 8: 							[ clock==0 ] / turn off the tone
EC_695: 9: 							call( PostProc_R4 )
EC_695: 10: 					&&
EC_695: 11: 						NIL
EC_695: 12: 				||
EC_695: 13: 					NIL
EC_695: 14: 			||
EC_695: 15: 				NIL
EC_695: 16: 		||
EC_695: 17: 			NIL
EC_695: 18: 	||
EC_695: 19: 		NIL
EC_695: 20: ||
EC_695: 21: 	NIL

EC_695 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_695  --> EC_696 : \lact [True] / META:REDUNDANCE:EC< id : 60 , H : 29 >

state "EC< id : 696 , H : 215 , step : 0 >" as EC_696 #Green
EC_696: 1: par
EC_696: 2: 	par
EC_696: 3: 		par
EC_696: 4: 			par
EC_696: 5: 				par
EC_696: 6: 					par sync [the alarm is disarmed]
EC_696: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_696: 8: 							[ clock==0 ] / turn off the tone
EC_696: 9: 							call( PostProc_R4 )
EC_696: 10: 					&&
EC_696: 11: 						NIL
EC_696: 12: 				||
EC_696: 13: 					NIL
EC_696: 14: 			||
EC_696: 15: 				NIL
EC_696: 16: 		||
EC_696: 17: 			NIL
EC_696: 18: 	||
EC_696: 19: 		NIL
EC_696: 20: ||
EC_696: 21: 	NIL

EC_696 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_686  --> EC_688 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 688 , H : 209 , step : 172 >" as EC_688 #LightBlue
EC_688: 1: par
EC_688: 2: 	par
EC_688: 3: 		par
EC_688: 4: 			par
EC_688: 5: 				par
EC_688: 6: 					par sync [the alarm is disarmed]
EC_688: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_688: 8: 							[ true ] / the alarm is disarmed
EC_688: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_688: 10: 								[ clock==0 ] / turn off the tone
EC_688: 11: 								call( PostProc_R4 )
EC_688: 12: 					&&
EC_688: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_688: 14: 							[ clock==0 ] / alert the emergency center
EC_688: 15: 							call( PostProc_R9 )
EC_688: 16: 				||
EC_688: 17: 					NIL
EC_688: 18: 			||
EC_688: 19: 				NIL
EC_688: 20: 		||
EC_688: 21: 			NIL
EC_688: 22: 	||
EC_688: 23: 		NIL
EC_688: 24: ||
EC_688: 25: 	NIL

EC_688 : DBM: R7_x_resp=60, R3_x_resp=120, clock=60, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp=clock, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_688  --> EC_698 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 698 , H : 210 , step : 0 >" as EC_698 #Orange
EC_698: 1: par
EC_698: 2: 	par
EC_698: 3: 		par
EC_698: 4: 			par
EC_698: 5: 				par
EC_698: 6: 					par sync [the alarm is disarmed]
EC_698: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_698: 8: 							[ true ] / the alarm is disarmed
EC_698: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_698: 10: 								[ clock==0 ] / turn off the tone
EC_698: 11: 								call( PostProc_R4 )
EC_698: 12: 					&&
EC_698: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_698: 14: 							[ clock==0 ] / alert the emergency center
EC_698: 15: 							call( PostProc_R9 )
EC_698: 16: 				||
EC_698: 17: 					NIL
EC_698: 18: 			||
EC_698: 19: 				NIL
EC_698: 20: 		||
EC_698: 21: 			NIL
EC_698: 22: 	||
EC_698: 23: 		NIL
EC_698: 24: ||
EC_698: 25: 	NIL

EC_698 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_698  --> EC_699 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 699 , H : 211 , step : 173 >" as EC_699 #LightBlue
EC_699: 1: par
EC_699: 2: 	par
EC_699: 3: 		par
EC_699: 4: 			par
EC_699: 5: 				par
EC_699: 6: 					par sync [the alarm is disarmed]
EC_699: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_699: 8: 							[ true ] / the alarm is disarmed
EC_699: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_699: 10: 								[ clock==0 ] / turn off the tone
EC_699: 11: 								call( PostProc_R4 )
EC_699: 12: 					&&
EC_699: 13: 						call( PostProc_R9 )
EC_699: 14: 				||
EC_699: 15: 					NIL
EC_699: 16: 			||
EC_699: 17: 				NIL
EC_699: 18: 		||
EC_699: 19: 			NIL
EC_699: 20: 	||
EC_699: 21: 		NIL
EC_699: 22: ||
EC_699: 23: 	NIL

EC_699 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_699  --> EC_700 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 700 , H : 212 , step : 0 >" as EC_700 #Pink
EC_700: 1: par
EC_700: 2: 	par
EC_700: 3: 		par
EC_700: 4: 			par
EC_700: 5: 				par
EC_700: 6: 					par sync [the alarm is disarmed]
EC_700: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_700: 8: 							[ true ] / the alarm is disarmed
EC_700: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_700: 10: 								[ clock==0 ] / turn off the tone
EC_700: 11: 								call( PostProc_R4 )
EC_700: 12: 					&&
EC_700: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_700: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_700: 15: 							call( PostProc_R7 )
EC_700: 16: 						++
EC_700: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_700: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_700: 19: 								[ clock==0 ] / alert the emergency center
EC_700: 20: 								call( PostProc_R9 )
EC_700: 21: 				||
EC_700: 22: 					NIL
EC_700: 23: 			||
EC_700: 24: 				NIL
EC_700: 25: 		||
EC_700: 26: 			NIL
EC_700: 27: 	||
EC_700: 28: 		NIL
EC_700: 29: ||
EC_700: 30: 	NIL

EC_700 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_700  --> EC_702 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 702 , H : 213 , step : 0 >" as EC_702 #Orange
EC_702: 1: par
EC_702: 2: 	par
EC_702: 3: 		par
EC_702: 4: 			par
EC_702: 5: 				par
EC_702: 6: 					par sync [the alarm is disarmed]
EC_702: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_702: 8: 							[ true ] / the alarm is disarmed
EC_702: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_702: 10: 								[ clock==0 ] / turn off the tone
EC_702: 11: 								call( PostProc_R4 )
EC_702: 12: 					&&
EC_702: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_702: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_702: 15: 							call( PostProc_R7 )
EC_702: 16: 						++
EC_702: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_702: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_702: 19: 								[ clock==0 ] / alert the emergency center
EC_702: 20: 								call( PostProc_R9 )
EC_702: 21: 				||
EC_702: 22: 					NIL
EC_702: 23: 			||
EC_702: 24: 				NIL
EC_702: 25: 		||
EC_702: 26: 			NIL
EC_702: 27: 	||
EC_702: 28: 		NIL
EC_702: 29: ||
EC_702: 30: 	NIL

EC_702 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_702  --> EC_703 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 703 , H : 214 , step : 174 >" as EC_703 #LightBlue
EC_703: 1: par
EC_703: 2: 	par
EC_703: 3: 		par
EC_703: 4: 			par
EC_703: 5: 				par
EC_703: 6: 					par sync [the alarm is disarmed]
EC_703: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_703: 8: 							[ true ] / the alarm is disarmed
EC_703: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_703: 10: 								[ clock==0 ] / turn off the tone
EC_703: 11: 								call( PostProc_R4 )
EC_703: 12: 					&&
EC_703: 13: 						call( PostProc_R7 )
EC_703: 14: 				||
EC_703: 15: 					NIL
EC_703: 16: 			||
EC_703: 17: 				NIL
EC_703: 18: 		||
EC_703: 19: 			NIL
EC_703: 20: 	||
EC_703: 21: 		NIL
EC_703: 22: ||
EC_703: 23: 	NIL

EC_703 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_703  --> EC_705 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 705 , H : 215 , step : 0 >" as EC_705 #Pink
EC_705: 1: par
EC_705: 2: 	par
EC_705: 3: 		par
EC_705: 4: 			par
EC_705: 5: 				par
EC_705: 6: 					par sync [the alarm is disarmed]
EC_705: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_705: 8: 							[ true ] / the alarm is disarmed
EC_705: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_705: 10: 								[ clock==0 ] / turn off the tone
EC_705: 11: 								call( PostProc_R4 )
EC_705: 12: 					&&
EC_705: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_705: 14: 							[ true ] / the alarm is disarmed
EC_705: 15: 							call( PostProc_R8 )
EC_705: 16: 				||
EC_705: 17: 					NIL
EC_705: 18: 			||
EC_705: 19: 				NIL
EC_705: 20: 		||
EC_705: 21: 			NIL
EC_705: 22: 	||
EC_705: 23: 		NIL
EC_705: 24: ||
EC_705: 25: 	NIL

EC_705 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_705  --> EC_707 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 707 , H : 216 , step : 0 >" as EC_707 #Orange
EC_707: 1: par
EC_707: 2: 	par
EC_707: 3: 		par
EC_707: 4: 			par
EC_707: 5: 				par
EC_707: 6: 					par sync [the alarm is disarmed]
EC_707: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_707: 8: 							[ true ] / the alarm is disarmed
EC_707: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_707: 10: 								[ clock==0 ] / turn off the tone
EC_707: 11: 								call( PostProc_R4 )
EC_707: 12: 					&&
EC_707: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_707: 14: 							[ true ] / the alarm is disarmed
EC_707: 15: 							call( PostProc_R8 )
EC_707: 16: 				||
EC_707: 17: 					NIL
EC_707: 18: 			||
EC_707: 19: 				NIL
EC_707: 20: 		||
EC_707: 21: 			NIL
EC_707: 22: 	||
EC_707: 23: 		NIL
EC_707: 24: ||
EC_707: 25: 	NIL

EC_707 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_707  --> EC_708 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 708 , H : 217 , step : 175 >" as EC_708 #LightBlue
EC_708: 1: par
EC_708: 2: 	par
EC_708: 3: 		par
EC_708: 4: 			par
EC_708: 5: 				par
EC_708: 6: 					par sync [the alarm is disarmed]
EC_708: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_708: 8: 							[ clock==0 ] / turn off the tone
EC_708: 9: 							call( PostProc_R4 )
EC_708: 10: 					&&
EC_708: 11: 						call( PostProc_R8 )
EC_708: 12: 				||
EC_708: 13: 					NIL
EC_708: 14: 			||
EC_708: 15: 				NIL
EC_708: 16: 		||
EC_708: 17: 			NIL
EC_708: 18: 	||
EC_708: 19: 		NIL
EC_708: 20: ||
EC_708: 21: 	NIL

EC_708 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_708  --> EC_709 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 709 , H : 218 , step : 0 >" as EC_709 #Pink
EC_709: 1: par
EC_709: 2: 	par
EC_709: 3: 		par
EC_709: 4: 			par
EC_709: 5: 				par
EC_709: 6: 					par sync [the alarm is disarmed]
EC_709: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_709: 8: 							[ clock==0 ] / turn off the tone
EC_709: 9: 							call( PostProc_R4 )
EC_709: 10: 					&&
EC_709: 11: 						NIL
EC_709: 12: 				||
EC_709: 13: 					NIL
EC_709: 14: 			||
EC_709: 15: 				NIL
EC_709: 16: 		||
EC_709: 17: 			NIL
EC_709: 18: 	||
EC_709: 19: 		NIL
EC_709: 20: ||
EC_709: 21: 	NIL

EC_709 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_709  --> EC_711 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 711 , H : 219 , step : 0 >" as EC_711 #Orange
EC_711: 1: par
EC_711: 2: 	par
EC_711: 3: 		par
EC_711: 4: 			par
EC_711: 5: 				par
EC_711: 6: 					par sync [the alarm is disarmed]
EC_711: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_711: 8: 							[ clock==0 ] / turn off the tone
EC_711: 9: 							call( PostProc_R4 )
EC_711: 10: 					&&
EC_711: 11: 						NIL
EC_711: 12: 				||
EC_711: 13: 					NIL
EC_711: 14: 			||
EC_711: 15: 				NIL
EC_711: 16: 		||
EC_711: 17: 			NIL
EC_711: 18: 	||
EC_711: 19: 		NIL
EC_711: 20: ||
EC_711: 21: 	NIL

EC_711 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_711  --> EC_712 : \lact [True] / META:REDUNDANCE:EC< id : 133 , H : 61 >

state "EC< id : 712 , H : 220 , step : 0 >" as EC_712 #Green
EC_712: 1: par
EC_712: 2: 	par
EC_712: 3: 		par
EC_712: 4: 			par
EC_712: 5: 				par
EC_712: 6: 					par sync [the alarm is disarmed]
EC_712: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_712: 8: 							[ clock==0 ] / turn off the tone
EC_712: 9: 							call( PostProc_R4 )
EC_712: 10: 					&&
EC_712: 11: 						NIL
EC_712: 12: 				||
EC_712: 13: 					NIL
EC_712: 14: 			||
EC_712: 15: 				NIL
EC_712: 16: 		||
EC_712: 17: 			NIL
EC_712: 18: 	||
EC_712: 19: 		NIL
EC_712: 20: ||
EC_712: 21: 	NIL

EC_712 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_702  --> EC_704 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 704 , H : 214 , step : 176 >" as EC_704 #LightBlue
EC_704: 1: par
EC_704: 2: 	par
EC_704: 3: 		par
EC_704: 4: 			par
EC_704: 5: 				par
EC_704: 6: 					par sync [the alarm is disarmed]
EC_704: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_704: 8: 							[ true ] / the alarm is disarmed
EC_704: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_704: 10: 								[ clock==0 ] / turn off the tone
EC_704: 11: 								call( PostProc_R4 )
EC_704: 12: 					&&
EC_704: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_704: 14: 							[ clock==0 ] / alert the emergency center
EC_704: 15: 							call( PostProc_R9 )
EC_704: 16: 				||
EC_704: 17: 					NIL
EC_704: 18: 			||
EC_704: 19: 				NIL
EC_704: 20: 		||
EC_704: 21: 			NIL
EC_704: 22: 	||
EC_704: 23: 		NIL
EC_704: 24: ||
EC_704: 25: 	NIL

EC_704 : DBM: R7_x_resp=60, R3_x_resp=180, clock=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp=clock, R3_x_resp-clock<=120,\l   clock-R3_x_resp<=-120,
EC_704  --> EC_714 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 714 , H : 215 , step : 0 >" as EC_714 #Orange
EC_714: 1: par
EC_714: 2: 	par
EC_714: 3: 		par
EC_714: 4: 			par
EC_714: 5: 				par
EC_714: 6: 					par sync [the alarm is disarmed]
EC_714: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_714: 8: 							[ true ] / the alarm is disarmed
EC_714: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_714: 10: 								[ clock==0 ] / turn off the tone
EC_714: 11: 								call( PostProc_R4 )
EC_714: 12: 					&&
EC_714: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_714: 14: 							[ clock==0 ] / alert the emergency center
EC_714: 15: 							call( PostProc_R9 )
EC_714: 16: 				||
EC_714: 17: 					NIL
EC_714: 18: 			||
EC_714: 19: 				NIL
EC_714: 20: 		||
EC_714: 21: 			NIL
EC_714: 22: 	||
EC_714: 23: 		NIL
EC_714: 24: ||
EC_714: 25: 	NIL

EC_714 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_714  --> EC_715 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 715 , H : 216 , step : 177 >" as EC_715 #LightBlue
EC_715: 1: par
EC_715: 2: 	par
EC_715: 3: 		par
EC_715: 4: 			par
EC_715: 5: 				par
EC_715: 6: 					par sync [the alarm is disarmed]
EC_715: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_715: 8: 							[ true ] / the alarm is disarmed
EC_715: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_715: 10: 								[ clock==0 ] / turn off the tone
EC_715: 11: 								call( PostProc_R4 )
EC_715: 12: 					&&
EC_715: 13: 						call( PostProc_R9 )
EC_715: 14: 				||
EC_715: 15: 					NIL
EC_715: 16: 			||
EC_715: 17: 				NIL
EC_715: 18: 		||
EC_715: 19: 			NIL
EC_715: 20: 	||
EC_715: 21: 		NIL
EC_715: 22: ||
EC_715: 23: 	NIL

EC_715 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_715  --> EC_716 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 716 , H : 217 , step : 0 >" as EC_716 #Pink
EC_716: 1: par
EC_716: 2: 	par
EC_716: 3: 		par
EC_716: 4: 			par
EC_716: 5: 				par
EC_716: 6: 					par sync [the alarm is disarmed]
EC_716: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_716: 8: 							[ true ] / the alarm is disarmed
EC_716: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_716: 10: 								[ clock==0 ] / turn off the tone
EC_716: 11: 								call( PostProc_R4 )
EC_716: 12: 					&&
EC_716: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_716: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_716: 15: 							call( PostProc_R7 )
EC_716: 16: 						++
EC_716: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_716: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_716: 19: 								[ clock==0 ] / alert the emergency center
EC_716: 20: 								call( PostProc_R9 )
EC_716: 21: 				||
EC_716: 22: 					NIL
EC_716: 23: 			||
EC_716: 24: 				NIL
EC_716: 25: 		||
EC_716: 26: 			NIL
EC_716: 27: 	||
EC_716: 28: 		NIL
EC_716: 29: ||
EC_716: 30: 	NIL

EC_716 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_716  --> EC_718 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 718 , H : 218 , step : 0 >" as EC_718 #Orange
EC_718: 1: par
EC_718: 2: 	par
EC_718: 3: 		par
EC_718: 4: 			par
EC_718: 5: 				par
EC_718: 6: 					par sync [the alarm is disarmed]
EC_718: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_718: 8: 							[ true ] / the alarm is disarmed
EC_718: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_718: 10: 								[ clock==0 ] / turn off the tone
EC_718: 11: 								call( PostProc_R4 )
EC_718: 12: 					&&
EC_718: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_718: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_718: 15: 							call( PostProc_R7 )
EC_718: 16: 						++
EC_718: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_718: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_718: 19: 								[ clock==0 ] / alert the emergency center
EC_718: 20: 								call( PostProc_R9 )
EC_718: 21: 				||
EC_718: 22: 					NIL
EC_718: 23: 			||
EC_718: 24: 				NIL
EC_718: 25: 		||
EC_718: 26: 			NIL
EC_718: 27: 	||
EC_718: 28: 		NIL
EC_718: 29: ||
EC_718: 30: 	NIL

EC_718 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_718  --> EC_719 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 719 , H : 219 , step : 178 >" as EC_719 #LightBlue
EC_719: 1: par
EC_719: 2: 	par
EC_719: 3: 		par
EC_719: 4: 			par
EC_719: 5: 				par
EC_719: 6: 					par sync [the alarm is disarmed]
EC_719: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_719: 8: 							[ true ] / the alarm is disarmed
EC_719: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_719: 10: 								[ clock==0 ] / turn off the tone
EC_719: 11: 								call( PostProc_R4 )
EC_719: 12: 					&&
EC_719: 13: 						call( PostProc_R7 )
EC_719: 14: 				||
EC_719: 15: 					NIL
EC_719: 16: 			||
EC_719: 17: 				NIL
EC_719: 18: 		||
EC_719: 19: 			NIL
EC_719: 20: 	||
EC_719: 21: 		NIL
EC_719: 22: ||
EC_719: 23: 	NIL

EC_719 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_719  --> EC_721 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 721 , H : 220 , step : 0 >" as EC_721 #Pink
EC_721: 1: par
EC_721: 2: 	par
EC_721: 3: 		par
EC_721: 4: 			par
EC_721: 5: 				par
EC_721: 6: 					par sync [the alarm is disarmed]
EC_721: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_721: 8: 							[ true ] / the alarm is disarmed
EC_721: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_721: 10: 								[ clock==0 ] / turn off the tone
EC_721: 11: 								call( PostProc_R4 )
EC_721: 12: 					&&
EC_721: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_721: 14: 							[ true ] / the alarm is disarmed
EC_721: 15: 							call( PostProc_R8 )
EC_721: 16: 				||
EC_721: 17: 					NIL
EC_721: 18: 			||
EC_721: 19: 				NIL
EC_721: 20: 		||
EC_721: 21: 			NIL
EC_721: 22: 	||
EC_721: 23: 		NIL
EC_721: 24: ||
EC_721: 25: 	NIL

EC_721 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_721  --> EC_723 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 723 , H : 221 , step : 0 >" as EC_723 #Orange
EC_723: 1: par
EC_723: 2: 	par
EC_723: 3: 		par
EC_723: 4: 			par
EC_723: 5: 				par
EC_723: 6: 					par sync [the alarm is disarmed]
EC_723: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_723: 8: 							[ true ] / the alarm is disarmed
EC_723: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_723: 10: 								[ clock==0 ] / turn off the tone
EC_723: 11: 								call( PostProc_R4 )
EC_723: 12: 					&&
EC_723: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_723: 14: 							[ true ] / the alarm is disarmed
EC_723: 15: 							call( PostProc_R8 )
EC_723: 16: 				||
EC_723: 17: 					NIL
EC_723: 18: 			||
EC_723: 19: 				NIL
EC_723: 20: 		||
EC_723: 21: 			NIL
EC_723: 22: 	||
EC_723: 23: 		NIL
EC_723: 24: ||
EC_723: 25: 	NIL

EC_723 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_723  --> EC_724 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 724 , H : 222 , step : 179 >" as EC_724 #LightBlue
EC_724: 1: par
EC_724: 2: 	par
EC_724: 3: 		par
EC_724: 4: 			par
EC_724: 5: 				par
EC_724: 6: 					par sync [the alarm is disarmed]
EC_724: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_724: 8: 							[ clock==0 ] / turn off the tone
EC_724: 9: 							call( PostProc_R4 )
EC_724: 10: 					&&
EC_724: 11: 						call( PostProc_R8 )
EC_724: 12: 				||
EC_724: 13: 					NIL
EC_724: 14: 			||
EC_724: 15: 				NIL
EC_724: 16: 		||
EC_724: 17: 			NIL
EC_724: 18: 	||
EC_724: 19: 		NIL
EC_724: 20: ||
EC_724: 21: 	NIL

EC_724 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_724  --> EC_725 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 725 , H : 223 , step : 0 >" as EC_725 #Pink
EC_725: 1: par
EC_725: 2: 	par
EC_725: 3: 		par
EC_725: 4: 			par
EC_725: 5: 				par
EC_725: 6: 					par sync [the alarm is disarmed]
EC_725: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_725: 8: 							[ clock==0 ] / turn off the tone
EC_725: 9: 							call( PostProc_R4 )
EC_725: 10: 					&&
EC_725: 11: 						NIL
EC_725: 12: 				||
EC_725: 13: 					NIL
EC_725: 14: 			||
EC_725: 15: 				NIL
EC_725: 16: 		||
EC_725: 17: 			NIL
EC_725: 18: 	||
EC_725: 19: 		NIL
EC_725: 20: ||
EC_725: 21: 	NIL

EC_725 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_725  --> EC_727 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 727 , H : 224 , step : 0 >" as EC_727 #Orange
EC_727: 1: par
EC_727: 2: 	par
EC_727: 3: 		par
EC_727: 4: 			par
EC_727: 5: 				par
EC_727: 6: 					par sync [the alarm is disarmed]
EC_727: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_727: 8: 							[ clock==0 ] / turn off the tone
EC_727: 9: 							call( PostProc_R4 )
EC_727: 10: 					&&
EC_727: 11: 						NIL
EC_727: 12: 				||
EC_727: 13: 					NIL
EC_727: 14: 			||
EC_727: 15: 				NIL
EC_727: 16: 		||
EC_727: 17: 			NIL
EC_727: 18: 	||
EC_727: 19: 		NIL
EC_727: 20: ||
EC_727: 21: 	NIL

EC_727 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_727  --> EC_728 : \lact [True] / META:REDUNDANCE:EC< id : 222 , H : 98 >

state "EC< id : 728 , H : 225 , step : 0 >" as EC_728 #Green
EC_728: 1: par
EC_728: 2: 	par
EC_728: 3: 		par
EC_728: 4: 			par
EC_728: 5: 				par
EC_728: 6: 					par sync [the alarm is disarmed]
EC_728: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_728: 8: 							[ clock==0 ] / turn off the tone
EC_728: 9: 							call( PostProc_R4 )
EC_728: 10: 					&&
EC_728: 11: 						NIL
EC_728: 12: 				||
EC_728: 13: 					NIL
EC_728: 14: 			||
EC_728: 15: 				NIL
EC_728: 16: 		||
EC_728: 17: 			NIL
EC_728: 18: 	||
EC_728: 19: 		NIL
EC_728: 20: ||
EC_728: 21: 	NIL

EC_728 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_718  --> EC_720 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 720 , H : 219 , step : 180 >" as EC_720 #LightBlue
EC_720: 1: par
EC_720: 2: 	par
EC_720: 3: 		par
EC_720: 4: 			par
EC_720: 5: 				par
EC_720: 6: 					par sync [the alarm is disarmed]
EC_720: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_720: 8: 							[ true ] / the alarm is disarmed
EC_720: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_720: 10: 								[ clock==0 ] / turn off the tone
EC_720: 11: 								call( PostProc_R4 )
EC_720: 12: 					&&
EC_720: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_720: 14: 							[ clock==0 ] / alert the emergency center
EC_720: 15: 							call( PostProc_R9 )
EC_720: 16: 				||
EC_720: 17: 					NIL
EC_720: 18: 			||
EC_720: 19: 				NIL
EC_720: 20: 		||
EC_720: 21: 			NIL
EC_720: 22: 	||
EC_720: 23: 		NIL
EC_720: 24: ||
EC_720: 25: 	NIL

EC_720 : DBM: R7_x_resp=60, R3_x_resp=240, clock=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp=clock, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-180,
EC_720  --> EC_730 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 730 , H : 220 , step : 0 >" as EC_730 #Orange
EC_730: 1: par
EC_730: 2: 	par
EC_730: 3: 		par
EC_730: 4: 			par
EC_730: 5: 				par
EC_730: 6: 					par sync [the alarm is disarmed]
EC_730: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_730: 8: 							[ true ] / the alarm is disarmed
EC_730: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_730: 10: 								[ clock==0 ] / turn off the tone
EC_730: 11: 								call( PostProc_R4 )
EC_730: 12: 					&&
EC_730: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_730: 14: 							[ clock==0 ] / alert the emergency center
EC_730: 15: 							call( PostProc_R9 )
EC_730: 16: 				||
EC_730: 17: 					NIL
EC_730: 18: 			||
EC_730: 19: 				NIL
EC_730: 20: 		||
EC_730: 21: 			NIL
EC_730: 22: 	||
EC_730: 23: 		NIL
EC_730: 24: ||
EC_730: 25: 	NIL

EC_730 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_730  --> EC_731 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 731 , H : 221 , step : 181 >" as EC_731 #LightBlue
EC_731: 1: par
EC_731: 2: 	par
EC_731: 3: 		par
EC_731: 4: 			par
EC_731: 5: 				par
EC_731: 6: 					par sync [the alarm is disarmed]
EC_731: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_731: 8: 							[ true ] / the alarm is disarmed
EC_731: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_731: 10: 								[ clock==0 ] / turn off the tone
EC_731: 11: 								call( PostProc_R4 )
EC_731: 12: 					&&
EC_731: 13: 						call( PostProc_R9 )
EC_731: 14: 				||
EC_731: 15: 					NIL
EC_731: 16: 			||
EC_731: 17: 				NIL
EC_731: 18: 		||
EC_731: 19: 			NIL
EC_731: 20: 	||
EC_731: 21: 		NIL
EC_731: 22: ||
EC_731: 23: 	NIL

EC_731 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_731  --> EC_732 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 732 , H : 222 , step : 0 >" as EC_732 #Pink
EC_732: 1: par
EC_732: 2: 	par
EC_732: 3: 		par
EC_732: 4: 			par
EC_732: 5: 				par
EC_732: 6: 					par sync [the alarm is disarmed]
EC_732: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_732: 8: 							[ true ] / the alarm is disarmed
EC_732: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_732: 10: 								[ clock==0 ] / turn off the tone
EC_732: 11: 								call( PostProc_R4 )
EC_732: 12: 					&&
EC_732: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_732: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_732: 15: 							call( PostProc_R7 )
EC_732: 16: 						++
EC_732: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_732: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_732: 19: 								[ clock==0 ] / alert the emergency center
EC_732: 20: 								call( PostProc_R9 )
EC_732: 21: 				||
EC_732: 22: 					NIL
EC_732: 23: 			||
EC_732: 24: 				NIL
EC_732: 25: 		||
EC_732: 26: 			NIL
EC_732: 27: 	||
EC_732: 28: 		NIL
EC_732: 29: ||
EC_732: 30: 	NIL

EC_732 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_732  --> EC_734 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 734 , H : 223 , step : 0 >" as EC_734 #Orange
EC_734: 1: par
EC_734: 2: 	par
EC_734: 3: 		par
EC_734: 4: 			par
EC_734: 5: 				par
EC_734: 6: 					par sync [the alarm is disarmed]
EC_734: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_734: 8: 							[ true ] / the alarm is disarmed
EC_734: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_734: 10: 								[ clock==0 ] / turn off the tone
EC_734: 11: 								call( PostProc_R4 )
EC_734: 12: 					&&
EC_734: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_734: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_734: 15: 							call( PostProc_R7 )
EC_734: 16: 						++
EC_734: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_734: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_734: 19: 								[ clock==0 ] / alert the emergency center
EC_734: 20: 								call( PostProc_R9 )
EC_734: 21: 				||
EC_734: 22: 					NIL
EC_734: 23: 			||
EC_734: 24: 				NIL
EC_734: 25: 		||
EC_734: 26: 			NIL
EC_734: 27: 	||
EC_734: 28: 		NIL
EC_734: 29: ||
EC_734: 30: 	NIL

EC_734 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_734  --> EC_735 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 735 , H : 224 , step : 182 >" as EC_735 #LightBlue
EC_735: 1: par
EC_735: 2: 	par
EC_735: 3: 		par
EC_735: 4: 			par
EC_735: 5: 				par
EC_735: 6: 					par sync [the alarm is disarmed]
EC_735: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_735: 8: 							[ true ] / the alarm is disarmed
EC_735: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_735: 10: 								[ clock==0 ] / turn off the tone
EC_735: 11: 								call( PostProc_R4 )
EC_735: 12: 					&&
EC_735: 13: 						call( PostProc_R7 )
EC_735: 14: 				||
EC_735: 15: 					NIL
EC_735: 16: 			||
EC_735: 17: 				NIL
EC_735: 18: 		||
EC_735: 19: 			NIL
EC_735: 20: 	||
EC_735: 21: 		NIL
EC_735: 22: ||
EC_735: 23: 	NIL

EC_735 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_735  --> EC_737 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 737 , H : 225 , step : 0 >" as EC_737 #Pink
EC_737: 1: par
EC_737: 2: 	par
EC_737: 3: 		par
EC_737: 4: 			par
EC_737: 5: 				par
EC_737: 6: 					par sync [the alarm is disarmed]
EC_737: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_737: 8: 							[ true ] / the alarm is disarmed
EC_737: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_737: 10: 								[ clock==0 ] / turn off the tone
EC_737: 11: 								call( PostProc_R4 )
EC_737: 12: 					&&
EC_737: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_737: 14: 							[ true ] / the alarm is disarmed
EC_737: 15: 							call( PostProc_R8 )
EC_737: 16: 				||
EC_737: 17: 					NIL
EC_737: 18: 			||
EC_737: 19: 				NIL
EC_737: 20: 		||
EC_737: 21: 			NIL
EC_737: 22: 	||
EC_737: 23: 		NIL
EC_737: 24: ||
EC_737: 25: 	NIL

EC_737 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_737  --> EC_739 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 739 , H : 226 , step : 0 >" as EC_739 #Orange
EC_739: 1: par
EC_739: 2: 	par
EC_739: 3: 		par
EC_739: 4: 			par
EC_739: 5: 				par
EC_739: 6: 					par sync [the alarm is disarmed]
EC_739: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_739: 8: 							[ true ] / the alarm is disarmed
EC_739: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_739: 10: 								[ clock==0 ] / turn off the tone
EC_739: 11: 								call( PostProc_R4 )
EC_739: 12: 					&&
EC_739: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_739: 14: 							[ true ] / the alarm is disarmed
EC_739: 15: 							call( PostProc_R8 )
EC_739: 16: 				||
EC_739: 17: 					NIL
EC_739: 18: 			||
EC_739: 19: 				NIL
EC_739: 20: 		||
EC_739: 21: 			NIL
EC_739: 22: 	||
EC_739: 23: 		NIL
EC_739: 24: ||
EC_739: 25: 	NIL

EC_739 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_739  --> EC_740 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 740 , H : 227 , step : 183 >" as EC_740 #LightBlue
EC_740: 1: par
EC_740: 2: 	par
EC_740: 3: 		par
EC_740: 4: 			par
EC_740: 5: 				par
EC_740: 6: 					par sync [the alarm is disarmed]
EC_740: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_740: 8: 							[ clock==0 ] / turn off the tone
EC_740: 9: 							call( PostProc_R4 )
EC_740: 10: 					&&
EC_740: 11: 						call( PostProc_R8 )
EC_740: 12: 				||
EC_740: 13: 					NIL
EC_740: 14: 			||
EC_740: 15: 				NIL
EC_740: 16: 		||
EC_740: 17: 			NIL
EC_740: 18: 	||
EC_740: 19: 		NIL
EC_740: 20: ||
EC_740: 21: 	NIL

EC_740 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_740  --> EC_741 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 741 , H : 228 , step : 0 >" as EC_741 #Pink
EC_741: 1: par
EC_741: 2: 	par
EC_741: 3: 		par
EC_741: 4: 			par
EC_741: 5: 				par
EC_741: 6: 					par sync [the alarm is disarmed]
EC_741: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_741: 8: 							[ clock==0 ] / turn off the tone
EC_741: 9: 							call( PostProc_R4 )
EC_741: 10: 					&&
EC_741: 11: 						NIL
EC_741: 12: 				||
EC_741: 13: 					NIL
EC_741: 14: 			||
EC_741: 15: 				NIL
EC_741: 16: 		||
EC_741: 17: 			NIL
EC_741: 18: 	||
EC_741: 19: 		NIL
EC_741: 20: ||
EC_741: 21: 	NIL

EC_741 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_741  --> EC_743 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 743 , H : 229 , step : 0 >" as EC_743 #Orange
EC_743: 1: par
EC_743: 2: 	par
EC_743: 3: 		par
EC_743: 4: 			par
EC_743: 5: 				par
EC_743: 6: 					par sync [the alarm is disarmed]
EC_743: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_743: 8: 							[ clock==0 ] / turn off the tone
EC_743: 9: 							call( PostProc_R4 )
EC_743: 10: 					&&
EC_743: 11: 						NIL
EC_743: 12: 				||
EC_743: 13: 					NIL
EC_743: 14: 			||
EC_743: 15: 				NIL
EC_743: 16: 		||
EC_743: 17: 			NIL
EC_743: 18: 	||
EC_743: 19: 		NIL
EC_743: 20: ||
EC_743: 21: 	NIL

EC_743 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_743  --> EC_744 : \lact [True] / META:REDUNDANCE:EC< id : 327 , H : 140 >

state "EC< id : 744 , H : 230 , step : 0 >" as EC_744 #Green
EC_744: 1: par
EC_744: 2: 	par
EC_744: 3: 		par
EC_744: 4: 			par
EC_744: 5: 				par
EC_744: 6: 					par sync [the alarm is disarmed]
EC_744: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_744: 8: 							[ clock==0 ] / turn off the tone
EC_744: 9: 							call( PostProc_R4 )
EC_744: 10: 					&&
EC_744: 11: 						NIL
EC_744: 12: 				||
EC_744: 13: 					NIL
EC_744: 14: 			||
EC_744: 15: 				NIL
EC_744: 16: 		||
EC_744: 17: 			NIL
EC_744: 18: 	||
EC_744: 19: 		NIL
EC_744: 20: ||
EC_744: 21: 	NIL

EC_744 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_734  --> EC_736 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 736 , H : 224 , step : 184 >" as EC_736 #LightBlue
EC_736: 1: par
EC_736: 2: 	par
EC_736: 3: 		par
EC_736: 4: 			par
EC_736: 5: 				par
EC_736: 6: 					par sync [the alarm is disarmed]
EC_736: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_736: 8: 							[ true ] / the alarm is disarmed
EC_736: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_736: 10: 								[ clock==0 ] / turn off the tone
EC_736: 11: 								call( PostProc_R4 )
EC_736: 12: 					&&
EC_736: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_736: 14: 							[ clock==0 ] / alert the emergency center
EC_736: 15: 							call( PostProc_R9 )
EC_736: 16: 				||
EC_736: 17: 					NIL
EC_736: 18: 			||
EC_736: 19: 				NIL
EC_736: 20: 		||
EC_736: 21: 			NIL
EC_736: 22: 	||
EC_736: 23: 		NIL
EC_736: 24: ||
EC_736: 25: 	NIL

EC_736 : DBM: R7_x_resp=60, R3_x_resp=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp=clock, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-240,
EC_736  --> EC_746 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 746 , H : 225 , step : 0 >" as EC_746 #Orange
EC_746: 1: par
EC_746: 2: 	par
EC_746: 3: 		par
EC_746: 4: 			par
EC_746: 5: 				par
EC_746: 6: 					par sync [the alarm is disarmed]
EC_746: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_746: 8: 							[ true ] / the alarm is disarmed
EC_746: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_746: 10: 								[ clock==0 ] / turn off the tone
EC_746: 11: 								call( PostProc_R4 )
EC_746: 12: 					&&
EC_746: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_746: 14: 							[ clock==0 ] / alert the emergency center
EC_746: 15: 							call( PostProc_R9 )
EC_746: 16: 				||
EC_746: 17: 					NIL
EC_746: 18: 			||
EC_746: 19: 				NIL
EC_746: 20: 		||
EC_746: 21: 			NIL
EC_746: 22: 	||
EC_746: 23: 		NIL
EC_746: 24: ||
EC_746: 25: 	NIL

EC_746 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_746  --> EC_747 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 747 , H : 226 , step : 185 >" as EC_747 #LightBlue
EC_747: 1: par
EC_747: 2: 	par
EC_747: 3: 		par
EC_747: 4: 			par
EC_747: 5: 				par
EC_747: 6: 					par sync [the alarm is disarmed]
EC_747: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_747: 8: 							[ true ] / the alarm is disarmed
EC_747: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_747: 10: 								[ clock==0 ] / turn off the tone
EC_747: 11: 								call( PostProc_R4 )
EC_747: 12: 					&&
EC_747: 13: 						call( PostProc_R9 )
EC_747: 14: 				||
EC_747: 15: 					NIL
EC_747: 16: 			||
EC_747: 17: 				NIL
EC_747: 18: 		||
EC_747: 19: 			NIL
EC_747: 20: 	||
EC_747: 21: 		NIL
EC_747: 22: ||
EC_747: 23: 	NIL

EC_747 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_747  --> EC_748 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 748 , H : 227 , step : 0 >" as EC_748 #Pink
EC_748: 1: par
EC_748: 2: 	par
EC_748: 3: 		par
EC_748: 4: 			par
EC_748: 5: 				par
EC_748: 6: 					par sync [the alarm is disarmed]
EC_748: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_748: 8: 							[ true ] / the alarm is disarmed
EC_748: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_748: 10: 								[ clock==0 ] / turn off the tone
EC_748: 11: 								call( PostProc_R4 )
EC_748: 12: 					&&
EC_748: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_748: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_748: 15: 							call( PostProc_R7 )
EC_748: 16: 						++
EC_748: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_748: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_748: 19: 								[ clock==0 ] / alert the emergency center
EC_748: 20: 								call( PostProc_R9 )
EC_748: 21: 				||
EC_748: 22: 					NIL
EC_748: 23: 			||
EC_748: 24: 				NIL
EC_748: 25: 		||
EC_748: 26: 			NIL
EC_748: 27: 	||
EC_748: 28: 		NIL
EC_748: 29: ||
EC_748: 30: 	NIL

EC_748 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_748  --> EC_750 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 750 , H : 228 , step : 0 >" as EC_750 #Orange
EC_750: 1: par
EC_750: 2: 	par
EC_750: 3: 		par
EC_750: 4: 			par
EC_750: 5: 				par
EC_750: 6: 					par sync [the alarm is disarmed]
EC_750: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_750: 8: 							[ true ] / the alarm is disarmed
EC_750: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_750: 10: 								[ clock==0 ] / turn off the tone
EC_750: 11: 								call( PostProc_R4 )
EC_750: 12: 					&&
EC_750: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_750: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_750: 15: 							call( PostProc_R7 )
EC_750: 16: 						++
EC_750: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_750: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_750: 19: 								[ clock==0 ] / alert the emergency center
EC_750: 20: 								call( PostProc_R9 )
EC_750: 21: 				||
EC_750: 22: 					NIL
EC_750: 23: 			||
EC_750: 24: 				NIL
EC_750: 25: 		||
EC_750: 26: 			NIL
EC_750: 27: 	||
EC_750: 28: 		NIL
EC_750: 29: ||
EC_750: 30: 	NIL

EC_750 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_750  --> EC_751 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 751 , H : 229 , step : 186 >" as EC_751 #LightBlue
EC_751: 1: par
EC_751: 2: 	par
EC_751: 3: 		par
EC_751: 4: 			par
EC_751: 5: 				par
EC_751: 6: 					par sync [the alarm is disarmed]
EC_751: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_751: 8: 							[ true ] / the alarm is disarmed
EC_751: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_751: 10: 								[ clock==0 ] / turn off the tone
EC_751: 11: 								call( PostProc_R4 )
EC_751: 12: 					&&
EC_751: 13: 						call( PostProc_R7 )
EC_751: 14: 				||
EC_751: 15: 					NIL
EC_751: 16: 			||
EC_751: 17: 				NIL
EC_751: 18: 		||
EC_751: 19: 			NIL
EC_751: 20: 	||
EC_751: 21: 		NIL
EC_751: 22: ||
EC_751: 23: 	NIL

EC_751 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_751  --> EC_753 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 753 , H : 230 , step : 0 >" as EC_753 #Pink
EC_753: 1: par
EC_753: 2: 	par
EC_753: 3: 		par
EC_753: 4: 			par
EC_753: 5: 				par
EC_753: 6: 					par sync [the alarm is disarmed]
EC_753: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_753: 8: 							[ true ] / the alarm is disarmed
EC_753: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_753: 10: 								[ clock==0 ] / turn off the tone
EC_753: 11: 								call( PostProc_R4 )
EC_753: 12: 					&&
EC_753: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_753: 14: 							[ true ] / the alarm is disarmed
EC_753: 15: 							call( PostProc_R8 )
EC_753: 16: 				||
EC_753: 17: 					NIL
EC_753: 18: 			||
EC_753: 19: 				NIL
EC_753: 20: 		||
EC_753: 21: 			NIL
EC_753: 22: 	||
EC_753: 23: 		NIL
EC_753: 24: ||
EC_753: 25: 	NIL

EC_753 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_753  --> EC_755 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 755 , H : 231 , step : 0 >" as EC_755 #Orange
EC_755: 1: par
EC_755: 2: 	par
EC_755: 3: 		par
EC_755: 4: 			par
EC_755: 5: 				par
EC_755: 6: 					par sync [the alarm is disarmed]
EC_755: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_755: 8: 							[ true ] / the alarm is disarmed
EC_755: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_755: 10: 								[ clock==0 ] / turn off the tone
EC_755: 11: 								call( PostProc_R4 )
EC_755: 12: 					&&
EC_755: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_755: 14: 							[ true ] / the alarm is disarmed
EC_755: 15: 							call( PostProc_R8 )
EC_755: 16: 				||
EC_755: 17: 					NIL
EC_755: 18: 			||
EC_755: 19: 				NIL
EC_755: 20: 		||
EC_755: 21: 			NIL
EC_755: 22: 	||
EC_755: 23: 		NIL
EC_755: 24: ||
EC_755: 25: 	NIL

EC_755 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_755  --> EC_756 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 756 , H : 232 , step : 187 >" as EC_756 #LightBlue
EC_756: 1: par
EC_756: 2: 	par
EC_756: 3: 		par
EC_756: 4: 			par
EC_756: 5: 				par
EC_756: 6: 					par sync [the alarm is disarmed]
EC_756: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_756: 8: 							[ clock==0 ] / turn off the tone
EC_756: 9: 							call( PostProc_R4 )
EC_756: 10: 					&&
EC_756: 11: 						call( PostProc_R8 )
EC_756: 12: 				||
EC_756: 13: 					NIL
EC_756: 14: 			||
EC_756: 15: 				NIL
EC_756: 16: 		||
EC_756: 17: 			NIL
EC_756: 18: 	||
EC_756: 19: 		NIL
EC_756: 20: ||
EC_756: 21: 	NIL

EC_756 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_756  --> EC_757 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 757 , H : 233 , step : 0 >" as EC_757 #Pink
EC_757: 1: par
EC_757: 2: 	par
EC_757: 3: 		par
EC_757: 4: 			par
EC_757: 5: 				par
EC_757: 6: 					par sync [the alarm is disarmed]
EC_757: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_757: 8: 							[ clock==0 ] / turn off the tone
EC_757: 9: 							call( PostProc_R4 )
EC_757: 10: 					&&
EC_757: 11: 						NIL
EC_757: 12: 				||
EC_757: 13: 					NIL
EC_757: 14: 			||
EC_757: 15: 				NIL
EC_757: 16: 		||
EC_757: 17: 			NIL
EC_757: 18: 	||
EC_757: 19: 		NIL
EC_757: 20: ||
EC_757: 21: 	NIL

EC_757 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_757  --> EC_759 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 759 , H : 234 , step : 0 >" as EC_759 #Orange
EC_759: 1: par
EC_759: 2: 	par
EC_759: 3: 		par
EC_759: 4: 			par
EC_759: 5: 				par
EC_759: 6: 					par sync [the alarm is disarmed]
EC_759: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_759: 8: 							[ clock==0 ] / turn off the tone
EC_759: 9: 							call( PostProc_R4 )
EC_759: 10: 					&&
EC_759: 11: 						NIL
EC_759: 12: 				||
EC_759: 13: 					NIL
EC_759: 14: 			||
EC_759: 15: 				NIL
EC_759: 16: 		||
EC_759: 17: 			NIL
EC_759: 18: 	||
EC_759: 19: 		NIL
EC_759: 20: ||
EC_759: 21: 	NIL

EC_759 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_759  --> EC_760 : \lact [True] / META:REDUNDANCE:EC< id : 448 , H : 187 >

state "EC< id : 760 , H : 235 , step : 0 >" as EC_760 #Green
EC_760: 1: par
EC_760: 2: 	par
EC_760: 3: 		par
EC_760: 4: 			par
EC_760: 5: 				par
EC_760: 6: 					par sync [the alarm is disarmed]
EC_760: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_760: 8: 							[ clock==0 ] / turn off the tone
EC_760: 9: 							call( PostProc_R4 )
EC_760: 10: 					&&
EC_760: 11: 						NIL
EC_760: 12: 				||
EC_760: 13: 					NIL
EC_760: 14: 			||
EC_760: 15: 				NIL
EC_760: 16: 		||
EC_760: 17: 			NIL
EC_760: 18: 	||
EC_760: 19: 		NIL
EC_760: 20: ||
EC_760: 21: 	NIL

EC_760 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_679  --> EC_681 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 681 , H : 206 , step : 188 >" as EC_681 #LightBlue
EC_681: 1: par
EC_681: 2: 	par
EC_681: 3: 		par
EC_681: 4: 			par
EC_681: 5: 				par
EC_681: 6: 					par sync [the alarm is disarmed]
EC_681: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_681: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_681: 9: 							call( PostProc_R3 )
EC_681: 10: 						++
EC_681: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_681: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_681: 13: 								[ clock==0 ] / turn off the tone
EC_681: 14: 								call( PostProc_R5 )
EC_681: 15: 					&&
EC_681: 16: 						call( PostProc_R7 )
EC_681: 17: 				||
EC_681: 18: 					NIL
EC_681: 19: 			||
EC_681: 20: 				NIL
EC_681: 21: 		||
EC_681: 22: 			NIL
EC_681: 23: 	||
EC_681: 24: 		NIL
EC_681: 25: ||
EC_681: 26: 	NIL

EC_681 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_681  --> EC_761 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 761 , H : 207 , step : 0 >" as EC_761 #Pink
EC_761: 1: par
EC_761: 2: 	par
EC_761: 3: 		par
EC_761: 4: 			par
EC_761: 5: 				par
EC_761: 6: 					par sync [the alarm is disarmed]
EC_761: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_761: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_761: 9: 							call( PostProc_R3 )
EC_761: 10: 						++
EC_761: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_761: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_761: 13: 								[ clock==0 ] / turn off the tone
EC_761: 14: 								call( PostProc_R5 )
EC_761: 15: 					&&
EC_761: 16: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_761: 17: 							[ true ] / the alarm is disarmed
EC_761: 18: 							call( PostProc_R8 )
EC_761: 19: 				||
EC_761: 20: 					NIL
EC_761: 21: 			||
EC_761: 22: 				NIL
EC_761: 23: 		||
EC_761: 24: 			NIL
EC_761: 25: 	||
EC_761: 26: 		NIL
EC_761: 27: ||
EC_761: 28: 	NIL

EC_761 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_761  --> EC_763 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 763 , H : 208 , step : 0 >" as EC_763 #Orange
EC_763: 1: par
EC_763: 2: 	par
EC_763: 3: 		par
EC_763: 4: 			par
EC_763: 5: 				par
EC_763: 6: 					par sync [the alarm is disarmed]
EC_763: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_763: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_763: 9: 							call( PostProc_R3 )
EC_763: 10: 						++
EC_763: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_763: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_763: 13: 								[ clock==0 ] / turn off the tone
EC_763: 14: 								call( PostProc_R5 )
EC_763: 15: 					&&
EC_763: 16: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_763: 17: 							[ true ] / the alarm is disarmed
EC_763: 18: 							call( PostProc_R8 )
EC_763: 19: 				||
EC_763: 20: 					NIL
EC_763: 21: 			||
EC_763: 22: 				NIL
EC_763: 23: 		||
EC_763: 24: 			NIL
EC_763: 25: 	||
EC_763: 26: 		NIL
EC_763: 27: ||
EC_763: 28: 	NIL

EC_763 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_763  --> EC_764 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 764 , H : 209 , step : 189 >" as EC_764 #LightBlue
EC_764: 1: par
EC_764: 2: 	par
EC_764: 3: 		par
EC_764: 4: 			par
EC_764: 5: 				par
EC_764: 6: 					par sync [the alarm is disarmed]
EC_764: 7: 						call( PostProc_R3 )
EC_764: 8: 					&&
EC_764: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_764: 10: 							[ true ] / the alarm is disarmed
EC_764: 11: 							call( PostProc_R8 )
EC_764: 12: 				||
EC_764: 13: 					NIL
EC_764: 14: 			||
EC_764: 15: 				NIL
EC_764: 16: 		||
EC_764: 17: 			NIL
EC_764: 18: 	||
EC_764: 19: 		NIL
EC_764: 20: ||
EC_764: 21: 	NIL

EC_764 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_764  --> EC_766 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 766 , H : 210 , step : 0 >" as EC_766 #Pink
EC_766: 1: par
EC_766: 2: 	par
EC_766: 3: 		par
EC_766: 4: 			par
EC_766: 5: 				par
EC_766: 6: 					par sync [the alarm is disarmed]
EC_766: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_766: 8: 							[ true ] / the alarm is disarmed
EC_766: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_766: 10: 								[ clock==0 ] / turn off the tone
EC_766: 11: 								call( PostProc_R4 )
EC_766: 12: 					&&
EC_766: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_766: 14: 							[ true ] / the alarm is disarmed
EC_766: 15: 							call( PostProc_R8 )
EC_766: 16: 				||
EC_766: 17: 					NIL
EC_766: 18: 			||
EC_766: 19: 				NIL
EC_766: 20: 		||
EC_766: 21: 			NIL
EC_766: 22: 	||
EC_766: 23: 		NIL
EC_766: 24: ||
EC_766: 25: 	NIL

EC_766 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_766  --> EC_768 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 768 , H : 211 , step : 0 >" as EC_768 #Orange
EC_768: 1: par
EC_768: 2: 	par
EC_768: 3: 		par
EC_768: 4: 			par
EC_768: 5: 				par
EC_768: 6: 					par sync [the alarm is disarmed]
EC_768: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_768: 8: 							[ true ] / the alarm is disarmed
EC_768: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_768: 10: 								[ clock==0 ] / turn off the tone
EC_768: 11: 								call( PostProc_R4 )
EC_768: 12: 					&&
EC_768: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_768: 14: 							[ true ] / the alarm is disarmed
EC_768: 15: 							call( PostProc_R8 )
EC_768: 16: 				||
EC_768: 17: 					NIL
EC_768: 18: 			||
EC_768: 19: 				NIL
EC_768: 20: 		||
EC_768: 21: 			NIL
EC_768: 22: 	||
EC_768: 23: 		NIL
EC_768: 24: ||
EC_768: 25: 	NIL

EC_768 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_768  --> EC_769 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 769 , H : 212 , step : 190 >" as EC_769 #LightBlue
EC_769: 1: par
EC_769: 2: 	par
EC_769: 3: 		par
EC_769: 4: 			par
EC_769: 5: 				par
EC_769: 6: 					par sync [the alarm is disarmed]
EC_769: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_769: 8: 							[ clock==0 ] / turn off the tone
EC_769: 9: 							call( PostProc_R4 )
EC_769: 10: 					&&
EC_769: 11: 						call( PostProc_R8 )
EC_769: 12: 				||
EC_769: 13: 					NIL
EC_769: 14: 			||
EC_769: 15: 				NIL
EC_769: 16: 		||
EC_769: 17: 			NIL
EC_769: 18: 	||
EC_769: 19: 		NIL
EC_769: 20: ||
EC_769: 21: 	NIL

EC_769 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_769  --> EC_770 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 770 , H : 213 , step : 0 >" as EC_770 #Pink
EC_770: 1: par
EC_770: 2: 	par
EC_770: 3: 		par
EC_770: 4: 			par
EC_770: 5: 				par
EC_770: 6: 					par sync [the alarm is disarmed]
EC_770: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_770: 8: 							[ clock==0 ] / turn off the tone
EC_770: 9: 							call( PostProc_R4 )
EC_770: 10: 					&&
EC_770: 11: 						NIL
EC_770: 12: 				||
EC_770: 13: 					NIL
EC_770: 14: 			||
EC_770: 15: 				NIL
EC_770: 16: 		||
EC_770: 17: 			NIL
EC_770: 18: 	||
EC_770: 19: 		NIL
EC_770: 20: ||
EC_770: 21: 	NIL

EC_770 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=60,\l   R7_x_resp-R3_x_resp<=-60, R3_x_resp-R7_x_resp<=60,\l   R7_x_resp=clock, R3_x_resp-clock<=60, clock-R3_x_resp<=-60,
EC_770  --> EC_772 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 772 , H : 214 , step : 0 >" as EC_772 #Orange
EC_772: 1: par
EC_772: 2: 	par
EC_772: 3: 		par
EC_772: 4: 			par
EC_772: 5: 				par
EC_772: 6: 					par sync [the alarm is disarmed]
EC_772: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_772: 8: 							[ clock==0 ] / turn off the tone
EC_772: 9: 							call( PostProc_R4 )
EC_772: 10: 					&&
EC_772: 11: 						NIL
EC_772: 12: 				||
EC_772: 13: 					NIL
EC_772: 14: 			||
EC_772: 15: 				NIL
EC_772: 16: 		||
EC_772: 17: 			NIL
EC_772: 18: 	||
EC_772: 19: 		NIL
EC_772: 20: ||
EC_772: 21: 	NIL

EC_772 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_772  --> EC_773 : \lact [True] / META:REDUNDANCE:EC< id : 60 , H : 29 >

state "EC< id : 773 , H : 215 , step : 0 >" as EC_773 #Green
EC_773: 1: par
EC_773: 2: 	par
EC_773: 3: 		par
EC_773: 4: 			par
EC_773: 5: 				par
EC_773: 6: 					par sync [the alarm is disarmed]
EC_773: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_773: 8: 							[ clock==0 ] / turn off the tone
EC_773: 9: 							call( PostProc_R4 )
EC_773: 10: 					&&
EC_773: 11: 						NIL
EC_773: 12: 				||
EC_773: 13: 					NIL
EC_773: 14: 			||
EC_773: 15: 				NIL
EC_773: 16: 		||
EC_773: 17: 			NIL
EC_773: 18: 	||
EC_773: 19: 		NIL
EC_773: 20: ||
EC_773: 21: 	NIL

EC_773 : DBM: R7_x_resp<=60, 60<=R3_x_resp<=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=0, R3_x_resp-clock<=120, clock-R3_x_resp<=-60,
EC_679  --> EC_682 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 682 , H : 206 , step : 191 >" as EC_682 #LightBlue
EC_682: 1: par
EC_682: 2: 	par
EC_682: 3: 		par
EC_682: 4: 			par
EC_682: 5: 				par
EC_682: 6: 					par sync [the alarm is disarmed]
EC_682: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_682: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_682: 9: 							call( PostProc_R3 )
EC_682: 10: 						++
EC_682: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_682: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_682: 13: 								[ clock==0 ] / turn off the tone
EC_682: 14: 								call( PostProc_R5 )
EC_682: 15: 					&&
EC_682: 16: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_682: 17: 							[ clock==0 ] / alert the emergency center
EC_682: 18: 							call( PostProc_R9 )
EC_682: 19: 				||
EC_682: 20: 					NIL
EC_682: 21: 			||
EC_682: 22: 				NIL
EC_682: 23: 		||
EC_682: 24: 			NIL
EC_682: 25: 	||
EC_682: 26: 		NIL
EC_682: 27: ||
EC_682: 28: 	NIL

EC_682 : DBM: R7_x_resp=60, R3_x_resp=120, clock=60, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp=clock, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_682  --> EC_775 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 775 , H : 207 , step : 0 >" as EC_775 #Orange
EC_775: 1: par
EC_775: 2: 	par
EC_775: 3: 		par
EC_775: 4: 			par
EC_775: 5: 				par
EC_775: 6: 					par sync [the alarm is disarmed]
EC_775: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_775: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_775: 9: 							call( PostProc_R3 )
EC_775: 10: 						++
EC_775: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_775: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_775: 13: 								[ clock==0 ] / turn off the tone
EC_775: 14: 								call( PostProc_R5 )
EC_775: 15: 					&&
EC_775: 16: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_775: 17: 							[ clock==0 ] / alert the emergency center
EC_775: 18: 							call( PostProc_R9 )
EC_775: 19: 				||
EC_775: 20: 					NIL
EC_775: 21: 			||
EC_775: 22: 				NIL
EC_775: 23: 		||
EC_775: 24: 			NIL
EC_775: 25: 	||
EC_775: 26: 		NIL
EC_775: 27: ||
EC_775: 28: 	NIL

EC_775 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_775  --> EC_776 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 776 , H : 208 , step : 192 >" as EC_776 #LightBlue
EC_776: 1: par
EC_776: 2: 	par
EC_776: 3: 		par
EC_776: 4: 			par
EC_776: 5: 				par
EC_776: 6: 					par sync [the alarm is disarmed]
EC_776: 7: 						call( PostProc_R3 )
EC_776: 8: 					&&
EC_776: 9: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_776: 10: 							[ clock==0 ] / alert the emergency center
EC_776: 11: 							call( PostProc_R9 )
EC_776: 12: 				||
EC_776: 13: 					NIL
EC_776: 14: 			||
EC_776: 15: 				NIL
EC_776: 16: 		||
EC_776: 17: 			NIL
EC_776: 18: 	||
EC_776: 19: 		NIL
EC_776: 20: ||
EC_776: 21: 	NIL

EC_776 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_776  --> EC_779 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 779 , H : 209 , step : 0 >" as EC_779 #Pink
EC_779: 1: par
EC_779: 2: 	par
EC_779: 3: 		par
EC_779: 4: 			par
EC_779: 5: 				par
EC_779: 6: 					par sync [the alarm is disarmed]
EC_779: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_779: 8: 							[ true ] / the alarm is disarmed
EC_779: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_779: 10: 								[ clock==0 ] / turn off the tone
EC_779: 11: 								call( PostProc_R4 )
EC_779: 12: 					&&
EC_779: 13: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_779: 14: 							[ clock==0 ] / alert the emergency center
EC_779: 15: 							call( PostProc_R9 )
EC_779: 16: 				||
EC_779: 17: 					NIL
EC_779: 18: 			||
EC_779: 19: 				NIL
EC_779: 20: 		||
EC_779: 21: 			NIL
EC_779: 22: 	||
EC_779: 23: 		NIL
EC_779: 24: ||
EC_779: 25: 	NIL

EC_779 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_779  --> EC_781 : inv [] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 781 , H : 210 , step : 0 >" as EC_781 #Orange
EC_781: 1: par
EC_781: 2: 	par
EC_781: 3: 		par
EC_781: 4: 			par
EC_781: 5: 				par
EC_781: 6: 					par sync [the alarm is disarmed]
EC_781: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_781: 8: 							[ true ] / the alarm is disarmed
EC_781: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_781: 10: 								[ clock==0 ] / turn off the tone
EC_781: 11: 								call( PostProc_R4 )
EC_781: 12: 					&&
EC_781: 13: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_781: 14: 							[ clock==0 ] / alert the emergency center
EC_781: 15: 							call( PostProc_R9 )
EC_781: 16: 				||
EC_781: 17: 					NIL
EC_781: 18: 			||
EC_781: 19: 				NIL
EC_781: 20: 		||
EC_781: 21: 			NIL
EC_781: 22: 	||
EC_781: 23: 		NIL
EC_781: 24: ||
EC_781: 25: 	NIL

EC_781 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_781  --> EC_782 : inv [] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 782 , H : 211 , step : 193 >" as EC_782 #LightBlue
EC_782: 1: par
EC_782: 2: 	par
EC_782: 3: 		par
EC_782: 4: 			par
EC_782: 5: 				par
EC_782: 6: 					par sync [the alarm is disarmed]
EC_782: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_782: 8: 							[ true ] / the alarm is disarmed
EC_782: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_782: 10: 								[ clock==0 ] / turn off the tone
EC_782: 11: 								call( PostProc_R4 )
EC_782: 12: 					&&
EC_782: 13: 						call( PostProc_R9 )
EC_782: 14: 				||
EC_782: 15: 					NIL
EC_782: 16: 			||
EC_782: 17: 				NIL
EC_782: 18: 		||
EC_782: 19: 			NIL
EC_782: 20: 	||
EC_782: 21: 		NIL
EC_782: 22: ||
EC_782: 23: 	NIL

EC_782 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_782  --> EC_783 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 783 , H : 212 , step : 0 >" as EC_783 #Pink
EC_783: 1: par
EC_783: 2: 	par
EC_783: 3: 		par
EC_783: 4: 			par
EC_783: 5: 				par
EC_783: 6: 					par sync [the alarm is disarmed]
EC_783: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_783: 8: 							[ true ] / the alarm is disarmed
EC_783: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_783: 10: 								[ clock==0 ] / turn off the tone
EC_783: 11: 								call( PostProc_R4 )
EC_783: 12: 					&&
EC_783: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_783: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_783: 15: 							call( PostProc_R7 )
EC_783: 16: 						++
EC_783: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_783: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_783: 19: 								[ clock==0 ] / alert the emergency center
EC_783: 20: 								call( PostProc_R9 )
EC_783: 21: 				||
EC_783: 22: 					NIL
EC_783: 23: 			||
EC_783: 24: 				NIL
EC_783: 25: 		||
EC_783: 26: 			NIL
EC_783: 27: 	||
EC_783: 28: 		NIL
EC_783: 29: ||
EC_783: 30: 	NIL

EC_783 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_783  --> EC_785 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 785 , H : 213 , step : 0 >" as EC_785 #Orange
EC_785: 1: par
EC_785: 2: 	par
EC_785: 3: 		par
EC_785: 4: 			par
EC_785: 5: 				par
EC_785: 6: 					par sync [the alarm is disarmed]
EC_785: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_785: 8: 							[ true ] / the alarm is disarmed
EC_785: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_785: 10: 								[ clock==0 ] / turn off the tone
EC_785: 11: 								call( PostProc_R4 )
EC_785: 12: 					&&
EC_785: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_785: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_785: 15: 							call( PostProc_R7 )
EC_785: 16: 						++
EC_785: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_785: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_785: 19: 								[ clock==0 ] / alert the emergency center
EC_785: 20: 								call( PostProc_R9 )
EC_785: 21: 				||
EC_785: 22: 					NIL
EC_785: 23: 			||
EC_785: 24: 				NIL
EC_785: 25: 		||
EC_785: 26: 			NIL
EC_785: 27: 	||
EC_785: 28: 		NIL
EC_785: 29: ||
EC_785: 30: 	NIL

EC_785 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_785  --> EC_786 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 786 , H : 214 , step : 194 >" as EC_786 #LightBlue
EC_786: 1: par
EC_786: 2: 	par
EC_786: 3: 		par
EC_786: 4: 			par
EC_786: 5: 				par
EC_786: 6: 					par sync [the alarm is disarmed]
EC_786: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_786: 8: 							[ true ] / the alarm is disarmed
EC_786: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_786: 10: 								[ clock==0 ] / turn off the tone
EC_786: 11: 								call( PostProc_R4 )
EC_786: 12: 					&&
EC_786: 13: 						call( PostProc_R7 )
EC_786: 14: 				||
EC_786: 15: 					NIL
EC_786: 16: 			||
EC_786: 17: 				NIL
EC_786: 18: 		||
EC_786: 19: 			NIL
EC_786: 20: 	||
EC_786: 21: 		NIL
EC_786: 22: ||
EC_786: 23: 	NIL

EC_786 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_786  --> EC_788 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 788 , H : 215 , step : 0 >" as EC_788 #Pink
EC_788: 1: par
EC_788: 2: 	par
EC_788: 3: 		par
EC_788: 4: 			par
EC_788: 5: 				par
EC_788: 6: 					par sync [the alarm is disarmed]
EC_788: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_788: 8: 							[ true ] / the alarm is disarmed
EC_788: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_788: 10: 								[ clock==0 ] / turn off the tone
EC_788: 11: 								call( PostProc_R4 )
EC_788: 12: 					&&
EC_788: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_788: 14: 							[ true ] / the alarm is disarmed
EC_788: 15: 							call( PostProc_R8 )
EC_788: 16: 				||
EC_788: 17: 					NIL
EC_788: 18: 			||
EC_788: 19: 				NIL
EC_788: 20: 		||
EC_788: 21: 			NIL
EC_788: 22: 	||
EC_788: 23: 		NIL
EC_788: 24: ||
EC_788: 25: 	NIL

EC_788 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_788  --> EC_790 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 790 , H : 216 , step : 0 >" as EC_790 #Orange
EC_790: 1: par
EC_790: 2: 	par
EC_790: 3: 		par
EC_790: 4: 			par
EC_790: 5: 				par
EC_790: 6: 					par sync [the alarm is disarmed]
EC_790: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_790: 8: 							[ true ] / the alarm is disarmed
EC_790: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_790: 10: 								[ clock==0 ] / turn off the tone
EC_790: 11: 								call( PostProc_R4 )
EC_790: 12: 					&&
EC_790: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_790: 14: 							[ true ] / the alarm is disarmed
EC_790: 15: 							call( PostProc_R8 )
EC_790: 16: 				||
EC_790: 17: 					NIL
EC_790: 18: 			||
EC_790: 19: 				NIL
EC_790: 20: 		||
EC_790: 21: 			NIL
EC_790: 22: 	||
EC_790: 23: 		NIL
EC_790: 24: ||
EC_790: 25: 	NIL

EC_790 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_790  --> EC_791 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 791 , H : 217 , step : 195 >" as EC_791 #LightBlue
EC_791: 1: par
EC_791: 2: 	par
EC_791: 3: 		par
EC_791: 4: 			par
EC_791: 5: 				par
EC_791: 6: 					par sync [the alarm is disarmed]
EC_791: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_791: 8: 							[ clock==0 ] / turn off the tone
EC_791: 9: 							call( PostProc_R4 )
EC_791: 10: 					&&
EC_791: 11: 						call( PostProc_R8 )
EC_791: 12: 				||
EC_791: 13: 					NIL
EC_791: 14: 			||
EC_791: 15: 				NIL
EC_791: 16: 		||
EC_791: 17: 			NIL
EC_791: 18: 	||
EC_791: 19: 		NIL
EC_791: 20: ||
EC_791: 21: 	NIL

EC_791 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_791  --> EC_792 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 792 , H : 218 , step : 0 >" as EC_792 #Pink
EC_792: 1: par
EC_792: 2: 	par
EC_792: 3: 		par
EC_792: 4: 			par
EC_792: 5: 				par
EC_792: 6: 					par sync [the alarm is disarmed]
EC_792: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_792: 8: 							[ clock==0 ] / turn off the tone
EC_792: 9: 							call( PostProc_R4 )
EC_792: 10: 					&&
EC_792: 11: 						NIL
EC_792: 12: 				||
EC_792: 13: 					NIL
EC_792: 14: 			||
EC_792: 15: 				NIL
EC_792: 16: 		||
EC_792: 17: 			NIL
EC_792: 18: 	||
EC_792: 19: 		NIL
EC_792: 20: ||
EC_792: 21: 	NIL

EC_792 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_792  --> EC_794 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 794 , H : 219 , step : 0 >" as EC_794 #Orange
EC_794: 1: par
EC_794: 2: 	par
EC_794: 3: 		par
EC_794: 4: 			par
EC_794: 5: 				par
EC_794: 6: 					par sync [the alarm is disarmed]
EC_794: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_794: 8: 							[ clock==0 ] / turn off the tone
EC_794: 9: 							call( PostProc_R4 )
EC_794: 10: 					&&
EC_794: 11: 						NIL
EC_794: 12: 				||
EC_794: 13: 					NIL
EC_794: 14: 			||
EC_794: 15: 				NIL
EC_794: 16: 		||
EC_794: 17: 			NIL
EC_794: 18: 	||
EC_794: 19: 		NIL
EC_794: 20: ||
EC_794: 21: 	NIL

EC_794 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_794  --> EC_795 : \lact [True] / META:REDUNDANCE:EC< id : 133 , H : 61 >

state "EC< id : 795 , H : 220 , step : 0 >" as EC_795 #Green
EC_795: 1: par
EC_795: 2: 	par
EC_795: 3: 		par
EC_795: 4: 			par
EC_795: 5: 				par
EC_795: 6: 					par sync [the alarm is disarmed]
EC_795: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_795: 8: 							[ clock==0 ] / turn off the tone
EC_795: 9: 							call( PostProc_R4 )
EC_795: 10: 					&&
EC_795: 11: 						NIL
EC_795: 12: 				||
EC_795: 13: 					NIL
EC_795: 14: 			||
EC_795: 15: 				NIL
EC_795: 16: 		||
EC_795: 17: 			NIL
EC_795: 18: 	||
EC_795: 19: 		NIL
EC_795: 20: ||
EC_795: 21: 	NIL

EC_795 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_785  --> EC_787 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 787 , H : 214 , step : 196 >" as EC_787 #LightBlue
EC_787: 1: par
EC_787: 2: 	par
EC_787: 3: 		par
EC_787: 4: 			par
EC_787: 5: 				par
EC_787: 6: 					par sync [the alarm is disarmed]
EC_787: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_787: 8: 							[ true ] / the alarm is disarmed
EC_787: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_787: 10: 								[ clock==0 ] / turn off the tone
EC_787: 11: 								call( PostProc_R4 )
EC_787: 12: 					&&
EC_787: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_787: 14: 							[ clock==0 ] / alert the emergency center
EC_787: 15: 							call( PostProc_R9 )
EC_787: 16: 				||
EC_787: 17: 					NIL
EC_787: 18: 			||
EC_787: 19: 				NIL
EC_787: 20: 		||
EC_787: 21: 			NIL
EC_787: 22: 	||
EC_787: 23: 		NIL
EC_787: 24: ||
EC_787: 25: 	NIL

EC_787 : DBM: R7_x_resp=60, R3_x_resp=180, clock=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp=clock, R3_x_resp-clock<=120,\l   clock-R3_x_resp<=-120,
EC_787  --> EC_797 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 797 , H : 215 , step : 0 >" as EC_797 #Orange
EC_797: 1: par
EC_797: 2: 	par
EC_797: 3: 		par
EC_797: 4: 			par
EC_797: 5: 				par
EC_797: 6: 					par sync [the alarm is disarmed]
EC_797: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_797: 8: 							[ true ] / the alarm is disarmed
EC_797: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_797: 10: 								[ clock==0 ] / turn off the tone
EC_797: 11: 								call( PostProc_R4 )
EC_797: 12: 					&&
EC_797: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_797: 14: 							[ clock==0 ] / alert the emergency center
EC_797: 15: 							call( PostProc_R9 )
EC_797: 16: 				||
EC_797: 17: 					NIL
EC_797: 18: 			||
EC_797: 19: 				NIL
EC_797: 20: 		||
EC_797: 21: 			NIL
EC_797: 22: 	||
EC_797: 23: 		NIL
EC_797: 24: ||
EC_797: 25: 	NIL

EC_797 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_797  --> EC_798 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 798 , H : 216 , step : 197 >" as EC_798 #LightBlue
EC_798: 1: par
EC_798: 2: 	par
EC_798: 3: 		par
EC_798: 4: 			par
EC_798: 5: 				par
EC_798: 6: 					par sync [the alarm is disarmed]
EC_798: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_798: 8: 							[ true ] / the alarm is disarmed
EC_798: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_798: 10: 								[ clock==0 ] / turn off the tone
EC_798: 11: 								call( PostProc_R4 )
EC_798: 12: 					&&
EC_798: 13: 						call( PostProc_R9 )
EC_798: 14: 				||
EC_798: 15: 					NIL
EC_798: 16: 			||
EC_798: 17: 				NIL
EC_798: 18: 		||
EC_798: 19: 			NIL
EC_798: 20: 	||
EC_798: 21: 		NIL
EC_798: 22: ||
EC_798: 23: 	NIL

EC_798 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_798  --> EC_799 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 799 , H : 217 , step : 0 >" as EC_799 #Pink
EC_799: 1: par
EC_799: 2: 	par
EC_799: 3: 		par
EC_799: 4: 			par
EC_799: 5: 				par
EC_799: 6: 					par sync [the alarm is disarmed]
EC_799: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_799: 8: 							[ true ] / the alarm is disarmed
EC_799: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_799: 10: 								[ clock==0 ] / turn off the tone
EC_799: 11: 								call( PostProc_R4 )
EC_799: 12: 					&&
EC_799: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_799: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_799: 15: 							call( PostProc_R7 )
EC_799: 16: 						++
EC_799: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_799: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_799: 19: 								[ clock==0 ] / alert the emergency center
EC_799: 20: 								call( PostProc_R9 )
EC_799: 21: 				||
EC_799: 22: 					NIL
EC_799: 23: 			||
EC_799: 24: 				NIL
EC_799: 25: 		||
EC_799: 26: 			NIL
EC_799: 27: 	||
EC_799: 28: 		NIL
EC_799: 29: ||
EC_799: 30: 	NIL

EC_799 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_799  --> EC_801 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 801 , H : 218 , step : 0 >" as EC_801 #Orange
EC_801: 1: par
EC_801: 2: 	par
EC_801: 3: 		par
EC_801: 4: 			par
EC_801: 5: 				par
EC_801: 6: 					par sync [the alarm is disarmed]
EC_801: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_801: 8: 							[ true ] / the alarm is disarmed
EC_801: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_801: 10: 								[ clock==0 ] / turn off the tone
EC_801: 11: 								call( PostProc_R4 )
EC_801: 12: 					&&
EC_801: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_801: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_801: 15: 							call( PostProc_R7 )
EC_801: 16: 						++
EC_801: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_801: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_801: 19: 								[ clock==0 ] / alert the emergency center
EC_801: 20: 								call( PostProc_R9 )
EC_801: 21: 				||
EC_801: 22: 					NIL
EC_801: 23: 			||
EC_801: 24: 				NIL
EC_801: 25: 		||
EC_801: 26: 			NIL
EC_801: 27: 	||
EC_801: 28: 		NIL
EC_801: 29: ||
EC_801: 30: 	NIL

EC_801 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_801  --> EC_802 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 802 , H : 219 , step : 198 >" as EC_802 #LightBlue
EC_802: 1: par
EC_802: 2: 	par
EC_802: 3: 		par
EC_802: 4: 			par
EC_802: 5: 				par
EC_802: 6: 					par sync [the alarm is disarmed]
EC_802: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_802: 8: 							[ true ] / the alarm is disarmed
EC_802: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_802: 10: 								[ clock==0 ] / turn off the tone
EC_802: 11: 								call( PostProc_R4 )
EC_802: 12: 					&&
EC_802: 13: 						call( PostProc_R7 )
EC_802: 14: 				||
EC_802: 15: 					NIL
EC_802: 16: 			||
EC_802: 17: 				NIL
EC_802: 18: 		||
EC_802: 19: 			NIL
EC_802: 20: 	||
EC_802: 21: 		NIL
EC_802: 22: ||
EC_802: 23: 	NIL

EC_802 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_802  --> EC_804 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 804 , H : 220 , step : 0 >" as EC_804 #Pink
EC_804: 1: par
EC_804: 2: 	par
EC_804: 3: 		par
EC_804: 4: 			par
EC_804: 5: 				par
EC_804: 6: 					par sync [the alarm is disarmed]
EC_804: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_804: 8: 							[ true ] / the alarm is disarmed
EC_804: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_804: 10: 								[ clock==0 ] / turn off the tone
EC_804: 11: 								call( PostProc_R4 )
EC_804: 12: 					&&
EC_804: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_804: 14: 							[ true ] / the alarm is disarmed
EC_804: 15: 							call( PostProc_R8 )
EC_804: 16: 				||
EC_804: 17: 					NIL
EC_804: 18: 			||
EC_804: 19: 				NIL
EC_804: 20: 		||
EC_804: 21: 			NIL
EC_804: 22: 	||
EC_804: 23: 		NIL
EC_804: 24: ||
EC_804: 25: 	NIL

EC_804 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_804  --> EC_806 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 806 , H : 221 , step : 0 >" as EC_806 #Orange
EC_806: 1: par
EC_806: 2: 	par
EC_806: 3: 		par
EC_806: 4: 			par
EC_806: 5: 				par
EC_806: 6: 					par sync [the alarm is disarmed]
EC_806: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_806: 8: 							[ true ] / the alarm is disarmed
EC_806: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_806: 10: 								[ clock==0 ] / turn off the tone
EC_806: 11: 								call( PostProc_R4 )
EC_806: 12: 					&&
EC_806: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_806: 14: 							[ true ] / the alarm is disarmed
EC_806: 15: 							call( PostProc_R8 )
EC_806: 16: 				||
EC_806: 17: 					NIL
EC_806: 18: 			||
EC_806: 19: 				NIL
EC_806: 20: 		||
EC_806: 21: 			NIL
EC_806: 22: 	||
EC_806: 23: 		NIL
EC_806: 24: ||
EC_806: 25: 	NIL

EC_806 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_806  --> EC_807 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 807 , H : 222 , step : 199 >" as EC_807 #LightBlue
EC_807: 1: par
EC_807: 2: 	par
EC_807: 3: 		par
EC_807: 4: 			par
EC_807: 5: 				par
EC_807: 6: 					par sync [the alarm is disarmed]
EC_807: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_807: 8: 							[ clock==0 ] / turn off the tone
EC_807: 9: 							call( PostProc_R4 )
EC_807: 10: 					&&
EC_807: 11: 						call( PostProc_R8 )
EC_807: 12: 				||
EC_807: 13: 					NIL
EC_807: 14: 			||
EC_807: 15: 				NIL
EC_807: 16: 		||
EC_807: 17: 			NIL
EC_807: 18: 	||
EC_807: 19: 		NIL
EC_807: 20: ||
EC_807: 21: 	NIL

EC_807 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_807  --> EC_808 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 808 , H : 223 , step : 0 >" as EC_808 #Pink
EC_808: 1: par
EC_808: 2: 	par
EC_808: 3: 		par
EC_808: 4: 			par
EC_808: 5: 				par
EC_808: 6: 					par sync [the alarm is disarmed]
EC_808: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_808: 8: 							[ clock==0 ] / turn off the tone
EC_808: 9: 							call( PostProc_R4 )
EC_808: 10: 					&&
EC_808: 11: 						NIL
EC_808: 12: 				||
EC_808: 13: 					NIL
EC_808: 14: 			||
EC_808: 15: 				NIL
EC_808: 16: 		||
EC_808: 17: 			NIL
EC_808: 18: 	||
EC_808: 19: 		NIL
EC_808: 20: ||
EC_808: 21: 	NIL

EC_808 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_808  --> EC_810 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 810 , H : 224 , step : 0 >" as EC_810 #Orange
EC_810: 1: par
EC_810: 2: 	par
EC_810: 3: 		par
EC_810: 4: 			par
EC_810: 5: 				par
EC_810: 6: 					par sync [the alarm is disarmed]
EC_810: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_810: 8: 							[ clock==0 ] / turn off the tone
EC_810: 9: 							call( PostProc_R4 )
EC_810: 10: 					&&
EC_810: 11: 						NIL
EC_810: 12: 				||
EC_810: 13: 					NIL
EC_810: 14: 			||
EC_810: 15: 				NIL
EC_810: 16: 		||
EC_810: 17: 			NIL
EC_810: 18: 	||
EC_810: 19: 		NIL
EC_810: 20: ||
EC_810: 21: 	NIL

EC_810 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_810  --> EC_811 : \lact [True] / META:REDUNDANCE:EC< id : 222 , H : 98 >

state "EC< id : 811 , H : 225 , step : 0 >" as EC_811 #Green
EC_811: 1: par
EC_811: 2: 	par
EC_811: 3: 		par
EC_811: 4: 			par
EC_811: 5: 				par
EC_811: 6: 					par sync [the alarm is disarmed]
EC_811: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_811: 8: 							[ clock==0 ] / turn off the tone
EC_811: 9: 							call( PostProc_R4 )
EC_811: 10: 					&&
EC_811: 11: 						NIL
EC_811: 12: 				||
EC_811: 13: 					NIL
EC_811: 14: 			||
EC_811: 15: 				NIL
EC_811: 16: 		||
EC_811: 17: 			NIL
EC_811: 18: 	||
EC_811: 19: 		NIL
EC_811: 20: ||
EC_811: 21: 	NIL

EC_811 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_801  --> EC_803 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 803 , H : 219 , step : 200 >" as EC_803 #LightBlue
EC_803: 1: par
EC_803: 2: 	par
EC_803: 3: 		par
EC_803: 4: 			par
EC_803: 5: 				par
EC_803: 6: 					par sync [the alarm is disarmed]
EC_803: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_803: 8: 							[ true ] / the alarm is disarmed
EC_803: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_803: 10: 								[ clock==0 ] / turn off the tone
EC_803: 11: 								call( PostProc_R4 )
EC_803: 12: 					&&
EC_803: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_803: 14: 							[ clock==0 ] / alert the emergency center
EC_803: 15: 							call( PostProc_R9 )
EC_803: 16: 				||
EC_803: 17: 					NIL
EC_803: 18: 			||
EC_803: 19: 				NIL
EC_803: 20: 		||
EC_803: 21: 			NIL
EC_803: 22: 	||
EC_803: 23: 		NIL
EC_803: 24: ||
EC_803: 25: 	NIL

EC_803 : DBM: R7_x_resp=60, R3_x_resp=240, clock=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp=clock, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-180,
EC_803  --> EC_813 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 813 , H : 220 , step : 0 >" as EC_813 #Orange
EC_813: 1: par
EC_813: 2: 	par
EC_813: 3: 		par
EC_813: 4: 			par
EC_813: 5: 				par
EC_813: 6: 					par sync [the alarm is disarmed]
EC_813: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_813: 8: 							[ true ] / the alarm is disarmed
EC_813: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_813: 10: 								[ clock==0 ] / turn off the tone
EC_813: 11: 								call( PostProc_R4 )
EC_813: 12: 					&&
EC_813: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_813: 14: 							[ clock==0 ] / alert the emergency center
EC_813: 15: 							call( PostProc_R9 )
EC_813: 16: 				||
EC_813: 17: 					NIL
EC_813: 18: 			||
EC_813: 19: 				NIL
EC_813: 20: 		||
EC_813: 21: 			NIL
EC_813: 22: 	||
EC_813: 23: 		NIL
EC_813: 24: ||
EC_813: 25: 	NIL

EC_813 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_813  --> EC_814 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 814 , H : 221 , step : 201 >" as EC_814 #LightBlue
EC_814: 1: par
EC_814: 2: 	par
EC_814: 3: 		par
EC_814: 4: 			par
EC_814: 5: 				par
EC_814: 6: 					par sync [the alarm is disarmed]
EC_814: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_814: 8: 							[ true ] / the alarm is disarmed
EC_814: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_814: 10: 								[ clock==0 ] / turn off the tone
EC_814: 11: 								call( PostProc_R4 )
EC_814: 12: 					&&
EC_814: 13: 						call( PostProc_R9 )
EC_814: 14: 				||
EC_814: 15: 					NIL
EC_814: 16: 			||
EC_814: 17: 				NIL
EC_814: 18: 		||
EC_814: 19: 			NIL
EC_814: 20: 	||
EC_814: 21: 		NIL
EC_814: 22: ||
EC_814: 23: 	NIL

EC_814 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_814  --> EC_815 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 815 , H : 222 , step : 0 >" as EC_815 #Pink
EC_815: 1: par
EC_815: 2: 	par
EC_815: 3: 		par
EC_815: 4: 			par
EC_815: 5: 				par
EC_815: 6: 					par sync [the alarm is disarmed]
EC_815: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_815: 8: 							[ true ] / the alarm is disarmed
EC_815: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_815: 10: 								[ clock==0 ] / turn off the tone
EC_815: 11: 								call( PostProc_R4 )
EC_815: 12: 					&&
EC_815: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_815: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_815: 15: 							call( PostProc_R7 )
EC_815: 16: 						++
EC_815: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_815: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_815: 19: 								[ clock==0 ] / alert the emergency center
EC_815: 20: 								call( PostProc_R9 )
EC_815: 21: 				||
EC_815: 22: 					NIL
EC_815: 23: 			||
EC_815: 24: 				NIL
EC_815: 25: 		||
EC_815: 26: 			NIL
EC_815: 27: 	||
EC_815: 28: 		NIL
EC_815: 29: ||
EC_815: 30: 	NIL

EC_815 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_815  --> EC_817 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 817 , H : 223 , step : 0 >" as EC_817 #Orange
EC_817: 1: par
EC_817: 2: 	par
EC_817: 3: 		par
EC_817: 4: 			par
EC_817: 5: 				par
EC_817: 6: 					par sync [the alarm is disarmed]
EC_817: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_817: 8: 							[ true ] / the alarm is disarmed
EC_817: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_817: 10: 								[ clock==0 ] / turn off the tone
EC_817: 11: 								call( PostProc_R4 )
EC_817: 12: 					&&
EC_817: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_817: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_817: 15: 							call( PostProc_R7 )
EC_817: 16: 						++
EC_817: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_817: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_817: 19: 								[ clock==0 ] / alert the emergency center
EC_817: 20: 								call( PostProc_R9 )
EC_817: 21: 				||
EC_817: 22: 					NIL
EC_817: 23: 			||
EC_817: 24: 				NIL
EC_817: 25: 		||
EC_817: 26: 			NIL
EC_817: 27: 	||
EC_817: 28: 		NIL
EC_817: 29: ||
EC_817: 30: 	NIL

EC_817 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_817  --> EC_818 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 818 , H : 224 , step : 202 >" as EC_818 #LightBlue
EC_818: 1: par
EC_818: 2: 	par
EC_818: 3: 		par
EC_818: 4: 			par
EC_818: 5: 				par
EC_818: 6: 					par sync [the alarm is disarmed]
EC_818: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_818: 8: 							[ true ] / the alarm is disarmed
EC_818: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_818: 10: 								[ clock==0 ] / turn off the tone
EC_818: 11: 								call( PostProc_R4 )
EC_818: 12: 					&&
EC_818: 13: 						call( PostProc_R7 )
EC_818: 14: 				||
EC_818: 15: 					NIL
EC_818: 16: 			||
EC_818: 17: 				NIL
EC_818: 18: 		||
EC_818: 19: 			NIL
EC_818: 20: 	||
EC_818: 21: 		NIL
EC_818: 22: ||
EC_818: 23: 	NIL

EC_818 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_818  --> EC_820 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 820 , H : 225 , step : 0 >" as EC_820 #Pink
EC_820: 1: par
EC_820: 2: 	par
EC_820: 3: 		par
EC_820: 4: 			par
EC_820: 5: 				par
EC_820: 6: 					par sync [the alarm is disarmed]
EC_820: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_820: 8: 							[ true ] / the alarm is disarmed
EC_820: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_820: 10: 								[ clock==0 ] / turn off the tone
EC_820: 11: 								call( PostProc_R4 )
EC_820: 12: 					&&
EC_820: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_820: 14: 							[ true ] / the alarm is disarmed
EC_820: 15: 							call( PostProc_R8 )
EC_820: 16: 				||
EC_820: 17: 					NIL
EC_820: 18: 			||
EC_820: 19: 				NIL
EC_820: 20: 		||
EC_820: 21: 			NIL
EC_820: 22: 	||
EC_820: 23: 		NIL
EC_820: 24: ||
EC_820: 25: 	NIL

EC_820 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_820  --> EC_822 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 822 , H : 226 , step : 0 >" as EC_822 #Orange
EC_822: 1: par
EC_822: 2: 	par
EC_822: 3: 		par
EC_822: 4: 			par
EC_822: 5: 				par
EC_822: 6: 					par sync [the alarm is disarmed]
EC_822: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_822: 8: 							[ true ] / the alarm is disarmed
EC_822: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_822: 10: 								[ clock==0 ] / turn off the tone
EC_822: 11: 								call( PostProc_R4 )
EC_822: 12: 					&&
EC_822: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_822: 14: 							[ true ] / the alarm is disarmed
EC_822: 15: 							call( PostProc_R8 )
EC_822: 16: 				||
EC_822: 17: 					NIL
EC_822: 18: 			||
EC_822: 19: 				NIL
EC_822: 20: 		||
EC_822: 21: 			NIL
EC_822: 22: 	||
EC_822: 23: 		NIL
EC_822: 24: ||
EC_822: 25: 	NIL

EC_822 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_822  --> EC_823 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 823 , H : 227 , step : 203 >" as EC_823 #LightBlue
EC_823: 1: par
EC_823: 2: 	par
EC_823: 3: 		par
EC_823: 4: 			par
EC_823: 5: 				par
EC_823: 6: 					par sync [the alarm is disarmed]
EC_823: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_823: 8: 							[ clock==0 ] / turn off the tone
EC_823: 9: 							call( PostProc_R4 )
EC_823: 10: 					&&
EC_823: 11: 						call( PostProc_R8 )
EC_823: 12: 				||
EC_823: 13: 					NIL
EC_823: 14: 			||
EC_823: 15: 				NIL
EC_823: 16: 		||
EC_823: 17: 			NIL
EC_823: 18: 	||
EC_823: 19: 		NIL
EC_823: 20: ||
EC_823: 21: 	NIL

EC_823 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_823  --> EC_824 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 824 , H : 228 , step : 0 >" as EC_824 #Pink
EC_824: 1: par
EC_824: 2: 	par
EC_824: 3: 		par
EC_824: 4: 			par
EC_824: 5: 				par
EC_824: 6: 					par sync [the alarm is disarmed]
EC_824: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_824: 8: 							[ clock==0 ] / turn off the tone
EC_824: 9: 							call( PostProc_R4 )
EC_824: 10: 					&&
EC_824: 11: 						NIL
EC_824: 12: 				||
EC_824: 13: 					NIL
EC_824: 14: 			||
EC_824: 15: 				NIL
EC_824: 16: 		||
EC_824: 17: 			NIL
EC_824: 18: 	||
EC_824: 19: 		NIL
EC_824: 20: ||
EC_824: 21: 	NIL

EC_824 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_824  --> EC_826 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 826 , H : 229 , step : 0 >" as EC_826 #Orange
EC_826: 1: par
EC_826: 2: 	par
EC_826: 3: 		par
EC_826: 4: 			par
EC_826: 5: 				par
EC_826: 6: 					par sync [the alarm is disarmed]
EC_826: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_826: 8: 							[ clock==0 ] / turn off the tone
EC_826: 9: 							call( PostProc_R4 )
EC_826: 10: 					&&
EC_826: 11: 						NIL
EC_826: 12: 				||
EC_826: 13: 					NIL
EC_826: 14: 			||
EC_826: 15: 				NIL
EC_826: 16: 		||
EC_826: 17: 			NIL
EC_826: 18: 	||
EC_826: 19: 		NIL
EC_826: 20: ||
EC_826: 21: 	NIL

EC_826 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_826  --> EC_827 : \lact [True] / META:REDUNDANCE:EC< id : 327 , H : 140 >

state "EC< id : 827 , H : 230 , step : 0 >" as EC_827 #Green
EC_827: 1: par
EC_827: 2: 	par
EC_827: 3: 		par
EC_827: 4: 			par
EC_827: 5: 				par
EC_827: 6: 					par sync [the alarm is disarmed]
EC_827: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_827: 8: 							[ clock==0 ] / turn off the tone
EC_827: 9: 							call( PostProc_R4 )
EC_827: 10: 					&&
EC_827: 11: 						NIL
EC_827: 12: 				||
EC_827: 13: 					NIL
EC_827: 14: 			||
EC_827: 15: 				NIL
EC_827: 16: 		||
EC_827: 17: 			NIL
EC_827: 18: 	||
EC_827: 19: 		NIL
EC_827: 20: ||
EC_827: 21: 	NIL

EC_827 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_817  --> EC_819 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 819 , H : 224 , step : 204 >" as EC_819 #LightBlue
EC_819: 1: par
EC_819: 2: 	par
EC_819: 3: 		par
EC_819: 4: 			par
EC_819: 5: 				par
EC_819: 6: 					par sync [the alarm is disarmed]
EC_819: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_819: 8: 							[ true ] / the alarm is disarmed
EC_819: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_819: 10: 								[ clock==0 ] / turn off the tone
EC_819: 11: 								call( PostProc_R4 )
EC_819: 12: 					&&
EC_819: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_819: 14: 							[ clock==0 ] / alert the emergency center
EC_819: 15: 							call( PostProc_R9 )
EC_819: 16: 				||
EC_819: 17: 					NIL
EC_819: 18: 			||
EC_819: 19: 				NIL
EC_819: 20: 		||
EC_819: 21: 			NIL
EC_819: 22: 	||
EC_819: 23: 		NIL
EC_819: 24: ||
EC_819: 25: 	NIL

EC_819 : DBM: R7_x_resp=60, R3_x_resp=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp=clock, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-240,
EC_819  --> EC_829 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 829 , H : 225 , step : 0 >" as EC_829 #Orange
EC_829: 1: par
EC_829: 2: 	par
EC_829: 3: 		par
EC_829: 4: 			par
EC_829: 5: 				par
EC_829: 6: 					par sync [the alarm is disarmed]
EC_829: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_829: 8: 							[ true ] / the alarm is disarmed
EC_829: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_829: 10: 								[ clock==0 ] / turn off the tone
EC_829: 11: 								call( PostProc_R4 )
EC_829: 12: 					&&
EC_829: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_829: 14: 							[ clock==0 ] / alert the emergency center
EC_829: 15: 							call( PostProc_R9 )
EC_829: 16: 				||
EC_829: 17: 					NIL
EC_829: 18: 			||
EC_829: 19: 				NIL
EC_829: 20: 		||
EC_829: 21: 			NIL
EC_829: 22: 	||
EC_829: 23: 		NIL
EC_829: 24: ||
EC_829: 25: 	NIL

EC_829 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_829  --> EC_830 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 830 , H : 226 , step : 205 >" as EC_830 #LightBlue
EC_830: 1: par
EC_830: 2: 	par
EC_830: 3: 		par
EC_830: 4: 			par
EC_830: 5: 				par
EC_830: 6: 					par sync [the alarm is disarmed]
EC_830: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_830: 8: 							[ true ] / the alarm is disarmed
EC_830: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_830: 10: 								[ clock==0 ] / turn off the tone
EC_830: 11: 								call( PostProc_R4 )
EC_830: 12: 					&&
EC_830: 13: 						call( PostProc_R9 )
EC_830: 14: 				||
EC_830: 15: 					NIL
EC_830: 16: 			||
EC_830: 17: 				NIL
EC_830: 18: 		||
EC_830: 19: 			NIL
EC_830: 20: 	||
EC_830: 21: 		NIL
EC_830: 22: ||
EC_830: 23: 	NIL

EC_830 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_830  --> EC_831 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 831 , H : 227 , step : 0 >" as EC_831 #Pink
EC_831: 1: par
EC_831: 2: 	par
EC_831: 3: 		par
EC_831: 4: 			par
EC_831: 5: 				par
EC_831: 6: 					par sync [the alarm is disarmed]
EC_831: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_831: 8: 							[ true ] / the alarm is disarmed
EC_831: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_831: 10: 								[ clock==0 ] / turn off the tone
EC_831: 11: 								call( PostProc_R4 )
EC_831: 12: 					&&
EC_831: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_831: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_831: 15: 							call( PostProc_R7 )
EC_831: 16: 						++
EC_831: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_831: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_831: 19: 								[ clock==0 ] / alert the emergency center
EC_831: 20: 								call( PostProc_R9 )
EC_831: 21: 				||
EC_831: 22: 					NIL
EC_831: 23: 			||
EC_831: 24: 				NIL
EC_831: 25: 		||
EC_831: 26: 			NIL
EC_831: 27: 	||
EC_831: 28: 		NIL
EC_831: 29: ||
EC_831: 30: 	NIL

EC_831 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_831  --> EC_833 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 833 , H : 228 , step : 0 >" as EC_833 #Orange
EC_833: 1: par
EC_833: 2: 	par
EC_833: 3: 		par
EC_833: 4: 			par
EC_833: 5: 				par
EC_833: 6: 					par sync [the alarm is disarmed]
EC_833: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_833: 8: 							[ true ] / the alarm is disarmed
EC_833: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_833: 10: 								[ clock==0 ] / turn off the tone
EC_833: 11: 								call( PostProc_R4 )
EC_833: 12: 					&&
EC_833: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_833: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_833: 15: 							call( PostProc_R7 )
EC_833: 16: 						++
EC_833: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_833: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_833: 19: 								[ clock==0 ] / alert the emergency center
EC_833: 20: 								call( PostProc_R9 )
EC_833: 21: 				||
EC_833: 22: 					NIL
EC_833: 23: 			||
EC_833: 24: 				NIL
EC_833: 25: 		||
EC_833: 26: 			NIL
EC_833: 27: 	||
EC_833: 28: 		NIL
EC_833: 29: ||
EC_833: 30: 	NIL

EC_833 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_833  --> EC_834 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 834 , H : 229 , step : 206 >" as EC_834 #LightBlue
EC_834: 1: par
EC_834: 2: 	par
EC_834: 3: 		par
EC_834: 4: 			par
EC_834: 5: 				par
EC_834: 6: 					par sync [the alarm is disarmed]
EC_834: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_834: 8: 							[ true ] / the alarm is disarmed
EC_834: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_834: 10: 								[ clock==0 ] / turn off the tone
EC_834: 11: 								call( PostProc_R4 )
EC_834: 12: 					&&
EC_834: 13: 						call( PostProc_R7 )
EC_834: 14: 				||
EC_834: 15: 					NIL
EC_834: 16: 			||
EC_834: 17: 				NIL
EC_834: 18: 		||
EC_834: 19: 			NIL
EC_834: 20: 	||
EC_834: 21: 		NIL
EC_834: 22: ||
EC_834: 23: 	NIL

EC_834 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_834  --> EC_836 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 836 , H : 230 , step : 0 >" as EC_836 #Pink
EC_836: 1: par
EC_836: 2: 	par
EC_836: 3: 		par
EC_836: 4: 			par
EC_836: 5: 				par
EC_836: 6: 					par sync [the alarm is disarmed]
EC_836: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_836: 8: 							[ true ] / the alarm is disarmed
EC_836: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_836: 10: 								[ clock==0 ] / turn off the tone
EC_836: 11: 								call( PostProc_R4 )
EC_836: 12: 					&&
EC_836: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_836: 14: 							[ true ] / the alarm is disarmed
EC_836: 15: 							call( PostProc_R8 )
EC_836: 16: 				||
EC_836: 17: 					NIL
EC_836: 18: 			||
EC_836: 19: 				NIL
EC_836: 20: 		||
EC_836: 21: 			NIL
EC_836: 22: 	||
EC_836: 23: 		NIL
EC_836: 24: ||
EC_836: 25: 	NIL

EC_836 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_836  --> EC_838 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 838 , H : 231 , step : 0 >" as EC_838 #Orange
EC_838: 1: par
EC_838: 2: 	par
EC_838: 3: 		par
EC_838: 4: 			par
EC_838: 5: 				par
EC_838: 6: 					par sync [the alarm is disarmed]
EC_838: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_838: 8: 							[ true ] / the alarm is disarmed
EC_838: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_838: 10: 								[ clock==0 ] / turn off the tone
EC_838: 11: 								call( PostProc_R4 )
EC_838: 12: 					&&
EC_838: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_838: 14: 							[ true ] / the alarm is disarmed
EC_838: 15: 							call( PostProc_R8 )
EC_838: 16: 				||
EC_838: 17: 					NIL
EC_838: 18: 			||
EC_838: 19: 				NIL
EC_838: 20: 		||
EC_838: 21: 			NIL
EC_838: 22: 	||
EC_838: 23: 		NIL
EC_838: 24: ||
EC_838: 25: 	NIL

EC_838 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_838  --> EC_839 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 839 , H : 232 , step : 207 >" as EC_839 #LightBlue
EC_839: 1: par
EC_839: 2: 	par
EC_839: 3: 		par
EC_839: 4: 			par
EC_839: 5: 				par
EC_839: 6: 					par sync [the alarm is disarmed]
EC_839: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_839: 8: 							[ clock==0 ] / turn off the tone
EC_839: 9: 							call( PostProc_R4 )
EC_839: 10: 					&&
EC_839: 11: 						call( PostProc_R8 )
EC_839: 12: 				||
EC_839: 13: 					NIL
EC_839: 14: 			||
EC_839: 15: 				NIL
EC_839: 16: 		||
EC_839: 17: 			NIL
EC_839: 18: 	||
EC_839: 19: 		NIL
EC_839: 20: ||
EC_839: 21: 	NIL

EC_839 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_839  --> EC_840 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 840 , H : 233 , step : 0 >" as EC_840 #Pink
EC_840: 1: par
EC_840: 2: 	par
EC_840: 3: 		par
EC_840: 4: 			par
EC_840: 5: 				par
EC_840: 6: 					par sync [the alarm is disarmed]
EC_840: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_840: 8: 							[ clock==0 ] / turn off the tone
EC_840: 9: 							call( PostProc_R4 )
EC_840: 10: 					&&
EC_840: 11: 						NIL
EC_840: 12: 				||
EC_840: 13: 					NIL
EC_840: 14: 			||
EC_840: 15: 				NIL
EC_840: 16: 		||
EC_840: 17: 			NIL
EC_840: 18: 	||
EC_840: 19: 		NIL
EC_840: 20: ||
EC_840: 21: 	NIL

EC_840 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_840  --> EC_842 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 842 , H : 234 , step : 0 >" as EC_842 #Orange
EC_842: 1: par
EC_842: 2: 	par
EC_842: 3: 		par
EC_842: 4: 			par
EC_842: 5: 				par
EC_842: 6: 					par sync [the alarm is disarmed]
EC_842: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_842: 8: 							[ clock==0 ] / turn off the tone
EC_842: 9: 							call( PostProc_R4 )
EC_842: 10: 					&&
EC_842: 11: 						NIL
EC_842: 12: 				||
EC_842: 13: 					NIL
EC_842: 14: 			||
EC_842: 15: 				NIL
EC_842: 16: 		||
EC_842: 17: 			NIL
EC_842: 18: 	||
EC_842: 19: 		NIL
EC_842: 20: ||
EC_842: 21: 	NIL

EC_842 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_842  --> EC_843 : \lact [True] / META:REDUNDANCE:EC< id : 448 , H : 187 >

state "EC< id : 843 , H : 235 , step : 0 >" as EC_843 #Green
EC_843: 1: par
EC_843: 2: 	par
EC_843: 3: 		par
EC_843: 4: 			par
EC_843: 5: 				par
EC_843: 6: 					par sync [the alarm is disarmed]
EC_843: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_843: 8: 							[ clock==0 ] / turn off the tone
EC_843: 9: 							call( PostProc_R4 )
EC_843: 10: 					&&
EC_843: 11: 						NIL
EC_843: 12: 				||
EC_843: 13: 					NIL
EC_843: 14: 			||
EC_843: 15: 				NIL
EC_843: 16: 		||
EC_843: 17: 			NIL
EC_843: 18: 	||
EC_843: 19: 		NIL
EC_843: 20: ||
EC_843: 21: 	NIL

EC_843 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_775  --> EC_777 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 777 , H : 208 , step : 208 >" as EC_777 #LightBlue
EC_777: 1: par
EC_777: 2: 	par
EC_777: 3: 		par
EC_777: 4: 			par
EC_777: 5: 				par
EC_777: 6: 					par sync [the alarm is disarmed]
EC_777: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_777: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_777: 9: 							call( PostProc_R3 )
EC_777: 10: 						++
EC_777: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_777: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_777: 13: 								[ clock==0 ] / turn off the tone
EC_777: 14: 								call( PostProc_R5 )
EC_777: 15: 					&&
EC_777: 16: 						call( PostProc_R9 )
EC_777: 17: 				||
EC_777: 18: 					NIL
EC_777: 19: 			||
EC_777: 20: 				NIL
EC_777: 21: 		||
EC_777: 22: 			NIL
EC_777: 23: 	||
EC_777: 24: 		NIL
EC_777: 25: ||
EC_777: 26: 	NIL

EC_777 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_777  --> EC_844 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 844 , H : 209 , step : 0 >" as EC_844 #Pink
EC_844: 1: par
EC_844: 2: 	par
EC_844: 3: 		par
EC_844: 4: 			par
EC_844: 5: 				par
EC_844: 6: 					par sync [the alarm is disarmed]
EC_844: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_844: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_844: 9: 							call( PostProc_R3 )
EC_844: 10: 						++
EC_844: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_844: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_844: 13: 								[ clock==0 ] / turn off the tone
EC_844: 14: 								call( PostProc_R5 )
EC_844: 15: 					&&
EC_844: 16: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_844: 17: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_844: 18: 							call( PostProc_R7 )
EC_844: 19: 						++
EC_844: 20: 							[ R7_x_resp==60 ] / deadline at 60
EC_844: 21: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_844: 22: 								[ clock==0 ] / alert the emergency center
EC_844: 23: 								call( PostProc_R9 )
EC_844: 24: 				||
EC_844: 25: 					NIL
EC_844: 26: 			||
EC_844: 27: 				NIL
EC_844: 28: 		||
EC_844: 29: 			NIL
EC_844: 30: 	||
EC_844: 31: 		NIL
EC_844: 32: ||
EC_844: 33: 	NIL

EC_844 : DBM: R7_x_resp=60, R3_x_resp=120, clock<=0, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_844  --> EC_846 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 846 , H : 210 , step : 0 >" as EC_846 #Orange
EC_846: 1: par
EC_846: 2: 	par
EC_846: 3: 		par
EC_846: 4: 			par
EC_846: 5: 				par
EC_846: 6: 					par sync [the alarm is disarmed]
EC_846: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_846: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_846: 9: 							call( PostProc_R3 )
EC_846: 10: 						++
EC_846: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_846: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_846: 13: 								[ clock==0 ] / turn off the tone
EC_846: 14: 								call( PostProc_R5 )
EC_846: 15: 					&&
EC_846: 16: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_846: 17: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_846: 18: 							call( PostProc_R7 )
EC_846: 19: 						++
EC_846: 20: 							[ R7_x_resp==60 ] / deadline at 60
EC_846: 21: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_846: 22: 								[ clock==0 ] / alert the emergency center
EC_846: 23: 								call( PostProc_R9 )
EC_846: 24: 				||
EC_846: 25: 					NIL
EC_846: 26: 			||
EC_846: 27: 				NIL
EC_846: 28: 		||
EC_846: 29: 			NIL
EC_846: 30: 	||
EC_846: 31: 		NIL
EC_846: 32: ||
EC_846: 33: 	NIL

EC_846 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_846  --> EC_847 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 847 , H : 211 , step : 209 >" as EC_847 #LightBlue
EC_847: 1: par
EC_847: 2: 	par
EC_847: 3: 		par
EC_847: 4: 			par
EC_847: 5: 				par
EC_847: 6: 					par sync [the alarm is disarmed]
EC_847: 7: 						call( PostProc_R3 )
EC_847: 8: 					&&
EC_847: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_847: 10: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_847: 11: 							call( PostProc_R7 )
EC_847: 12: 						++
EC_847: 13: 							[ R7_x_resp==60 ] / deadline at 60
EC_847: 14: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_847: 15: 								[ clock==0 ] / alert the emergency center
EC_847: 16: 								call( PostProc_R9 )
EC_847: 17: 				||
EC_847: 18: 					NIL
EC_847: 19: 			||
EC_847: 20: 				NIL
EC_847: 21: 		||
EC_847: 22: 			NIL
EC_847: 23: 	||
EC_847: 24: 		NIL
EC_847: 25: ||
EC_847: 26: 	NIL

EC_847 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_847  --> EC_851 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 851 , H : 212 , step : 0 >" as EC_851 #Pink
EC_851: 1: par
EC_851: 2: 	par
EC_851: 3: 		par
EC_851: 4: 			par
EC_851: 5: 				par
EC_851: 6: 					par sync [the alarm is disarmed]
EC_851: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_851: 8: 							[ true ] / the alarm is disarmed
EC_851: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_851: 10: 								[ clock==0 ] / turn off the tone
EC_851: 11: 								call( PostProc_R4 )
EC_851: 12: 					&&
EC_851: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_851: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_851: 15: 							call( PostProc_R7 )
EC_851: 16: 						++
EC_851: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_851: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_851: 19: 								[ clock==0 ] / alert the emergency center
EC_851: 20: 								call( PostProc_R9 )
EC_851: 21: 				||
EC_851: 22: 					NIL
EC_851: 23: 			||
EC_851: 24: 				NIL
EC_851: 25: 		||
EC_851: 26: 			NIL
EC_851: 27: 	||
EC_851: 28: 		NIL
EC_851: 29: ||
EC_851: 30: 	NIL

EC_851 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_851  --> EC_853 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 853 , H : 213 , step : 0 >" as EC_853 #Orange
EC_853: 1: par
EC_853: 2: 	par
EC_853: 3: 		par
EC_853: 4: 			par
EC_853: 5: 				par
EC_853: 6: 					par sync [the alarm is disarmed]
EC_853: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_853: 8: 							[ true ] / the alarm is disarmed
EC_853: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_853: 10: 								[ clock==0 ] / turn off the tone
EC_853: 11: 								call( PostProc_R4 )
EC_853: 12: 					&&
EC_853: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_853: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_853: 15: 							call( PostProc_R7 )
EC_853: 16: 						++
EC_853: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_853: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_853: 19: 								[ clock==0 ] / alert the emergency center
EC_853: 20: 								call( PostProc_R9 )
EC_853: 21: 				||
EC_853: 22: 					NIL
EC_853: 23: 			||
EC_853: 24: 				NIL
EC_853: 25: 		||
EC_853: 26: 			NIL
EC_853: 27: 	||
EC_853: 28: 		NIL
EC_853: 29: ||
EC_853: 30: 	NIL

EC_853 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_853  --> EC_854 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 854 , H : 214 , step : 210 >" as EC_854 #LightBlue
EC_854: 1: par
EC_854: 2: 	par
EC_854: 3: 		par
EC_854: 4: 			par
EC_854: 5: 				par
EC_854: 6: 					par sync [the alarm is disarmed]
EC_854: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_854: 8: 							[ true ] / the alarm is disarmed
EC_854: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_854: 10: 								[ clock==0 ] / turn off the tone
EC_854: 11: 								call( PostProc_R4 )
EC_854: 12: 					&&
EC_854: 13: 						call( PostProc_R7 )
EC_854: 14: 				||
EC_854: 15: 					NIL
EC_854: 16: 			||
EC_854: 17: 				NIL
EC_854: 18: 		||
EC_854: 19: 			NIL
EC_854: 20: 	||
EC_854: 21: 		NIL
EC_854: 22: ||
EC_854: 23: 	NIL

EC_854 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_854  --> EC_856 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 856 , H : 215 , step : 0 >" as EC_856 #Pink
EC_856: 1: par
EC_856: 2: 	par
EC_856: 3: 		par
EC_856: 4: 			par
EC_856: 5: 				par
EC_856: 6: 					par sync [the alarm is disarmed]
EC_856: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_856: 8: 							[ true ] / the alarm is disarmed
EC_856: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_856: 10: 								[ clock==0 ] / turn off the tone
EC_856: 11: 								call( PostProc_R4 )
EC_856: 12: 					&&
EC_856: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_856: 14: 							[ true ] / the alarm is disarmed
EC_856: 15: 							call( PostProc_R8 )
EC_856: 16: 				||
EC_856: 17: 					NIL
EC_856: 18: 			||
EC_856: 19: 				NIL
EC_856: 20: 		||
EC_856: 21: 			NIL
EC_856: 22: 	||
EC_856: 23: 		NIL
EC_856: 24: ||
EC_856: 25: 	NIL

EC_856 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_856  --> EC_858 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 858 , H : 216 , step : 0 >" as EC_858 #Orange
EC_858: 1: par
EC_858: 2: 	par
EC_858: 3: 		par
EC_858: 4: 			par
EC_858: 5: 				par
EC_858: 6: 					par sync [the alarm is disarmed]
EC_858: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_858: 8: 							[ true ] / the alarm is disarmed
EC_858: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_858: 10: 								[ clock==0 ] / turn off the tone
EC_858: 11: 								call( PostProc_R4 )
EC_858: 12: 					&&
EC_858: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_858: 14: 							[ true ] / the alarm is disarmed
EC_858: 15: 							call( PostProc_R8 )
EC_858: 16: 				||
EC_858: 17: 					NIL
EC_858: 18: 			||
EC_858: 19: 				NIL
EC_858: 20: 		||
EC_858: 21: 			NIL
EC_858: 22: 	||
EC_858: 23: 		NIL
EC_858: 24: ||
EC_858: 25: 	NIL

EC_858 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_858  --> EC_859 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 859 , H : 217 , step : 211 >" as EC_859 #LightBlue
EC_859: 1: par
EC_859: 2: 	par
EC_859: 3: 		par
EC_859: 4: 			par
EC_859: 5: 				par
EC_859: 6: 					par sync [the alarm is disarmed]
EC_859: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_859: 8: 							[ clock==0 ] / turn off the tone
EC_859: 9: 							call( PostProc_R4 )
EC_859: 10: 					&&
EC_859: 11: 						call( PostProc_R8 )
EC_859: 12: 				||
EC_859: 13: 					NIL
EC_859: 14: 			||
EC_859: 15: 				NIL
EC_859: 16: 		||
EC_859: 17: 			NIL
EC_859: 18: 	||
EC_859: 19: 		NIL
EC_859: 20: ||
EC_859: 21: 	NIL

EC_859 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_859  --> EC_860 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 860 , H : 218 , step : 0 >" as EC_860 #Pink
EC_860: 1: par
EC_860: 2: 	par
EC_860: 3: 		par
EC_860: 4: 			par
EC_860: 5: 				par
EC_860: 6: 					par sync [the alarm is disarmed]
EC_860: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_860: 8: 							[ clock==0 ] / turn off the tone
EC_860: 9: 							call( PostProc_R4 )
EC_860: 10: 					&&
EC_860: 11: 						NIL
EC_860: 12: 				||
EC_860: 13: 					NIL
EC_860: 14: 			||
EC_860: 15: 				NIL
EC_860: 16: 		||
EC_860: 17: 			NIL
EC_860: 18: 	||
EC_860: 19: 		NIL
EC_860: 20: ||
EC_860: 21: 	NIL

EC_860 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_860  --> EC_862 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 862 , H : 219 , step : 0 >" as EC_862 #Orange
EC_862: 1: par
EC_862: 2: 	par
EC_862: 3: 		par
EC_862: 4: 			par
EC_862: 5: 				par
EC_862: 6: 					par sync [the alarm is disarmed]
EC_862: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_862: 8: 							[ clock==0 ] / turn off the tone
EC_862: 9: 							call( PostProc_R4 )
EC_862: 10: 					&&
EC_862: 11: 						NIL
EC_862: 12: 				||
EC_862: 13: 					NIL
EC_862: 14: 			||
EC_862: 15: 				NIL
EC_862: 16: 		||
EC_862: 17: 			NIL
EC_862: 18: 	||
EC_862: 19: 		NIL
EC_862: 20: ||
EC_862: 21: 	NIL

EC_862 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_862  --> EC_863 : \lact [True] / META:REDUNDANCE:EC< id : 133 , H : 61 >

state "EC< id : 863 , H : 220 , step : 0 >" as EC_863 #Green
EC_863: 1: par
EC_863: 2: 	par
EC_863: 3: 		par
EC_863: 4: 			par
EC_863: 5: 				par
EC_863: 6: 					par sync [the alarm is disarmed]
EC_863: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_863: 8: 							[ clock==0 ] / turn off the tone
EC_863: 9: 							call( PostProc_R4 )
EC_863: 10: 					&&
EC_863: 11: 						NIL
EC_863: 12: 				||
EC_863: 13: 					NIL
EC_863: 14: 			||
EC_863: 15: 				NIL
EC_863: 16: 		||
EC_863: 17: 			NIL
EC_863: 18: 	||
EC_863: 19: 		NIL
EC_863: 20: ||
EC_863: 21: 	NIL

EC_863 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_853  --> EC_855 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 855 , H : 214 , step : 212 >" as EC_855 #LightBlue
EC_855: 1: par
EC_855: 2: 	par
EC_855: 3: 		par
EC_855: 4: 			par
EC_855: 5: 				par
EC_855: 6: 					par sync [the alarm is disarmed]
EC_855: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_855: 8: 							[ true ] / the alarm is disarmed
EC_855: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_855: 10: 								[ clock==0 ] / turn off the tone
EC_855: 11: 								call( PostProc_R4 )
EC_855: 12: 					&&
EC_855: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_855: 14: 							[ clock==0 ] / alert the emergency center
EC_855: 15: 							call( PostProc_R9 )
EC_855: 16: 				||
EC_855: 17: 					NIL
EC_855: 18: 			||
EC_855: 19: 				NIL
EC_855: 20: 		||
EC_855: 21: 			NIL
EC_855: 22: 	||
EC_855: 23: 		NIL
EC_855: 24: ||
EC_855: 25: 	NIL

EC_855 : DBM: R7_x_resp=60, R3_x_resp=180, clock=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp=clock, R3_x_resp-clock<=120,\l   clock-R3_x_resp<=-120,
EC_855  --> EC_865 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 865 , H : 215 , step : 0 >" as EC_865 #Orange
EC_865: 1: par
EC_865: 2: 	par
EC_865: 3: 		par
EC_865: 4: 			par
EC_865: 5: 				par
EC_865: 6: 					par sync [the alarm is disarmed]
EC_865: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_865: 8: 							[ true ] / the alarm is disarmed
EC_865: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_865: 10: 								[ clock==0 ] / turn off the tone
EC_865: 11: 								call( PostProc_R4 )
EC_865: 12: 					&&
EC_865: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_865: 14: 							[ clock==0 ] / alert the emergency center
EC_865: 15: 							call( PostProc_R9 )
EC_865: 16: 				||
EC_865: 17: 					NIL
EC_865: 18: 			||
EC_865: 19: 				NIL
EC_865: 20: 		||
EC_865: 21: 			NIL
EC_865: 22: 	||
EC_865: 23: 		NIL
EC_865: 24: ||
EC_865: 25: 	NIL

EC_865 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_865  --> EC_866 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 866 , H : 216 , step : 213 >" as EC_866 #LightBlue
EC_866: 1: par
EC_866: 2: 	par
EC_866: 3: 		par
EC_866: 4: 			par
EC_866: 5: 				par
EC_866: 6: 					par sync [the alarm is disarmed]
EC_866: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_866: 8: 							[ true ] / the alarm is disarmed
EC_866: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_866: 10: 								[ clock==0 ] / turn off the tone
EC_866: 11: 								call( PostProc_R4 )
EC_866: 12: 					&&
EC_866: 13: 						call( PostProc_R9 )
EC_866: 14: 				||
EC_866: 15: 					NIL
EC_866: 16: 			||
EC_866: 17: 				NIL
EC_866: 18: 		||
EC_866: 19: 			NIL
EC_866: 20: 	||
EC_866: 21: 		NIL
EC_866: 22: ||
EC_866: 23: 	NIL

EC_866 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_866  --> EC_867 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 867 , H : 217 , step : 0 >" as EC_867 #Pink
EC_867: 1: par
EC_867: 2: 	par
EC_867: 3: 		par
EC_867: 4: 			par
EC_867: 5: 				par
EC_867: 6: 					par sync [the alarm is disarmed]
EC_867: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_867: 8: 							[ true ] / the alarm is disarmed
EC_867: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_867: 10: 								[ clock==0 ] / turn off the tone
EC_867: 11: 								call( PostProc_R4 )
EC_867: 12: 					&&
EC_867: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_867: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_867: 15: 							call( PostProc_R7 )
EC_867: 16: 						++
EC_867: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_867: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_867: 19: 								[ clock==0 ] / alert the emergency center
EC_867: 20: 								call( PostProc_R9 )
EC_867: 21: 				||
EC_867: 22: 					NIL
EC_867: 23: 			||
EC_867: 24: 				NIL
EC_867: 25: 		||
EC_867: 26: 			NIL
EC_867: 27: 	||
EC_867: 28: 		NIL
EC_867: 29: ||
EC_867: 30: 	NIL

EC_867 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_867  --> EC_869 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 869 , H : 218 , step : 0 >" as EC_869 #Orange
EC_869: 1: par
EC_869: 2: 	par
EC_869: 3: 		par
EC_869: 4: 			par
EC_869: 5: 				par
EC_869: 6: 					par sync [the alarm is disarmed]
EC_869: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_869: 8: 							[ true ] / the alarm is disarmed
EC_869: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_869: 10: 								[ clock==0 ] / turn off the tone
EC_869: 11: 								call( PostProc_R4 )
EC_869: 12: 					&&
EC_869: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_869: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_869: 15: 							call( PostProc_R7 )
EC_869: 16: 						++
EC_869: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_869: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_869: 19: 								[ clock==0 ] / alert the emergency center
EC_869: 20: 								call( PostProc_R9 )
EC_869: 21: 				||
EC_869: 22: 					NIL
EC_869: 23: 			||
EC_869: 24: 				NIL
EC_869: 25: 		||
EC_869: 26: 			NIL
EC_869: 27: 	||
EC_869: 28: 		NIL
EC_869: 29: ||
EC_869: 30: 	NIL

EC_869 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_869  --> EC_870 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 870 , H : 219 , step : 214 >" as EC_870 #LightBlue
EC_870: 1: par
EC_870: 2: 	par
EC_870: 3: 		par
EC_870: 4: 			par
EC_870: 5: 				par
EC_870: 6: 					par sync [the alarm is disarmed]
EC_870: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_870: 8: 							[ true ] / the alarm is disarmed
EC_870: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_870: 10: 								[ clock==0 ] / turn off the tone
EC_870: 11: 								call( PostProc_R4 )
EC_870: 12: 					&&
EC_870: 13: 						call( PostProc_R7 )
EC_870: 14: 				||
EC_870: 15: 					NIL
EC_870: 16: 			||
EC_870: 17: 				NIL
EC_870: 18: 		||
EC_870: 19: 			NIL
EC_870: 20: 	||
EC_870: 21: 		NIL
EC_870: 22: ||
EC_870: 23: 	NIL

EC_870 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_870  --> EC_872 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 872 , H : 220 , step : 0 >" as EC_872 #Pink
EC_872: 1: par
EC_872: 2: 	par
EC_872: 3: 		par
EC_872: 4: 			par
EC_872: 5: 				par
EC_872: 6: 					par sync [the alarm is disarmed]
EC_872: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_872: 8: 							[ true ] / the alarm is disarmed
EC_872: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_872: 10: 								[ clock==0 ] / turn off the tone
EC_872: 11: 								call( PostProc_R4 )
EC_872: 12: 					&&
EC_872: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_872: 14: 							[ true ] / the alarm is disarmed
EC_872: 15: 							call( PostProc_R8 )
EC_872: 16: 				||
EC_872: 17: 					NIL
EC_872: 18: 			||
EC_872: 19: 				NIL
EC_872: 20: 		||
EC_872: 21: 			NIL
EC_872: 22: 	||
EC_872: 23: 		NIL
EC_872: 24: ||
EC_872: 25: 	NIL

EC_872 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_872  --> EC_874 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 874 , H : 221 , step : 0 >" as EC_874 #Orange
EC_874: 1: par
EC_874: 2: 	par
EC_874: 3: 		par
EC_874: 4: 			par
EC_874: 5: 				par
EC_874: 6: 					par sync [the alarm is disarmed]
EC_874: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_874: 8: 							[ true ] / the alarm is disarmed
EC_874: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_874: 10: 								[ clock==0 ] / turn off the tone
EC_874: 11: 								call( PostProc_R4 )
EC_874: 12: 					&&
EC_874: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_874: 14: 							[ true ] / the alarm is disarmed
EC_874: 15: 							call( PostProc_R8 )
EC_874: 16: 				||
EC_874: 17: 					NIL
EC_874: 18: 			||
EC_874: 19: 				NIL
EC_874: 20: 		||
EC_874: 21: 			NIL
EC_874: 22: 	||
EC_874: 23: 		NIL
EC_874: 24: ||
EC_874: 25: 	NIL

EC_874 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_874  --> EC_875 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 875 , H : 222 , step : 215 >" as EC_875 #LightBlue
EC_875: 1: par
EC_875: 2: 	par
EC_875: 3: 		par
EC_875: 4: 			par
EC_875: 5: 				par
EC_875: 6: 					par sync [the alarm is disarmed]
EC_875: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_875: 8: 							[ clock==0 ] / turn off the tone
EC_875: 9: 							call( PostProc_R4 )
EC_875: 10: 					&&
EC_875: 11: 						call( PostProc_R8 )
EC_875: 12: 				||
EC_875: 13: 					NIL
EC_875: 14: 			||
EC_875: 15: 				NIL
EC_875: 16: 		||
EC_875: 17: 			NIL
EC_875: 18: 	||
EC_875: 19: 		NIL
EC_875: 20: ||
EC_875: 21: 	NIL

EC_875 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_875  --> EC_876 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 876 , H : 223 , step : 0 >" as EC_876 #Pink
EC_876: 1: par
EC_876: 2: 	par
EC_876: 3: 		par
EC_876: 4: 			par
EC_876: 5: 				par
EC_876: 6: 					par sync [the alarm is disarmed]
EC_876: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_876: 8: 							[ clock==0 ] / turn off the tone
EC_876: 9: 							call( PostProc_R4 )
EC_876: 10: 					&&
EC_876: 11: 						NIL
EC_876: 12: 				||
EC_876: 13: 					NIL
EC_876: 14: 			||
EC_876: 15: 				NIL
EC_876: 16: 		||
EC_876: 17: 			NIL
EC_876: 18: 	||
EC_876: 19: 		NIL
EC_876: 20: ||
EC_876: 21: 	NIL

EC_876 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_876  --> EC_878 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 878 , H : 224 , step : 0 >" as EC_878 #Orange
EC_878: 1: par
EC_878: 2: 	par
EC_878: 3: 		par
EC_878: 4: 			par
EC_878: 5: 				par
EC_878: 6: 					par sync [the alarm is disarmed]
EC_878: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_878: 8: 							[ clock==0 ] / turn off the tone
EC_878: 9: 							call( PostProc_R4 )
EC_878: 10: 					&&
EC_878: 11: 						NIL
EC_878: 12: 				||
EC_878: 13: 					NIL
EC_878: 14: 			||
EC_878: 15: 				NIL
EC_878: 16: 		||
EC_878: 17: 			NIL
EC_878: 18: 	||
EC_878: 19: 		NIL
EC_878: 20: ||
EC_878: 21: 	NIL

EC_878 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_878  --> EC_879 : \lact [True] / META:REDUNDANCE:EC< id : 222 , H : 98 >

state "EC< id : 879 , H : 225 , step : 0 >" as EC_879 #Green
EC_879: 1: par
EC_879: 2: 	par
EC_879: 3: 		par
EC_879: 4: 			par
EC_879: 5: 				par
EC_879: 6: 					par sync [the alarm is disarmed]
EC_879: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_879: 8: 							[ clock==0 ] / turn off the tone
EC_879: 9: 							call( PostProc_R4 )
EC_879: 10: 					&&
EC_879: 11: 						NIL
EC_879: 12: 				||
EC_879: 13: 					NIL
EC_879: 14: 			||
EC_879: 15: 				NIL
EC_879: 16: 		||
EC_879: 17: 			NIL
EC_879: 18: 	||
EC_879: 19: 		NIL
EC_879: 20: ||
EC_879: 21: 	NIL

EC_879 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_869  --> EC_871 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 871 , H : 219 , step : 216 >" as EC_871 #LightBlue
EC_871: 1: par
EC_871: 2: 	par
EC_871: 3: 		par
EC_871: 4: 			par
EC_871: 5: 				par
EC_871: 6: 					par sync [the alarm is disarmed]
EC_871: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_871: 8: 							[ true ] / the alarm is disarmed
EC_871: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_871: 10: 								[ clock==0 ] / turn off the tone
EC_871: 11: 								call( PostProc_R4 )
EC_871: 12: 					&&
EC_871: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_871: 14: 							[ clock==0 ] / alert the emergency center
EC_871: 15: 							call( PostProc_R9 )
EC_871: 16: 				||
EC_871: 17: 					NIL
EC_871: 18: 			||
EC_871: 19: 				NIL
EC_871: 20: 		||
EC_871: 21: 			NIL
EC_871: 22: 	||
EC_871: 23: 		NIL
EC_871: 24: ||
EC_871: 25: 	NIL

EC_871 : DBM: R7_x_resp=60, R3_x_resp=240, clock=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp=clock, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-180,
EC_871  --> EC_881 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 881 , H : 220 , step : 0 >" as EC_881 #Orange
EC_881: 1: par
EC_881: 2: 	par
EC_881: 3: 		par
EC_881: 4: 			par
EC_881: 5: 				par
EC_881: 6: 					par sync [the alarm is disarmed]
EC_881: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_881: 8: 							[ true ] / the alarm is disarmed
EC_881: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_881: 10: 								[ clock==0 ] / turn off the tone
EC_881: 11: 								call( PostProc_R4 )
EC_881: 12: 					&&
EC_881: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_881: 14: 							[ clock==0 ] / alert the emergency center
EC_881: 15: 							call( PostProc_R9 )
EC_881: 16: 				||
EC_881: 17: 					NIL
EC_881: 18: 			||
EC_881: 19: 				NIL
EC_881: 20: 		||
EC_881: 21: 			NIL
EC_881: 22: 	||
EC_881: 23: 		NIL
EC_881: 24: ||
EC_881: 25: 	NIL

EC_881 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_881  --> EC_882 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 882 , H : 221 , step : 217 >" as EC_882 #LightBlue
EC_882: 1: par
EC_882: 2: 	par
EC_882: 3: 		par
EC_882: 4: 			par
EC_882: 5: 				par
EC_882: 6: 					par sync [the alarm is disarmed]
EC_882: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_882: 8: 							[ true ] / the alarm is disarmed
EC_882: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_882: 10: 								[ clock==0 ] / turn off the tone
EC_882: 11: 								call( PostProc_R4 )
EC_882: 12: 					&&
EC_882: 13: 						call( PostProc_R9 )
EC_882: 14: 				||
EC_882: 15: 					NIL
EC_882: 16: 			||
EC_882: 17: 				NIL
EC_882: 18: 		||
EC_882: 19: 			NIL
EC_882: 20: 	||
EC_882: 21: 		NIL
EC_882: 22: ||
EC_882: 23: 	NIL

EC_882 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_882  --> EC_883 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 883 , H : 222 , step : 0 >" as EC_883 #Pink
EC_883: 1: par
EC_883: 2: 	par
EC_883: 3: 		par
EC_883: 4: 			par
EC_883: 5: 				par
EC_883: 6: 					par sync [the alarm is disarmed]
EC_883: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_883: 8: 							[ true ] / the alarm is disarmed
EC_883: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_883: 10: 								[ clock==0 ] / turn off the tone
EC_883: 11: 								call( PostProc_R4 )
EC_883: 12: 					&&
EC_883: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_883: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_883: 15: 							call( PostProc_R7 )
EC_883: 16: 						++
EC_883: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_883: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_883: 19: 								[ clock==0 ] / alert the emergency center
EC_883: 20: 								call( PostProc_R9 )
EC_883: 21: 				||
EC_883: 22: 					NIL
EC_883: 23: 			||
EC_883: 24: 				NIL
EC_883: 25: 		||
EC_883: 26: 			NIL
EC_883: 27: 	||
EC_883: 28: 		NIL
EC_883: 29: ||
EC_883: 30: 	NIL

EC_883 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_883  --> EC_885 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 885 , H : 223 , step : 0 >" as EC_885 #Orange
EC_885: 1: par
EC_885: 2: 	par
EC_885: 3: 		par
EC_885: 4: 			par
EC_885: 5: 				par
EC_885: 6: 					par sync [the alarm is disarmed]
EC_885: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_885: 8: 							[ true ] / the alarm is disarmed
EC_885: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_885: 10: 								[ clock==0 ] / turn off the tone
EC_885: 11: 								call( PostProc_R4 )
EC_885: 12: 					&&
EC_885: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_885: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_885: 15: 							call( PostProc_R7 )
EC_885: 16: 						++
EC_885: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_885: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_885: 19: 								[ clock==0 ] / alert the emergency center
EC_885: 20: 								call( PostProc_R9 )
EC_885: 21: 				||
EC_885: 22: 					NIL
EC_885: 23: 			||
EC_885: 24: 				NIL
EC_885: 25: 		||
EC_885: 26: 			NIL
EC_885: 27: 	||
EC_885: 28: 		NIL
EC_885: 29: ||
EC_885: 30: 	NIL

EC_885 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_885  --> EC_886 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 886 , H : 224 , step : 218 >" as EC_886 #LightBlue
EC_886: 1: par
EC_886: 2: 	par
EC_886: 3: 		par
EC_886: 4: 			par
EC_886: 5: 				par
EC_886: 6: 					par sync [the alarm is disarmed]
EC_886: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_886: 8: 							[ true ] / the alarm is disarmed
EC_886: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_886: 10: 								[ clock==0 ] / turn off the tone
EC_886: 11: 								call( PostProc_R4 )
EC_886: 12: 					&&
EC_886: 13: 						call( PostProc_R7 )
EC_886: 14: 				||
EC_886: 15: 					NIL
EC_886: 16: 			||
EC_886: 17: 				NIL
EC_886: 18: 		||
EC_886: 19: 			NIL
EC_886: 20: 	||
EC_886: 21: 		NIL
EC_886: 22: ||
EC_886: 23: 	NIL

EC_886 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_886  --> EC_888 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 888 , H : 225 , step : 0 >" as EC_888 #Pink
EC_888: 1: par
EC_888: 2: 	par
EC_888: 3: 		par
EC_888: 4: 			par
EC_888: 5: 				par
EC_888: 6: 					par sync [the alarm is disarmed]
EC_888: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_888: 8: 							[ true ] / the alarm is disarmed
EC_888: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_888: 10: 								[ clock==0 ] / turn off the tone
EC_888: 11: 								call( PostProc_R4 )
EC_888: 12: 					&&
EC_888: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_888: 14: 							[ true ] / the alarm is disarmed
EC_888: 15: 							call( PostProc_R8 )
EC_888: 16: 				||
EC_888: 17: 					NIL
EC_888: 18: 			||
EC_888: 19: 				NIL
EC_888: 20: 		||
EC_888: 21: 			NIL
EC_888: 22: 	||
EC_888: 23: 		NIL
EC_888: 24: ||
EC_888: 25: 	NIL

EC_888 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_888  --> EC_890 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 890 , H : 226 , step : 0 >" as EC_890 #Orange
EC_890: 1: par
EC_890: 2: 	par
EC_890: 3: 		par
EC_890: 4: 			par
EC_890: 5: 				par
EC_890: 6: 					par sync [the alarm is disarmed]
EC_890: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_890: 8: 							[ true ] / the alarm is disarmed
EC_890: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_890: 10: 								[ clock==0 ] / turn off the tone
EC_890: 11: 								call( PostProc_R4 )
EC_890: 12: 					&&
EC_890: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_890: 14: 							[ true ] / the alarm is disarmed
EC_890: 15: 							call( PostProc_R8 )
EC_890: 16: 				||
EC_890: 17: 					NIL
EC_890: 18: 			||
EC_890: 19: 				NIL
EC_890: 20: 		||
EC_890: 21: 			NIL
EC_890: 22: 	||
EC_890: 23: 		NIL
EC_890: 24: ||
EC_890: 25: 	NIL

EC_890 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_890  --> EC_891 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 891 , H : 227 , step : 219 >" as EC_891 #LightBlue
EC_891: 1: par
EC_891: 2: 	par
EC_891: 3: 		par
EC_891: 4: 			par
EC_891: 5: 				par
EC_891: 6: 					par sync [the alarm is disarmed]
EC_891: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_891: 8: 							[ clock==0 ] / turn off the tone
EC_891: 9: 							call( PostProc_R4 )
EC_891: 10: 					&&
EC_891: 11: 						call( PostProc_R8 )
EC_891: 12: 				||
EC_891: 13: 					NIL
EC_891: 14: 			||
EC_891: 15: 				NIL
EC_891: 16: 		||
EC_891: 17: 			NIL
EC_891: 18: 	||
EC_891: 19: 		NIL
EC_891: 20: ||
EC_891: 21: 	NIL

EC_891 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_891  --> EC_892 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 892 , H : 228 , step : 0 >" as EC_892 #Pink
EC_892: 1: par
EC_892: 2: 	par
EC_892: 3: 		par
EC_892: 4: 			par
EC_892: 5: 				par
EC_892: 6: 					par sync [the alarm is disarmed]
EC_892: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_892: 8: 							[ clock==0 ] / turn off the tone
EC_892: 9: 							call( PostProc_R4 )
EC_892: 10: 					&&
EC_892: 11: 						NIL
EC_892: 12: 				||
EC_892: 13: 					NIL
EC_892: 14: 			||
EC_892: 15: 				NIL
EC_892: 16: 		||
EC_892: 17: 			NIL
EC_892: 18: 	||
EC_892: 19: 		NIL
EC_892: 20: ||
EC_892: 21: 	NIL

EC_892 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_892  --> EC_894 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 894 , H : 229 , step : 0 >" as EC_894 #Orange
EC_894: 1: par
EC_894: 2: 	par
EC_894: 3: 		par
EC_894: 4: 			par
EC_894: 5: 				par
EC_894: 6: 					par sync [the alarm is disarmed]
EC_894: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_894: 8: 							[ clock==0 ] / turn off the tone
EC_894: 9: 							call( PostProc_R4 )
EC_894: 10: 					&&
EC_894: 11: 						NIL
EC_894: 12: 				||
EC_894: 13: 					NIL
EC_894: 14: 			||
EC_894: 15: 				NIL
EC_894: 16: 		||
EC_894: 17: 			NIL
EC_894: 18: 	||
EC_894: 19: 		NIL
EC_894: 20: ||
EC_894: 21: 	NIL

EC_894 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_894  --> EC_895 : \lact [True] / META:REDUNDANCE:EC< id : 327 , H : 140 >

state "EC< id : 895 , H : 230 , step : 0 >" as EC_895 #Green
EC_895: 1: par
EC_895: 2: 	par
EC_895: 3: 		par
EC_895: 4: 			par
EC_895: 5: 				par
EC_895: 6: 					par sync [the alarm is disarmed]
EC_895: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_895: 8: 							[ clock==0 ] / turn off the tone
EC_895: 9: 							call( PostProc_R4 )
EC_895: 10: 					&&
EC_895: 11: 						NIL
EC_895: 12: 				||
EC_895: 13: 					NIL
EC_895: 14: 			||
EC_895: 15: 				NIL
EC_895: 16: 		||
EC_895: 17: 			NIL
EC_895: 18: 	||
EC_895: 19: 		NIL
EC_895: 20: ||
EC_895: 21: 	NIL

EC_895 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_885  --> EC_887 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 887 , H : 224 , step : 220 >" as EC_887 #LightBlue
EC_887: 1: par
EC_887: 2: 	par
EC_887: 3: 		par
EC_887: 4: 			par
EC_887: 5: 				par
EC_887: 6: 					par sync [the alarm is disarmed]
EC_887: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_887: 8: 							[ true ] / the alarm is disarmed
EC_887: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_887: 10: 								[ clock==0 ] / turn off the tone
EC_887: 11: 								call( PostProc_R4 )
EC_887: 12: 					&&
EC_887: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_887: 14: 							[ clock==0 ] / alert the emergency center
EC_887: 15: 							call( PostProc_R9 )
EC_887: 16: 				||
EC_887: 17: 					NIL
EC_887: 18: 			||
EC_887: 19: 				NIL
EC_887: 20: 		||
EC_887: 21: 			NIL
EC_887: 22: 	||
EC_887: 23: 		NIL
EC_887: 24: ||
EC_887: 25: 	NIL

EC_887 : DBM: R7_x_resp=60, R3_x_resp=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp=clock, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-240,
EC_887  --> EC_897 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 897 , H : 225 , step : 0 >" as EC_897 #Orange
EC_897: 1: par
EC_897: 2: 	par
EC_897: 3: 		par
EC_897: 4: 			par
EC_897: 5: 				par
EC_897: 6: 					par sync [the alarm is disarmed]
EC_897: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_897: 8: 							[ true ] / the alarm is disarmed
EC_897: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_897: 10: 								[ clock==0 ] / turn off the tone
EC_897: 11: 								call( PostProc_R4 )
EC_897: 12: 					&&
EC_897: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_897: 14: 							[ clock==0 ] / alert the emergency center
EC_897: 15: 							call( PostProc_R9 )
EC_897: 16: 				||
EC_897: 17: 					NIL
EC_897: 18: 			||
EC_897: 19: 				NIL
EC_897: 20: 		||
EC_897: 21: 			NIL
EC_897: 22: 	||
EC_897: 23: 		NIL
EC_897: 24: ||
EC_897: 25: 	NIL

EC_897 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_897  --> EC_898 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 898 , H : 226 , step : 221 >" as EC_898 #LightBlue
EC_898: 1: par
EC_898: 2: 	par
EC_898: 3: 		par
EC_898: 4: 			par
EC_898: 5: 				par
EC_898: 6: 					par sync [the alarm is disarmed]
EC_898: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_898: 8: 							[ true ] / the alarm is disarmed
EC_898: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_898: 10: 								[ clock==0 ] / turn off the tone
EC_898: 11: 								call( PostProc_R4 )
EC_898: 12: 					&&
EC_898: 13: 						call( PostProc_R9 )
EC_898: 14: 				||
EC_898: 15: 					NIL
EC_898: 16: 			||
EC_898: 17: 				NIL
EC_898: 18: 		||
EC_898: 19: 			NIL
EC_898: 20: 	||
EC_898: 21: 		NIL
EC_898: 22: ||
EC_898: 23: 	NIL

EC_898 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_898  --> EC_899 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 899 , H : 227 , step : 0 >" as EC_899 #Pink
EC_899: 1: par
EC_899: 2: 	par
EC_899: 3: 		par
EC_899: 4: 			par
EC_899: 5: 				par
EC_899: 6: 					par sync [the alarm is disarmed]
EC_899: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_899: 8: 							[ true ] / the alarm is disarmed
EC_899: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_899: 10: 								[ clock==0 ] / turn off the tone
EC_899: 11: 								call( PostProc_R4 )
EC_899: 12: 					&&
EC_899: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_899: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_899: 15: 							call( PostProc_R7 )
EC_899: 16: 						++
EC_899: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_899: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_899: 19: 								[ clock==0 ] / alert the emergency center
EC_899: 20: 								call( PostProc_R9 )
EC_899: 21: 				||
EC_899: 22: 					NIL
EC_899: 23: 			||
EC_899: 24: 				NIL
EC_899: 25: 		||
EC_899: 26: 			NIL
EC_899: 27: 	||
EC_899: 28: 		NIL
EC_899: 29: ||
EC_899: 30: 	NIL

EC_899 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_899  --> EC_901 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 901 , H : 228 , step : 0 >" as EC_901 #Orange
EC_901: 1: par
EC_901: 2: 	par
EC_901: 3: 		par
EC_901: 4: 			par
EC_901: 5: 				par
EC_901: 6: 					par sync [the alarm is disarmed]
EC_901: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_901: 8: 							[ true ] / the alarm is disarmed
EC_901: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_901: 10: 								[ clock==0 ] / turn off the tone
EC_901: 11: 								call( PostProc_R4 )
EC_901: 12: 					&&
EC_901: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_901: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_901: 15: 							call( PostProc_R7 )
EC_901: 16: 						++
EC_901: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_901: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_901: 19: 								[ clock==0 ] / alert the emergency center
EC_901: 20: 								call( PostProc_R9 )
EC_901: 21: 				||
EC_901: 22: 					NIL
EC_901: 23: 			||
EC_901: 24: 				NIL
EC_901: 25: 		||
EC_901: 26: 			NIL
EC_901: 27: 	||
EC_901: 28: 		NIL
EC_901: 29: ||
EC_901: 30: 	NIL

EC_901 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_901  --> EC_902 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 902 , H : 229 , step : 222 >" as EC_902 #LightBlue
EC_902: 1: par
EC_902: 2: 	par
EC_902: 3: 		par
EC_902: 4: 			par
EC_902: 5: 				par
EC_902: 6: 					par sync [the alarm is disarmed]
EC_902: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_902: 8: 							[ true ] / the alarm is disarmed
EC_902: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_902: 10: 								[ clock==0 ] / turn off the tone
EC_902: 11: 								call( PostProc_R4 )
EC_902: 12: 					&&
EC_902: 13: 						call( PostProc_R7 )
EC_902: 14: 				||
EC_902: 15: 					NIL
EC_902: 16: 			||
EC_902: 17: 				NIL
EC_902: 18: 		||
EC_902: 19: 			NIL
EC_902: 20: 	||
EC_902: 21: 		NIL
EC_902: 22: ||
EC_902: 23: 	NIL

EC_902 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_902  --> EC_904 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 904 , H : 230 , step : 0 >" as EC_904 #Pink
EC_904: 1: par
EC_904: 2: 	par
EC_904: 3: 		par
EC_904: 4: 			par
EC_904: 5: 				par
EC_904: 6: 					par sync [the alarm is disarmed]
EC_904: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_904: 8: 							[ true ] / the alarm is disarmed
EC_904: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_904: 10: 								[ clock==0 ] / turn off the tone
EC_904: 11: 								call( PostProc_R4 )
EC_904: 12: 					&&
EC_904: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_904: 14: 							[ true ] / the alarm is disarmed
EC_904: 15: 							call( PostProc_R8 )
EC_904: 16: 				||
EC_904: 17: 					NIL
EC_904: 18: 			||
EC_904: 19: 				NIL
EC_904: 20: 		||
EC_904: 21: 			NIL
EC_904: 22: 	||
EC_904: 23: 		NIL
EC_904: 24: ||
EC_904: 25: 	NIL

EC_904 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_904  --> EC_906 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 906 , H : 231 , step : 0 >" as EC_906 #Orange
EC_906: 1: par
EC_906: 2: 	par
EC_906: 3: 		par
EC_906: 4: 			par
EC_906: 5: 				par
EC_906: 6: 					par sync [the alarm is disarmed]
EC_906: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_906: 8: 							[ true ] / the alarm is disarmed
EC_906: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_906: 10: 								[ clock==0 ] / turn off the tone
EC_906: 11: 								call( PostProc_R4 )
EC_906: 12: 					&&
EC_906: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_906: 14: 							[ true ] / the alarm is disarmed
EC_906: 15: 							call( PostProc_R8 )
EC_906: 16: 				||
EC_906: 17: 					NIL
EC_906: 18: 			||
EC_906: 19: 				NIL
EC_906: 20: 		||
EC_906: 21: 			NIL
EC_906: 22: 	||
EC_906: 23: 		NIL
EC_906: 24: ||
EC_906: 25: 	NIL

EC_906 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_906  --> EC_907 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 907 , H : 232 , step : 223 >" as EC_907 #LightBlue
EC_907: 1: par
EC_907: 2: 	par
EC_907: 3: 		par
EC_907: 4: 			par
EC_907: 5: 				par
EC_907: 6: 					par sync [the alarm is disarmed]
EC_907: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_907: 8: 							[ clock==0 ] / turn off the tone
EC_907: 9: 							call( PostProc_R4 )
EC_907: 10: 					&&
EC_907: 11: 						call( PostProc_R8 )
EC_907: 12: 				||
EC_907: 13: 					NIL
EC_907: 14: 			||
EC_907: 15: 				NIL
EC_907: 16: 		||
EC_907: 17: 			NIL
EC_907: 18: 	||
EC_907: 19: 		NIL
EC_907: 20: ||
EC_907: 21: 	NIL

EC_907 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_907  --> EC_908 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 908 , H : 233 , step : 0 >" as EC_908 #Pink
EC_908: 1: par
EC_908: 2: 	par
EC_908: 3: 		par
EC_908: 4: 			par
EC_908: 5: 				par
EC_908: 6: 					par sync [the alarm is disarmed]
EC_908: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_908: 8: 							[ clock==0 ] / turn off the tone
EC_908: 9: 							call( PostProc_R4 )
EC_908: 10: 					&&
EC_908: 11: 						NIL
EC_908: 12: 				||
EC_908: 13: 					NIL
EC_908: 14: 			||
EC_908: 15: 				NIL
EC_908: 16: 		||
EC_908: 17: 			NIL
EC_908: 18: 	||
EC_908: 19: 		NIL
EC_908: 20: ||
EC_908: 21: 	NIL

EC_908 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_908  --> EC_910 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 910 , H : 234 , step : 0 >" as EC_910 #Orange
EC_910: 1: par
EC_910: 2: 	par
EC_910: 3: 		par
EC_910: 4: 			par
EC_910: 5: 				par
EC_910: 6: 					par sync [the alarm is disarmed]
EC_910: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_910: 8: 							[ clock==0 ] / turn off the tone
EC_910: 9: 							call( PostProc_R4 )
EC_910: 10: 					&&
EC_910: 11: 						NIL
EC_910: 12: 				||
EC_910: 13: 					NIL
EC_910: 14: 			||
EC_910: 15: 				NIL
EC_910: 16: 		||
EC_910: 17: 			NIL
EC_910: 18: 	||
EC_910: 19: 		NIL
EC_910: 20: ||
EC_910: 21: 	NIL

EC_910 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_910  --> EC_911 : \lact [True] / META:REDUNDANCE:EC< id : 448 , H : 187 >

state "EC< id : 911 , H : 235 , step : 0 >" as EC_911 #Green
EC_911: 1: par
EC_911: 2: 	par
EC_911: 3: 		par
EC_911: 4: 			par
EC_911: 5: 				par
EC_911: 6: 					par sync [the alarm is disarmed]
EC_911: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_911: 8: 							[ clock==0 ] / turn off the tone
EC_911: 9: 							call( PostProc_R4 )
EC_911: 10: 					&&
EC_911: 11: 						NIL
EC_911: 12: 				||
EC_911: 13: 					NIL
EC_911: 14: 			||
EC_911: 15: 				NIL
EC_911: 16: 		||
EC_911: 17: 			NIL
EC_911: 18: 	||
EC_911: 19: 		NIL
EC_911: 20: ||
EC_911: 21: 	NIL

EC_911 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_846  --> EC_848 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 848 , H : 211 , step : 224 >" as EC_848 #LightBlue
EC_848: 1: par
EC_848: 2: 	par
EC_848: 3: 		par
EC_848: 4: 			par
EC_848: 5: 				par
EC_848: 6: 					par sync [the alarm is disarmed]
EC_848: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_848: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_848: 9: 							call( PostProc_R3 )
EC_848: 10: 						++
EC_848: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_848: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_848: 13: 								[ clock==0 ] / turn off the tone
EC_848: 14: 								call( PostProc_R5 )
EC_848: 15: 					&&
EC_848: 16: 						call( PostProc_R7 )
EC_848: 17: 				||
EC_848: 18: 					NIL
EC_848: 19: 			||
EC_848: 20: 				NIL
EC_848: 21: 		||
EC_848: 22: 			NIL
EC_848: 23: 	||
EC_848: 24: 		NIL
EC_848: 25: ||
EC_848: 26: 	NIL

EC_848 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_848  --> EC_912 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 912 , H : 212 , step : 0 >" as EC_912 #Pink
EC_912: 1: par
EC_912: 2: 	par
EC_912: 3: 		par
EC_912: 4: 			par
EC_912: 5: 				par
EC_912: 6: 					par sync [the alarm is disarmed]
EC_912: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_912: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_912: 9: 							call( PostProc_R3 )
EC_912: 10: 						++
EC_912: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_912: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_912: 13: 								[ clock==0 ] / turn off the tone
EC_912: 14: 								call( PostProc_R5 )
EC_912: 15: 					&&
EC_912: 16: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_912: 17: 							[ true ] / the alarm is disarmed
EC_912: 18: 							call( PostProc_R8 )
EC_912: 19: 				||
EC_912: 20: 					NIL
EC_912: 21: 			||
EC_912: 22: 				NIL
EC_912: 23: 		||
EC_912: 24: 			NIL
EC_912: 25: 	||
EC_912: 26: 		NIL
EC_912: 27: ||
EC_912: 28: 	NIL

EC_912 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_912  --> EC_914 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 914 , H : 213 , step : 0 >" as EC_914 #Orange
EC_914: 1: par
EC_914: 2: 	par
EC_914: 3: 		par
EC_914: 4: 			par
EC_914: 5: 				par
EC_914: 6: 					par sync [the alarm is disarmed]
EC_914: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_914: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_914: 9: 							call( PostProc_R3 )
EC_914: 10: 						++
EC_914: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_914: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_914: 13: 								[ clock==0 ] / turn off the tone
EC_914: 14: 								call( PostProc_R5 )
EC_914: 15: 					&&
EC_914: 16: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_914: 17: 							[ true ] / the alarm is disarmed
EC_914: 18: 							call( PostProc_R8 )
EC_914: 19: 				||
EC_914: 20: 					NIL
EC_914: 21: 			||
EC_914: 22: 				NIL
EC_914: 23: 		||
EC_914: 24: 			NIL
EC_914: 25: 	||
EC_914: 26: 		NIL
EC_914: 27: ||
EC_914: 28: 	NIL

EC_914 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_914  --> EC_915 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 915 , H : 214 , step : 225 >" as EC_915 #LightBlue
EC_915: 1: par
EC_915: 2: 	par
EC_915: 3: 		par
EC_915: 4: 			par
EC_915: 5: 				par
EC_915: 6: 					par sync [the alarm is disarmed]
EC_915: 7: 						call( PostProc_R3 )
EC_915: 8: 					&&
EC_915: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_915: 10: 							[ true ] / the alarm is disarmed
EC_915: 11: 							call( PostProc_R8 )
EC_915: 12: 				||
EC_915: 13: 					NIL
EC_915: 14: 			||
EC_915: 15: 				NIL
EC_915: 16: 		||
EC_915: 17: 			NIL
EC_915: 18: 	||
EC_915: 19: 		NIL
EC_915: 20: ||
EC_915: 21: 	NIL

EC_915 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_915  --> EC_917 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 917 , H : 215 , step : 0 >" as EC_917 #Pink
EC_917: 1: par
EC_917: 2: 	par
EC_917: 3: 		par
EC_917: 4: 			par
EC_917: 5: 				par
EC_917: 6: 					par sync [the alarm is disarmed]
EC_917: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_917: 8: 							[ true ] / the alarm is disarmed
EC_917: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_917: 10: 								[ clock==0 ] / turn off the tone
EC_917: 11: 								call( PostProc_R4 )
EC_917: 12: 					&&
EC_917: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_917: 14: 							[ true ] / the alarm is disarmed
EC_917: 15: 							call( PostProc_R8 )
EC_917: 16: 				||
EC_917: 17: 					NIL
EC_917: 18: 			||
EC_917: 19: 				NIL
EC_917: 20: 		||
EC_917: 21: 			NIL
EC_917: 22: 	||
EC_917: 23: 		NIL
EC_917: 24: ||
EC_917: 25: 	NIL

EC_917 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_917  --> EC_919 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 919 , H : 216 , step : 0 >" as EC_919 #Orange
EC_919: 1: par
EC_919: 2: 	par
EC_919: 3: 		par
EC_919: 4: 			par
EC_919: 5: 				par
EC_919: 6: 					par sync [the alarm is disarmed]
EC_919: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_919: 8: 							[ true ] / the alarm is disarmed
EC_919: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_919: 10: 								[ clock==0 ] / turn off the tone
EC_919: 11: 								call( PostProc_R4 )
EC_919: 12: 					&&
EC_919: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_919: 14: 							[ true ] / the alarm is disarmed
EC_919: 15: 							call( PostProc_R8 )
EC_919: 16: 				||
EC_919: 17: 					NIL
EC_919: 18: 			||
EC_919: 19: 				NIL
EC_919: 20: 		||
EC_919: 21: 			NIL
EC_919: 22: 	||
EC_919: 23: 		NIL
EC_919: 24: ||
EC_919: 25: 	NIL

EC_919 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_919  --> EC_920 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 920 , H : 217 , step : 226 >" as EC_920 #LightBlue
EC_920: 1: par
EC_920: 2: 	par
EC_920: 3: 		par
EC_920: 4: 			par
EC_920: 5: 				par
EC_920: 6: 					par sync [the alarm is disarmed]
EC_920: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_920: 8: 							[ clock==0 ] / turn off the tone
EC_920: 9: 							call( PostProc_R4 )
EC_920: 10: 					&&
EC_920: 11: 						call( PostProc_R8 )
EC_920: 12: 				||
EC_920: 13: 					NIL
EC_920: 14: 			||
EC_920: 15: 				NIL
EC_920: 16: 		||
EC_920: 17: 			NIL
EC_920: 18: 	||
EC_920: 19: 		NIL
EC_920: 20: ||
EC_920: 21: 	NIL

EC_920 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_920  --> EC_921 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 921 , H : 218 , step : 0 >" as EC_921 #Pink
EC_921: 1: par
EC_921: 2: 	par
EC_921: 3: 		par
EC_921: 4: 			par
EC_921: 5: 				par
EC_921: 6: 					par sync [the alarm is disarmed]
EC_921: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_921: 8: 							[ clock==0 ] / turn off the tone
EC_921: 9: 							call( PostProc_R4 )
EC_921: 10: 					&&
EC_921: 11: 						NIL
EC_921: 12: 				||
EC_921: 13: 					NIL
EC_921: 14: 			||
EC_921: 15: 				NIL
EC_921: 16: 		||
EC_921: 17: 			NIL
EC_921: 18: 	||
EC_921: 19: 		NIL
EC_921: 20: ||
EC_921: 21: 	NIL

EC_921 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=60,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp=clock, R3_x_resp-clock<=120, clock-R3_x_resp<=-120,
EC_921  --> EC_923 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 923 , H : 219 , step : 0 >" as EC_923 #Orange
EC_923: 1: par
EC_923: 2: 	par
EC_923: 3: 		par
EC_923: 4: 			par
EC_923: 5: 				par
EC_923: 6: 					par sync [the alarm is disarmed]
EC_923: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_923: 8: 							[ clock==0 ] / turn off the tone
EC_923: 9: 							call( PostProc_R4 )
EC_923: 10: 					&&
EC_923: 11: 						NIL
EC_923: 12: 				||
EC_923: 13: 					NIL
EC_923: 14: 			||
EC_923: 15: 				NIL
EC_923: 16: 		||
EC_923: 17: 			NIL
EC_923: 18: 	||
EC_923: 19: 		NIL
EC_923: 20: ||
EC_923: 21: 	NIL

EC_923 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_923  --> EC_924 : \lact [True] / META:REDUNDANCE:EC< id : 133 , H : 61 >

state "EC< id : 924 , H : 220 , step : 0 >" as EC_924 #Green
EC_924: 1: par
EC_924: 2: 	par
EC_924: 3: 		par
EC_924: 4: 			par
EC_924: 5: 				par
EC_924: 6: 					par sync [the alarm is disarmed]
EC_924: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_924: 8: 							[ clock==0 ] / turn off the tone
EC_924: 9: 							call( PostProc_R4 )
EC_924: 10: 					&&
EC_924: 11: 						NIL
EC_924: 12: 				||
EC_924: 13: 					NIL
EC_924: 14: 			||
EC_924: 15: 				NIL
EC_924: 16: 		||
EC_924: 17: 			NIL
EC_924: 18: 	||
EC_924: 19: 		NIL
EC_924: 20: ||
EC_924: 21: 	NIL

EC_924 : DBM: R7_x_resp<=60, 120<=R3_x_resp<=180, clock<=0,\l   R7_x_resp-R3_x_resp<=-120, R3_x_resp-R7_x_resp<=120,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-120,
EC_846  --> EC_849 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 849 , H : 211 , step : 227 >" as EC_849 #LightBlue
EC_849: 1: par
EC_849: 2: 	par
EC_849: 3: 		par
EC_849: 4: 			par
EC_849: 5: 				par
EC_849: 6: 					par sync [the alarm is disarmed]
EC_849: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_849: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_849: 9: 							call( PostProc_R3 )
EC_849: 10: 						++
EC_849: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_849: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_849: 13: 								[ clock==0 ] / turn off the tone
EC_849: 14: 								call( PostProc_R5 )
EC_849: 15: 					&&
EC_849: 16: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_849: 17: 							[ clock==0 ] / alert the emergency center
EC_849: 18: 							call( PostProc_R9 )
EC_849: 19: 				||
EC_849: 20: 					NIL
EC_849: 21: 			||
EC_849: 22: 				NIL
EC_849: 23: 		||
EC_849: 24: 			NIL
EC_849: 25: 	||
EC_849: 26: 		NIL
EC_849: 27: ||
EC_849: 28: 	NIL

EC_849 : DBM: R7_x_resp=60, R3_x_resp=180, clock=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp=clock, R3_x_resp-clock<=120,\l   clock-R3_x_resp<=-120,
EC_849  --> EC_926 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 926 , H : 212 , step : 0 >" as EC_926 #Orange
EC_926: 1: par
EC_926: 2: 	par
EC_926: 3: 		par
EC_926: 4: 			par
EC_926: 5: 				par
EC_926: 6: 					par sync [the alarm is disarmed]
EC_926: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_926: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_926: 9: 							call( PostProc_R3 )
EC_926: 10: 						++
EC_926: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_926: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_926: 13: 								[ clock==0 ] / turn off the tone
EC_926: 14: 								call( PostProc_R5 )
EC_926: 15: 					&&
EC_926: 16: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_926: 17: 							[ clock==0 ] / alert the emergency center
EC_926: 18: 							call( PostProc_R9 )
EC_926: 19: 				||
EC_926: 20: 					NIL
EC_926: 21: 			||
EC_926: 22: 				NIL
EC_926: 23: 		||
EC_926: 24: 			NIL
EC_926: 25: 	||
EC_926: 26: 		NIL
EC_926: 27: ||
EC_926: 28: 	NIL

EC_926 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_926  --> EC_927 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 927 , H : 213 , step : 228 >" as EC_927 #LightBlue
EC_927: 1: par
EC_927: 2: 	par
EC_927: 3: 		par
EC_927: 4: 			par
EC_927: 5: 				par
EC_927: 6: 					par sync [the alarm is disarmed]
EC_927: 7: 						call( PostProc_R3 )
EC_927: 8: 					&&
EC_927: 9: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_927: 10: 							[ clock==0 ] / alert the emergency center
EC_927: 11: 							call( PostProc_R9 )
EC_927: 12: 				||
EC_927: 13: 					NIL
EC_927: 14: 			||
EC_927: 15: 				NIL
EC_927: 16: 		||
EC_927: 17: 			NIL
EC_927: 18: 	||
EC_927: 19: 		NIL
EC_927: 20: ||
EC_927: 21: 	NIL

EC_927 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_927  --> EC_930 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 930 , H : 214 , step : 0 >" as EC_930 #Pink
EC_930: 1: par
EC_930: 2: 	par
EC_930: 3: 		par
EC_930: 4: 			par
EC_930: 5: 				par
EC_930: 6: 					par sync [the alarm is disarmed]
EC_930: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_930: 8: 							[ true ] / the alarm is disarmed
EC_930: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_930: 10: 								[ clock==0 ] / turn off the tone
EC_930: 11: 								call( PostProc_R4 )
EC_930: 12: 					&&
EC_930: 13: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_930: 14: 							[ clock==0 ] / alert the emergency center
EC_930: 15: 							call( PostProc_R9 )
EC_930: 16: 				||
EC_930: 17: 					NIL
EC_930: 18: 			||
EC_930: 19: 				NIL
EC_930: 20: 		||
EC_930: 21: 			NIL
EC_930: 22: 	||
EC_930: 23: 		NIL
EC_930: 24: ||
EC_930: 25: 	NIL

EC_930 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_930  --> EC_932 : inv [] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 932 , H : 215 , step : 0 >" as EC_932 #Orange
EC_932: 1: par
EC_932: 2: 	par
EC_932: 3: 		par
EC_932: 4: 			par
EC_932: 5: 				par
EC_932: 6: 					par sync [the alarm is disarmed]
EC_932: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_932: 8: 							[ true ] / the alarm is disarmed
EC_932: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_932: 10: 								[ clock==0 ] / turn off the tone
EC_932: 11: 								call( PostProc_R4 )
EC_932: 12: 					&&
EC_932: 13: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_932: 14: 							[ clock==0 ] / alert the emergency center
EC_932: 15: 							call( PostProc_R9 )
EC_932: 16: 				||
EC_932: 17: 					NIL
EC_932: 18: 			||
EC_932: 19: 				NIL
EC_932: 20: 		||
EC_932: 21: 			NIL
EC_932: 22: 	||
EC_932: 23: 		NIL
EC_932: 24: ||
EC_932: 25: 	NIL

EC_932 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_932  --> EC_933 : inv [] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 933 , H : 216 , step : 229 >" as EC_933 #LightBlue
EC_933: 1: par
EC_933: 2: 	par
EC_933: 3: 		par
EC_933: 4: 			par
EC_933: 5: 				par
EC_933: 6: 					par sync [the alarm is disarmed]
EC_933: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_933: 8: 							[ true ] / the alarm is disarmed
EC_933: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_933: 10: 								[ clock==0 ] / turn off the tone
EC_933: 11: 								call( PostProc_R4 )
EC_933: 12: 					&&
EC_933: 13: 						call( PostProc_R9 )
EC_933: 14: 				||
EC_933: 15: 					NIL
EC_933: 16: 			||
EC_933: 17: 				NIL
EC_933: 18: 		||
EC_933: 19: 			NIL
EC_933: 20: 	||
EC_933: 21: 		NIL
EC_933: 22: ||
EC_933: 23: 	NIL

EC_933 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_933  --> EC_934 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 934 , H : 217 , step : 0 >" as EC_934 #Pink
EC_934: 1: par
EC_934: 2: 	par
EC_934: 3: 		par
EC_934: 4: 			par
EC_934: 5: 				par
EC_934: 6: 					par sync [the alarm is disarmed]
EC_934: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_934: 8: 							[ true ] / the alarm is disarmed
EC_934: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_934: 10: 								[ clock==0 ] / turn off the tone
EC_934: 11: 								call( PostProc_R4 )
EC_934: 12: 					&&
EC_934: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_934: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_934: 15: 							call( PostProc_R7 )
EC_934: 16: 						++
EC_934: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_934: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_934: 19: 								[ clock==0 ] / alert the emergency center
EC_934: 20: 								call( PostProc_R9 )
EC_934: 21: 				||
EC_934: 22: 					NIL
EC_934: 23: 			||
EC_934: 24: 				NIL
EC_934: 25: 		||
EC_934: 26: 			NIL
EC_934: 27: 	||
EC_934: 28: 		NIL
EC_934: 29: ||
EC_934: 30: 	NIL

EC_934 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_934  --> EC_936 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 936 , H : 218 , step : 0 >" as EC_936 #Orange
EC_936: 1: par
EC_936: 2: 	par
EC_936: 3: 		par
EC_936: 4: 			par
EC_936: 5: 				par
EC_936: 6: 					par sync [the alarm is disarmed]
EC_936: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_936: 8: 							[ true ] / the alarm is disarmed
EC_936: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_936: 10: 								[ clock==0 ] / turn off the tone
EC_936: 11: 								call( PostProc_R4 )
EC_936: 12: 					&&
EC_936: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_936: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_936: 15: 							call( PostProc_R7 )
EC_936: 16: 						++
EC_936: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_936: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_936: 19: 								[ clock==0 ] / alert the emergency center
EC_936: 20: 								call( PostProc_R9 )
EC_936: 21: 				||
EC_936: 22: 					NIL
EC_936: 23: 			||
EC_936: 24: 				NIL
EC_936: 25: 		||
EC_936: 26: 			NIL
EC_936: 27: 	||
EC_936: 28: 		NIL
EC_936: 29: ||
EC_936: 30: 	NIL

EC_936 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_936  --> EC_937 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 937 , H : 219 , step : 230 >" as EC_937 #LightBlue
EC_937: 1: par
EC_937: 2: 	par
EC_937: 3: 		par
EC_937: 4: 			par
EC_937: 5: 				par
EC_937: 6: 					par sync [the alarm is disarmed]
EC_937: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_937: 8: 							[ true ] / the alarm is disarmed
EC_937: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_937: 10: 								[ clock==0 ] / turn off the tone
EC_937: 11: 								call( PostProc_R4 )
EC_937: 12: 					&&
EC_937: 13: 						call( PostProc_R7 )
EC_937: 14: 				||
EC_937: 15: 					NIL
EC_937: 16: 			||
EC_937: 17: 				NIL
EC_937: 18: 		||
EC_937: 19: 			NIL
EC_937: 20: 	||
EC_937: 21: 		NIL
EC_937: 22: ||
EC_937: 23: 	NIL

EC_937 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_937  --> EC_939 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 939 , H : 220 , step : 0 >" as EC_939 #Pink
EC_939: 1: par
EC_939: 2: 	par
EC_939: 3: 		par
EC_939: 4: 			par
EC_939: 5: 				par
EC_939: 6: 					par sync [the alarm is disarmed]
EC_939: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_939: 8: 							[ true ] / the alarm is disarmed
EC_939: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_939: 10: 								[ clock==0 ] / turn off the tone
EC_939: 11: 								call( PostProc_R4 )
EC_939: 12: 					&&
EC_939: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_939: 14: 							[ true ] / the alarm is disarmed
EC_939: 15: 							call( PostProc_R8 )
EC_939: 16: 				||
EC_939: 17: 					NIL
EC_939: 18: 			||
EC_939: 19: 				NIL
EC_939: 20: 		||
EC_939: 21: 			NIL
EC_939: 22: 	||
EC_939: 23: 		NIL
EC_939: 24: ||
EC_939: 25: 	NIL

EC_939 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_939  --> EC_941 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 941 , H : 221 , step : 0 >" as EC_941 #Orange
EC_941: 1: par
EC_941: 2: 	par
EC_941: 3: 		par
EC_941: 4: 			par
EC_941: 5: 				par
EC_941: 6: 					par sync [the alarm is disarmed]
EC_941: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_941: 8: 							[ true ] / the alarm is disarmed
EC_941: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_941: 10: 								[ clock==0 ] / turn off the tone
EC_941: 11: 								call( PostProc_R4 )
EC_941: 12: 					&&
EC_941: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_941: 14: 							[ true ] / the alarm is disarmed
EC_941: 15: 							call( PostProc_R8 )
EC_941: 16: 				||
EC_941: 17: 					NIL
EC_941: 18: 			||
EC_941: 19: 				NIL
EC_941: 20: 		||
EC_941: 21: 			NIL
EC_941: 22: 	||
EC_941: 23: 		NIL
EC_941: 24: ||
EC_941: 25: 	NIL

EC_941 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_941  --> EC_942 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 942 , H : 222 , step : 231 >" as EC_942 #LightBlue
EC_942: 1: par
EC_942: 2: 	par
EC_942: 3: 		par
EC_942: 4: 			par
EC_942: 5: 				par
EC_942: 6: 					par sync [the alarm is disarmed]
EC_942: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_942: 8: 							[ clock==0 ] / turn off the tone
EC_942: 9: 							call( PostProc_R4 )
EC_942: 10: 					&&
EC_942: 11: 						call( PostProc_R8 )
EC_942: 12: 				||
EC_942: 13: 					NIL
EC_942: 14: 			||
EC_942: 15: 				NIL
EC_942: 16: 		||
EC_942: 17: 			NIL
EC_942: 18: 	||
EC_942: 19: 		NIL
EC_942: 20: ||
EC_942: 21: 	NIL

EC_942 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_942  --> EC_943 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 943 , H : 223 , step : 0 >" as EC_943 #Pink
EC_943: 1: par
EC_943: 2: 	par
EC_943: 3: 		par
EC_943: 4: 			par
EC_943: 5: 				par
EC_943: 6: 					par sync [the alarm is disarmed]
EC_943: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_943: 8: 							[ clock==0 ] / turn off the tone
EC_943: 9: 							call( PostProc_R4 )
EC_943: 10: 					&&
EC_943: 11: 						NIL
EC_943: 12: 				||
EC_943: 13: 					NIL
EC_943: 14: 			||
EC_943: 15: 				NIL
EC_943: 16: 		||
EC_943: 17: 			NIL
EC_943: 18: 	||
EC_943: 19: 		NIL
EC_943: 20: ||
EC_943: 21: 	NIL

EC_943 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_943  --> EC_945 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 945 , H : 224 , step : 0 >" as EC_945 #Orange
EC_945: 1: par
EC_945: 2: 	par
EC_945: 3: 		par
EC_945: 4: 			par
EC_945: 5: 				par
EC_945: 6: 					par sync [the alarm is disarmed]
EC_945: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_945: 8: 							[ clock==0 ] / turn off the tone
EC_945: 9: 							call( PostProc_R4 )
EC_945: 10: 					&&
EC_945: 11: 						NIL
EC_945: 12: 				||
EC_945: 13: 					NIL
EC_945: 14: 			||
EC_945: 15: 				NIL
EC_945: 16: 		||
EC_945: 17: 			NIL
EC_945: 18: 	||
EC_945: 19: 		NIL
EC_945: 20: ||
EC_945: 21: 	NIL

EC_945 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_945  --> EC_946 : \lact [True] / META:REDUNDANCE:EC< id : 222 , H : 98 >

state "EC< id : 946 , H : 225 , step : 0 >" as EC_946 #Green
EC_946: 1: par
EC_946: 2: 	par
EC_946: 3: 		par
EC_946: 4: 			par
EC_946: 5: 				par
EC_946: 6: 					par sync [the alarm is disarmed]
EC_946: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_946: 8: 							[ clock==0 ] / turn off the tone
EC_946: 9: 							call( PostProc_R4 )
EC_946: 10: 					&&
EC_946: 11: 						NIL
EC_946: 12: 				||
EC_946: 13: 					NIL
EC_946: 14: 			||
EC_946: 15: 				NIL
EC_946: 16: 		||
EC_946: 17: 			NIL
EC_946: 18: 	||
EC_946: 19: 		NIL
EC_946: 20: ||
EC_946: 21: 	NIL

EC_946 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_936  --> EC_938 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 938 , H : 219 , step : 232 >" as EC_938 #LightBlue
EC_938: 1: par
EC_938: 2: 	par
EC_938: 3: 		par
EC_938: 4: 			par
EC_938: 5: 				par
EC_938: 6: 					par sync [the alarm is disarmed]
EC_938: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_938: 8: 							[ true ] / the alarm is disarmed
EC_938: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_938: 10: 								[ clock==0 ] / turn off the tone
EC_938: 11: 								call( PostProc_R4 )
EC_938: 12: 					&&
EC_938: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_938: 14: 							[ clock==0 ] / alert the emergency center
EC_938: 15: 							call( PostProc_R9 )
EC_938: 16: 				||
EC_938: 17: 					NIL
EC_938: 18: 			||
EC_938: 19: 				NIL
EC_938: 20: 		||
EC_938: 21: 			NIL
EC_938: 22: 	||
EC_938: 23: 		NIL
EC_938: 24: ||
EC_938: 25: 	NIL

EC_938 : DBM: R7_x_resp=60, R3_x_resp=240, clock=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp=clock, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-180,
EC_938  --> EC_948 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 948 , H : 220 , step : 0 >" as EC_948 #Orange
EC_948: 1: par
EC_948: 2: 	par
EC_948: 3: 		par
EC_948: 4: 			par
EC_948: 5: 				par
EC_948: 6: 					par sync [the alarm is disarmed]
EC_948: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_948: 8: 							[ true ] / the alarm is disarmed
EC_948: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_948: 10: 								[ clock==0 ] / turn off the tone
EC_948: 11: 								call( PostProc_R4 )
EC_948: 12: 					&&
EC_948: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_948: 14: 							[ clock==0 ] / alert the emergency center
EC_948: 15: 							call( PostProc_R9 )
EC_948: 16: 				||
EC_948: 17: 					NIL
EC_948: 18: 			||
EC_948: 19: 				NIL
EC_948: 20: 		||
EC_948: 21: 			NIL
EC_948: 22: 	||
EC_948: 23: 		NIL
EC_948: 24: ||
EC_948: 25: 	NIL

EC_948 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_948  --> EC_949 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 949 , H : 221 , step : 233 >" as EC_949 #LightBlue
EC_949: 1: par
EC_949: 2: 	par
EC_949: 3: 		par
EC_949: 4: 			par
EC_949: 5: 				par
EC_949: 6: 					par sync [the alarm is disarmed]
EC_949: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_949: 8: 							[ true ] / the alarm is disarmed
EC_949: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_949: 10: 								[ clock==0 ] / turn off the tone
EC_949: 11: 								call( PostProc_R4 )
EC_949: 12: 					&&
EC_949: 13: 						call( PostProc_R9 )
EC_949: 14: 				||
EC_949: 15: 					NIL
EC_949: 16: 			||
EC_949: 17: 				NIL
EC_949: 18: 		||
EC_949: 19: 			NIL
EC_949: 20: 	||
EC_949: 21: 		NIL
EC_949: 22: ||
EC_949: 23: 	NIL

EC_949 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_949  --> EC_950 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 950 , H : 222 , step : 0 >" as EC_950 #Pink
EC_950: 1: par
EC_950: 2: 	par
EC_950: 3: 		par
EC_950: 4: 			par
EC_950: 5: 				par
EC_950: 6: 					par sync [the alarm is disarmed]
EC_950: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_950: 8: 							[ true ] / the alarm is disarmed
EC_950: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_950: 10: 								[ clock==0 ] / turn off the tone
EC_950: 11: 								call( PostProc_R4 )
EC_950: 12: 					&&
EC_950: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_950: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_950: 15: 							call( PostProc_R7 )
EC_950: 16: 						++
EC_950: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_950: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_950: 19: 								[ clock==0 ] / alert the emergency center
EC_950: 20: 								call( PostProc_R9 )
EC_950: 21: 				||
EC_950: 22: 					NIL
EC_950: 23: 			||
EC_950: 24: 				NIL
EC_950: 25: 		||
EC_950: 26: 			NIL
EC_950: 27: 	||
EC_950: 28: 		NIL
EC_950: 29: ||
EC_950: 30: 	NIL

EC_950 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_950  --> EC_952 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 952 , H : 223 , step : 0 >" as EC_952 #Orange
EC_952: 1: par
EC_952: 2: 	par
EC_952: 3: 		par
EC_952: 4: 			par
EC_952: 5: 				par
EC_952: 6: 					par sync [the alarm is disarmed]
EC_952: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_952: 8: 							[ true ] / the alarm is disarmed
EC_952: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_952: 10: 								[ clock==0 ] / turn off the tone
EC_952: 11: 								call( PostProc_R4 )
EC_952: 12: 					&&
EC_952: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_952: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_952: 15: 							call( PostProc_R7 )
EC_952: 16: 						++
EC_952: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_952: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_952: 19: 								[ clock==0 ] / alert the emergency center
EC_952: 20: 								call( PostProc_R9 )
EC_952: 21: 				||
EC_952: 22: 					NIL
EC_952: 23: 			||
EC_952: 24: 				NIL
EC_952: 25: 		||
EC_952: 26: 			NIL
EC_952: 27: 	||
EC_952: 28: 		NIL
EC_952: 29: ||
EC_952: 30: 	NIL

EC_952 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_952  --> EC_953 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 953 , H : 224 , step : 234 >" as EC_953 #LightBlue
EC_953: 1: par
EC_953: 2: 	par
EC_953: 3: 		par
EC_953: 4: 			par
EC_953: 5: 				par
EC_953: 6: 					par sync [the alarm is disarmed]
EC_953: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_953: 8: 							[ true ] / the alarm is disarmed
EC_953: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_953: 10: 								[ clock==0 ] / turn off the tone
EC_953: 11: 								call( PostProc_R4 )
EC_953: 12: 					&&
EC_953: 13: 						call( PostProc_R7 )
EC_953: 14: 				||
EC_953: 15: 					NIL
EC_953: 16: 			||
EC_953: 17: 				NIL
EC_953: 18: 		||
EC_953: 19: 			NIL
EC_953: 20: 	||
EC_953: 21: 		NIL
EC_953: 22: ||
EC_953: 23: 	NIL

EC_953 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_953  --> EC_955 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 955 , H : 225 , step : 0 >" as EC_955 #Pink
EC_955: 1: par
EC_955: 2: 	par
EC_955: 3: 		par
EC_955: 4: 			par
EC_955: 5: 				par
EC_955: 6: 					par sync [the alarm is disarmed]
EC_955: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_955: 8: 							[ true ] / the alarm is disarmed
EC_955: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_955: 10: 								[ clock==0 ] / turn off the tone
EC_955: 11: 								call( PostProc_R4 )
EC_955: 12: 					&&
EC_955: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_955: 14: 							[ true ] / the alarm is disarmed
EC_955: 15: 							call( PostProc_R8 )
EC_955: 16: 				||
EC_955: 17: 					NIL
EC_955: 18: 			||
EC_955: 19: 				NIL
EC_955: 20: 		||
EC_955: 21: 			NIL
EC_955: 22: 	||
EC_955: 23: 		NIL
EC_955: 24: ||
EC_955: 25: 	NIL

EC_955 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_955  --> EC_957 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 957 , H : 226 , step : 0 >" as EC_957 #Orange
EC_957: 1: par
EC_957: 2: 	par
EC_957: 3: 		par
EC_957: 4: 			par
EC_957: 5: 				par
EC_957: 6: 					par sync [the alarm is disarmed]
EC_957: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_957: 8: 							[ true ] / the alarm is disarmed
EC_957: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_957: 10: 								[ clock==0 ] / turn off the tone
EC_957: 11: 								call( PostProc_R4 )
EC_957: 12: 					&&
EC_957: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_957: 14: 							[ true ] / the alarm is disarmed
EC_957: 15: 							call( PostProc_R8 )
EC_957: 16: 				||
EC_957: 17: 					NIL
EC_957: 18: 			||
EC_957: 19: 				NIL
EC_957: 20: 		||
EC_957: 21: 			NIL
EC_957: 22: 	||
EC_957: 23: 		NIL
EC_957: 24: ||
EC_957: 25: 	NIL

EC_957 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_957  --> EC_958 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 958 , H : 227 , step : 235 >" as EC_958 #LightBlue
EC_958: 1: par
EC_958: 2: 	par
EC_958: 3: 		par
EC_958: 4: 			par
EC_958: 5: 				par
EC_958: 6: 					par sync [the alarm is disarmed]
EC_958: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_958: 8: 							[ clock==0 ] / turn off the tone
EC_958: 9: 							call( PostProc_R4 )
EC_958: 10: 					&&
EC_958: 11: 						call( PostProc_R8 )
EC_958: 12: 				||
EC_958: 13: 					NIL
EC_958: 14: 			||
EC_958: 15: 				NIL
EC_958: 16: 		||
EC_958: 17: 			NIL
EC_958: 18: 	||
EC_958: 19: 		NIL
EC_958: 20: ||
EC_958: 21: 	NIL

EC_958 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_958  --> EC_959 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 959 , H : 228 , step : 0 >" as EC_959 #Pink
EC_959: 1: par
EC_959: 2: 	par
EC_959: 3: 		par
EC_959: 4: 			par
EC_959: 5: 				par
EC_959: 6: 					par sync [the alarm is disarmed]
EC_959: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_959: 8: 							[ clock==0 ] / turn off the tone
EC_959: 9: 							call( PostProc_R4 )
EC_959: 10: 					&&
EC_959: 11: 						NIL
EC_959: 12: 				||
EC_959: 13: 					NIL
EC_959: 14: 			||
EC_959: 15: 				NIL
EC_959: 16: 		||
EC_959: 17: 			NIL
EC_959: 18: 	||
EC_959: 19: 		NIL
EC_959: 20: ||
EC_959: 21: 	NIL

EC_959 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_959  --> EC_961 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 961 , H : 229 , step : 0 >" as EC_961 #Orange
EC_961: 1: par
EC_961: 2: 	par
EC_961: 3: 		par
EC_961: 4: 			par
EC_961: 5: 				par
EC_961: 6: 					par sync [the alarm is disarmed]
EC_961: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_961: 8: 							[ clock==0 ] / turn off the tone
EC_961: 9: 							call( PostProc_R4 )
EC_961: 10: 					&&
EC_961: 11: 						NIL
EC_961: 12: 				||
EC_961: 13: 					NIL
EC_961: 14: 			||
EC_961: 15: 				NIL
EC_961: 16: 		||
EC_961: 17: 			NIL
EC_961: 18: 	||
EC_961: 19: 		NIL
EC_961: 20: ||
EC_961: 21: 	NIL

EC_961 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_961  --> EC_962 : \lact [True] / META:REDUNDANCE:EC< id : 327 , H : 140 >

state "EC< id : 962 , H : 230 , step : 0 >" as EC_962 #Green
EC_962: 1: par
EC_962: 2: 	par
EC_962: 3: 		par
EC_962: 4: 			par
EC_962: 5: 				par
EC_962: 6: 					par sync [the alarm is disarmed]
EC_962: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_962: 8: 							[ clock==0 ] / turn off the tone
EC_962: 9: 							call( PostProc_R4 )
EC_962: 10: 					&&
EC_962: 11: 						NIL
EC_962: 12: 				||
EC_962: 13: 					NIL
EC_962: 14: 			||
EC_962: 15: 				NIL
EC_962: 16: 		||
EC_962: 17: 			NIL
EC_962: 18: 	||
EC_962: 19: 		NIL
EC_962: 20: ||
EC_962: 21: 	NIL

EC_962 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_952  --> EC_954 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 954 , H : 224 , step : 236 >" as EC_954 #LightBlue
EC_954: 1: par
EC_954: 2: 	par
EC_954: 3: 		par
EC_954: 4: 			par
EC_954: 5: 				par
EC_954: 6: 					par sync [the alarm is disarmed]
EC_954: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_954: 8: 							[ true ] / the alarm is disarmed
EC_954: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_954: 10: 								[ clock==0 ] / turn off the tone
EC_954: 11: 								call( PostProc_R4 )
EC_954: 12: 					&&
EC_954: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_954: 14: 							[ clock==0 ] / alert the emergency center
EC_954: 15: 							call( PostProc_R9 )
EC_954: 16: 				||
EC_954: 17: 					NIL
EC_954: 18: 			||
EC_954: 19: 				NIL
EC_954: 20: 		||
EC_954: 21: 			NIL
EC_954: 22: 	||
EC_954: 23: 		NIL
EC_954: 24: ||
EC_954: 25: 	NIL

EC_954 : DBM: R7_x_resp=60, R3_x_resp=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp=clock, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-240,
EC_954  --> EC_964 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 964 , H : 225 , step : 0 >" as EC_964 #Orange
EC_964: 1: par
EC_964: 2: 	par
EC_964: 3: 		par
EC_964: 4: 			par
EC_964: 5: 				par
EC_964: 6: 					par sync [the alarm is disarmed]
EC_964: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_964: 8: 							[ true ] / the alarm is disarmed
EC_964: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_964: 10: 								[ clock==0 ] / turn off the tone
EC_964: 11: 								call( PostProc_R4 )
EC_964: 12: 					&&
EC_964: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_964: 14: 							[ clock==0 ] / alert the emergency center
EC_964: 15: 							call( PostProc_R9 )
EC_964: 16: 				||
EC_964: 17: 					NIL
EC_964: 18: 			||
EC_964: 19: 				NIL
EC_964: 20: 		||
EC_964: 21: 			NIL
EC_964: 22: 	||
EC_964: 23: 		NIL
EC_964: 24: ||
EC_964: 25: 	NIL

EC_964 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_964  --> EC_965 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 965 , H : 226 , step : 237 >" as EC_965 #LightBlue
EC_965: 1: par
EC_965: 2: 	par
EC_965: 3: 		par
EC_965: 4: 			par
EC_965: 5: 				par
EC_965: 6: 					par sync [the alarm is disarmed]
EC_965: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_965: 8: 							[ true ] / the alarm is disarmed
EC_965: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_965: 10: 								[ clock==0 ] / turn off the tone
EC_965: 11: 								call( PostProc_R4 )
EC_965: 12: 					&&
EC_965: 13: 						call( PostProc_R9 )
EC_965: 14: 				||
EC_965: 15: 					NIL
EC_965: 16: 			||
EC_965: 17: 				NIL
EC_965: 18: 		||
EC_965: 19: 			NIL
EC_965: 20: 	||
EC_965: 21: 		NIL
EC_965: 22: ||
EC_965: 23: 	NIL

EC_965 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_965  --> EC_966 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 966 , H : 227 , step : 0 >" as EC_966 #Pink
EC_966: 1: par
EC_966: 2: 	par
EC_966: 3: 		par
EC_966: 4: 			par
EC_966: 5: 				par
EC_966: 6: 					par sync [the alarm is disarmed]
EC_966: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_966: 8: 							[ true ] / the alarm is disarmed
EC_966: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_966: 10: 								[ clock==0 ] / turn off the tone
EC_966: 11: 								call( PostProc_R4 )
EC_966: 12: 					&&
EC_966: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_966: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_966: 15: 							call( PostProc_R7 )
EC_966: 16: 						++
EC_966: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_966: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_966: 19: 								[ clock==0 ] / alert the emergency center
EC_966: 20: 								call( PostProc_R9 )
EC_966: 21: 				||
EC_966: 22: 					NIL
EC_966: 23: 			||
EC_966: 24: 				NIL
EC_966: 25: 		||
EC_966: 26: 			NIL
EC_966: 27: 	||
EC_966: 28: 		NIL
EC_966: 29: ||
EC_966: 30: 	NIL

EC_966 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_966  --> EC_968 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 968 , H : 228 , step : 0 >" as EC_968 #Orange
EC_968: 1: par
EC_968: 2: 	par
EC_968: 3: 		par
EC_968: 4: 			par
EC_968: 5: 				par
EC_968: 6: 					par sync [the alarm is disarmed]
EC_968: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_968: 8: 							[ true ] / the alarm is disarmed
EC_968: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_968: 10: 								[ clock==0 ] / turn off the tone
EC_968: 11: 								call( PostProc_R4 )
EC_968: 12: 					&&
EC_968: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_968: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_968: 15: 							call( PostProc_R7 )
EC_968: 16: 						++
EC_968: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_968: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_968: 19: 								[ clock==0 ] / alert the emergency center
EC_968: 20: 								call( PostProc_R9 )
EC_968: 21: 				||
EC_968: 22: 					NIL
EC_968: 23: 			||
EC_968: 24: 				NIL
EC_968: 25: 		||
EC_968: 26: 			NIL
EC_968: 27: 	||
EC_968: 28: 		NIL
EC_968: 29: ||
EC_968: 30: 	NIL

EC_968 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_968  --> EC_969 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 969 , H : 229 , step : 238 >" as EC_969 #LightBlue
EC_969: 1: par
EC_969: 2: 	par
EC_969: 3: 		par
EC_969: 4: 			par
EC_969: 5: 				par
EC_969: 6: 					par sync [the alarm is disarmed]
EC_969: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_969: 8: 							[ true ] / the alarm is disarmed
EC_969: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_969: 10: 								[ clock==0 ] / turn off the tone
EC_969: 11: 								call( PostProc_R4 )
EC_969: 12: 					&&
EC_969: 13: 						call( PostProc_R7 )
EC_969: 14: 				||
EC_969: 15: 					NIL
EC_969: 16: 			||
EC_969: 17: 				NIL
EC_969: 18: 		||
EC_969: 19: 			NIL
EC_969: 20: 	||
EC_969: 21: 		NIL
EC_969: 22: ||
EC_969: 23: 	NIL

EC_969 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_969  --> EC_971 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 971 , H : 230 , step : 0 >" as EC_971 #Pink
EC_971: 1: par
EC_971: 2: 	par
EC_971: 3: 		par
EC_971: 4: 			par
EC_971: 5: 				par
EC_971: 6: 					par sync [the alarm is disarmed]
EC_971: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_971: 8: 							[ true ] / the alarm is disarmed
EC_971: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_971: 10: 								[ clock==0 ] / turn off the tone
EC_971: 11: 								call( PostProc_R4 )
EC_971: 12: 					&&
EC_971: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_971: 14: 							[ true ] / the alarm is disarmed
EC_971: 15: 							call( PostProc_R8 )
EC_971: 16: 				||
EC_971: 17: 					NIL
EC_971: 18: 			||
EC_971: 19: 				NIL
EC_971: 20: 		||
EC_971: 21: 			NIL
EC_971: 22: 	||
EC_971: 23: 		NIL
EC_971: 24: ||
EC_971: 25: 	NIL

EC_971 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_971  --> EC_973 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 973 , H : 231 , step : 0 >" as EC_973 #Orange
EC_973: 1: par
EC_973: 2: 	par
EC_973: 3: 		par
EC_973: 4: 			par
EC_973: 5: 				par
EC_973: 6: 					par sync [the alarm is disarmed]
EC_973: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_973: 8: 							[ true ] / the alarm is disarmed
EC_973: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_973: 10: 								[ clock==0 ] / turn off the tone
EC_973: 11: 								call( PostProc_R4 )
EC_973: 12: 					&&
EC_973: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_973: 14: 							[ true ] / the alarm is disarmed
EC_973: 15: 							call( PostProc_R8 )
EC_973: 16: 				||
EC_973: 17: 					NIL
EC_973: 18: 			||
EC_973: 19: 				NIL
EC_973: 20: 		||
EC_973: 21: 			NIL
EC_973: 22: 	||
EC_973: 23: 		NIL
EC_973: 24: ||
EC_973: 25: 	NIL

EC_973 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_973  --> EC_974 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 974 , H : 232 , step : 239 >" as EC_974 #LightBlue
EC_974: 1: par
EC_974: 2: 	par
EC_974: 3: 		par
EC_974: 4: 			par
EC_974: 5: 				par
EC_974: 6: 					par sync [the alarm is disarmed]
EC_974: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_974: 8: 							[ clock==0 ] / turn off the tone
EC_974: 9: 							call( PostProc_R4 )
EC_974: 10: 					&&
EC_974: 11: 						call( PostProc_R8 )
EC_974: 12: 				||
EC_974: 13: 					NIL
EC_974: 14: 			||
EC_974: 15: 				NIL
EC_974: 16: 		||
EC_974: 17: 			NIL
EC_974: 18: 	||
EC_974: 19: 		NIL
EC_974: 20: ||
EC_974: 21: 	NIL

EC_974 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_974  --> EC_975 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 975 , H : 233 , step : 0 >" as EC_975 #Pink
EC_975: 1: par
EC_975: 2: 	par
EC_975: 3: 		par
EC_975: 4: 			par
EC_975: 5: 				par
EC_975: 6: 					par sync [the alarm is disarmed]
EC_975: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_975: 8: 							[ clock==0 ] / turn off the tone
EC_975: 9: 							call( PostProc_R4 )
EC_975: 10: 					&&
EC_975: 11: 						NIL
EC_975: 12: 				||
EC_975: 13: 					NIL
EC_975: 14: 			||
EC_975: 15: 				NIL
EC_975: 16: 		||
EC_975: 17: 			NIL
EC_975: 18: 	||
EC_975: 19: 		NIL
EC_975: 20: ||
EC_975: 21: 	NIL

EC_975 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_975  --> EC_977 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 977 , H : 234 , step : 0 >" as EC_977 #Orange
EC_977: 1: par
EC_977: 2: 	par
EC_977: 3: 		par
EC_977: 4: 			par
EC_977: 5: 				par
EC_977: 6: 					par sync [the alarm is disarmed]
EC_977: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_977: 8: 							[ clock==0 ] / turn off the tone
EC_977: 9: 							call( PostProc_R4 )
EC_977: 10: 					&&
EC_977: 11: 						NIL
EC_977: 12: 				||
EC_977: 13: 					NIL
EC_977: 14: 			||
EC_977: 15: 				NIL
EC_977: 16: 		||
EC_977: 17: 			NIL
EC_977: 18: 	||
EC_977: 19: 		NIL
EC_977: 20: ||
EC_977: 21: 	NIL

EC_977 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_977  --> EC_978 : \lact [True] / META:REDUNDANCE:EC< id : 448 , H : 187 >

state "EC< id : 978 , H : 235 , step : 0 >" as EC_978 #Green
EC_978: 1: par
EC_978: 2: 	par
EC_978: 3: 		par
EC_978: 4: 			par
EC_978: 5: 				par
EC_978: 6: 					par sync [the alarm is disarmed]
EC_978: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_978: 8: 							[ clock==0 ] / turn off the tone
EC_978: 9: 							call( PostProc_R4 )
EC_978: 10: 					&&
EC_978: 11: 						NIL
EC_978: 12: 				||
EC_978: 13: 					NIL
EC_978: 14: 			||
EC_978: 15: 				NIL
EC_978: 16: 		||
EC_978: 17: 			NIL
EC_978: 18: 	||
EC_978: 19: 		NIL
EC_978: 20: ||
EC_978: 21: 	NIL

EC_978 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_926  --> EC_928 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 928 , H : 213 , step : 240 >" as EC_928 #LightBlue
EC_928: 1: par
EC_928: 2: 	par
EC_928: 3: 		par
EC_928: 4: 			par
EC_928: 5: 				par
EC_928: 6: 					par sync [the alarm is disarmed]
EC_928: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_928: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_928: 9: 							call( PostProc_R3 )
EC_928: 10: 						++
EC_928: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_928: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_928: 13: 								[ clock==0 ] / turn off the tone
EC_928: 14: 								call( PostProc_R5 )
EC_928: 15: 					&&
EC_928: 16: 						call( PostProc_R9 )
EC_928: 17: 				||
EC_928: 18: 					NIL
EC_928: 19: 			||
EC_928: 20: 				NIL
EC_928: 21: 		||
EC_928: 22: 			NIL
EC_928: 23: 	||
EC_928: 24: 		NIL
EC_928: 25: ||
EC_928: 26: 	NIL

EC_928 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_928  --> EC_979 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 979 , H : 214 , step : 0 >" as EC_979 #Pink
EC_979: 1: par
EC_979: 2: 	par
EC_979: 3: 		par
EC_979: 4: 			par
EC_979: 5: 				par
EC_979: 6: 					par sync [the alarm is disarmed]
EC_979: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_979: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_979: 9: 							call( PostProc_R3 )
EC_979: 10: 						++
EC_979: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_979: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_979: 13: 								[ clock==0 ] / turn off the tone
EC_979: 14: 								call( PostProc_R5 )
EC_979: 15: 					&&
EC_979: 16: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_979: 17: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_979: 18: 							call( PostProc_R7 )
EC_979: 19: 						++
EC_979: 20: 							[ R7_x_resp==60 ] / deadline at 60
EC_979: 21: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_979: 22: 								[ clock==0 ] / alert the emergency center
EC_979: 23: 								call( PostProc_R9 )
EC_979: 24: 				||
EC_979: 25: 					NIL
EC_979: 26: 			||
EC_979: 27: 				NIL
EC_979: 28: 		||
EC_979: 29: 			NIL
EC_979: 30: 	||
EC_979: 31: 		NIL
EC_979: 32: ||
EC_979: 33: 	NIL

EC_979 : DBM: R7_x_resp=60, R3_x_resp=180, clock<=0, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_979  --> EC_981 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 981 , H : 215 , step : 0 >" as EC_981 #Orange
EC_981: 1: par
EC_981: 2: 	par
EC_981: 3: 		par
EC_981: 4: 			par
EC_981: 5: 				par
EC_981: 6: 					par sync [the alarm is disarmed]
EC_981: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_981: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_981: 9: 							call( PostProc_R3 )
EC_981: 10: 						++
EC_981: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_981: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_981: 13: 								[ clock==0 ] / turn off the tone
EC_981: 14: 								call( PostProc_R5 )
EC_981: 15: 					&&
EC_981: 16: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_981: 17: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_981: 18: 							call( PostProc_R7 )
EC_981: 19: 						++
EC_981: 20: 							[ R7_x_resp==60 ] / deadline at 60
EC_981: 21: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_981: 22: 								[ clock==0 ] / alert the emergency center
EC_981: 23: 								call( PostProc_R9 )
EC_981: 24: 				||
EC_981: 25: 					NIL
EC_981: 26: 			||
EC_981: 27: 				NIL
EC_981: 28: 		||
EC_981: 29: 			NIL
EC_981: 30: 	||
EC_981: 31: 		NIL
EC_981: 32: ||
EC_981: 33: 	NIL

EC_981 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_981  --> EC_982 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 982 , H : 216 , step : 241 >" as EC_982 #LightBlue
EC_982: 1: par
EC_982: 2: 	par
EC_982: 3: 		par
EC_982: 4: 			par
EC_982: 5: 				par
EC_982: 6: 					par sync [the alarm is disarmed]
EC_982: 7: 						call( PostProc_R3 )
EC_982: 8: 					&&
EC_982: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_982: 10: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_982: 11: 							call( PostProc_R7 )
EC_982: 12: 						++
EC_982: 13: 							[ R7_x_resp==60 ] / deadline at 60
EC_982: 14: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_982: 15: 								[ clock==0 ] / alert the emergency center
EC_982: 16: 								call( PostProc_R9 )
EC_982: 17: 				||
EC_982: 18: 					NIL
EC_982: 19: 			||
EC_982: 20: 				NIL
EC_982: 21: 		||
EC_982: 22: 			NIL
EC_982: 23: 	||
EC_982: 24: 		NIL
EC_982: 25: ||
EC_982: 26: 	NIL

EC_982 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_982  --> EC_986 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 986 , H : 217 , step : 0 >" as EC_986 #Pink
EC_986: 1: par
EC_986: 2: 	par
EC_986: 3: 		par
EC_986: 4: 			par
EC_986: 5: 				par
EC_986: 6: 					par sync [the alarm is disarmed]
EC_986: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_986: 8: 							[ true ] / the alarm is disarmed
EC_986: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_986: 10: 								[ clock==0 ] / turn off the tone
EC_986: 11: 								call( PostProc_R4 )
EC_986: 12: 					&&
EC_986: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_986: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_986: 15: 							call( PostProc_R7 )
EC_986: 16: 						++
EC_986: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_986: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_986: 19: 								[ clock==0 ] / alert the emergency center
EC_986: 20: 								call( PostProc_R9 )
EC_986: 21: 				||
EC_986: 22: 					NIL
EC_986: 23: 			||
EC_986: 24: 				NIL
EC_986: 25: 		||
EC_986: 26: 			NIL
EC_986: 27: 	||
EC_986: 28: 		NIL
EC_986: 29: ||
EC_986: 30: 	NIL

EC_986 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_986  --> EC_988 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 988 , H : 218 , step : 0 >" as EC_988 #Orange
EC_988: 1: par
EC_988: 2: 	par
EC_988: 3: 		par
EC_988: 4: 			par
EC_988: 5: 				par
EC_988: 6: 					par sync [the alarm is disarmed]
EC_988: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_988: 8: 							[ true ] / the alarm is disarmed
EC_988: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_988: 10: 								[ clock==0 ] / turn off the tone
EC_988: 11: 								call( PostProc_R4 )
EC_988: 12: 					&&
EC_988: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_988: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_988: 15: 							call( PostProc_R7 )
EC_988: 16: 						++
EC_988: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_988: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_988: 19: 								[ clock==0 ] / alert the emergency center
EC_988: 20: 								call( PostProc_R9 )
EC_988: 21: 				||
EC_988: 22: 					NIL
EC_988: 23: 			||
EC_988: 24: 				NIL
EC_988: 25: 		||
EC_988: 26: 			NIL
EC_988: 27: 	||
EC_988: 28: 		NIL
EC_988: 29: ||
EC_988: 30: 	NIL

EC_988 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_988  --> EC_989 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 989 , H : 219 , step : 242 >" as EC_989 #LightBlue
EC_989: 1: par
EC_989: 2: 	par
EC_989: 3: 		par
EC_989: 4: 			par
EC_989: 5: 				par
EC_989: 6: 					par sync [the alarm is disarmed]
EC_989: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_989: 8: 							[ true ] / the alarm is disarmed
EC_989: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_989: 10: 								[ clock==0 ] / turn off the tone
EC_989: 11: 								call( PostProc_R4 )
EC_989: 12: 					&&
EC_989: 13: 						call( PostProc_R7 )
EC_989: 14: 				||
EC_989: 15: 					NIL
EC_989: 16: 			||
EC_989: 17: 				NIL
EC_989: 18: 		||
EC_989: 19: 			NIL
EC_989: 20: 	||
EC_989: 21: 		NIL
EC_989: 22: ||
EC_989: 23: 	NIL

EC_989 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_989  --> EC_991 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 991 , H : 220 , step : 0 >" as EC_991 #Pink
EC_991: 1: par
EC_991: 2: 	par
EC_991: 3: 		par
EC_991: 4: 			par
EC_991: 5: 				par
EC_991: 6: 					par sync [the alarm is disarmed]
EC_991: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_991: 8: 							[ true ] / the alarm is disarmed
EC_991: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_991: 10: 								[ clock==0 ] / turn off the tone
EC_991: 11: 								call( PostProc_R4 )
EC_991: 12: 					&&
EC_991: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_991: 14: 							[ true ] / the alarm is disarmed
EC_991: 15: 							call( PostProc_R8 )
EC_991: 16: 				||
EC_991: 17: 					NIL
EC_991: 18: 			||
EC_991: 19: 				NIL
EC_991: 20: 		||
EC_991: 21: 			NIL
EC_991: 22: 	||
EC_991: 23: 		NIL
EC_991: 24: ||
EC_991: 25: 	NIL

EC_991 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_991  --> EC_993 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 993 , H : 221 , step : 0 >" as EC_993 #Orange
EC_993: 1: par
EC_993: 2: 	par
EC_993: 3: 		par
EC_993: 4: 			par
EC_993: 5: 				par
EC_993: 6: 					par sync [the alarm is disarmed]
EC_993: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_993: 8: 							[ true ] / the alarm is disarmed
EC_993: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_993: 10: 								[ clock==0 ] / turn off the tone
EC_993: 11: 								call( PostProc_R4 )
EC_993: 12: 					&&
EC_993: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_993: 14: 							[ true ] / the alarm is disarmed
EC_993: 15: 							call( PostProc_R8 )
EC_993: 16: 				||
EC_993: 17: 					NIL
EC_993: 18: 			||
EC_993: 19: 				NIL
EC_993: 20: 		||
EC_993: 21: 			NIL
EC_993: 22: 	||
EC_993: 23: 		NIL
EC_993: 24: ||
EC_993: 25: 	NIL

EC_993 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_993  --> EC_994 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 994 , H : 222 , step : 243 >" as EC_994 #LightBlue
EC_994: 1: par
EC_994: 2: 	par
EC_994: 3: 		par
EC_994: 4: 			par
EC_994: 5: 				par
EC_994: 6: 					par sync [the alarm is disarmed]
EC_994: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_994: 8: 							[ clock==0 ] / turn off the tone
EC_994: 9: 							call( PostProc_R4 )
EC_994: 10: 					&&
EC_994: 11: 						call( PostProc_R8 )
EC_994: 12: 				||
EC_994: 13: 					NIL
EC_994: 14: 			||
EC_994: 15: 				NIL
EC_994: 16: 		||
EC_994: 17: 			NIL
EC_994: 18: 	||
EC_994: 19: 		NIL
EC_994: 20: ||
EC_994: 21: 	NIL

EC_994 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_994  --> EC_995 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 995 , H : 223 , step : 0 >" as EC_995 #Pink
EC_995: 1: par
EC_995: 2: 	par
EC_995: 3: 		par
EC_995: 4: 			par
EC_995: 5: 				par
EC_995: 6: 					par sync [the alarm is disarmed]
EC_995: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_995: 8: 							[ clock==0 ] / turn off the tone
EC_995: 9: 							call( PostProc_R4 )
EC_995: 10: 					&&
EC_995: 11: 						NIL
EC_995: 12: 				||
EC_995: 13: 					NIL
EC_995: 14: 			||
EC_995: 15: 				NIL
EC_995: 16: 		||
EC_995: 17: 			NIL
EC_995: 18: 	||
EC_995: 19: 		NIL
EC_995: 20: ||
EC_995: 21: 	NIL

EC_995 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_995  --> EC_997 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 997 , H : 224 , step : 0 >" as EC_997 #Orange
EC_997: 1: par
EC_997: 2: 	par
EC_997: 3: 		par
EC_997: 4: 			par
EC_997: 5: 				par
EC_997: 6: 					par sync [the alarm is disarmed]
EC_997: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_997: 8: 							[ clock==0 ] / turn off the tone
EC_997: 9: 							call( PostProc_R4 )
EC_997: 10: 					&&
EC_997: 11: 						NIL
EC_997: 12: 				||
EC_997: 13: 					NIL
EC_997: 14: 			||
EC_997: 15: 				NIL
EC_997: 16: 		||
EC_997: 17: 			NIL
EC_997: 18: 	||
EC_997: 19: 		NIL
EC_997: 20: ||
EC_997: 21: 	NIL

EC_997 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_997  --> EC_998 : \lact [True] / META:REDUNDANCE:EC< id : 222 , H : 98 >

state "EC< id : 998 , H : 225 , step : 0 >" as EC_998 #Green
EC_998: 1: par
EC_998: 2: 	par
EC_998: 3: 		par
EC_998: 4: 			par
EC_998: 5: 				par
EC_998: 6: 					par sync [the alarm is disarmed]
EC_998: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_998: 8: 							[ clock==0 ] / turn off the tone
EC_998: 9: 							call( PostProc_R4 )
EC_998: 10: 					&&
EC_998: 11: 						NIL
EC_998: 12: 				||
EC_998: 13: 					NIL
EC_998: 14: 			||
EC_998: 15: 				NIL
EC_998: 16: 		||
EC_998: 17: 			NIL
EC_998: 18: 	||
EC_998: 19: 		NIL
EC_998: 20: ||
EC_998: 21: 	NIL

EC_998 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_988  --> EC_990 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 990 , H : 219 , step : 244 >" as EC_990 #LightBlue
EC_990: 1: par
EC_990: 2: 	par
EC_990: 3: 		par
EC_990: 4: 			par
EC_990: 5: 				par
EC_990: 6: 					par sync [the alarm is disarmed]
EC_990: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_990: 8: 							[ true ] / the alarm is disarmed
EC_990: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_990: 10: 								[ clock==0 ] / turn off the tone
EC_990: 11: 								call( PostProc_R4 )
EC_990: 12: 					&&
EC_990: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_990: 14: 							[ clock==0 ] / alert the emergency center
EC_990: 15: 							call( PostProc_R9 )
EC_990: 16: 				||
EC_990: 17: 					NIL
EC_990: 18: 			||
EC_990: 19: 				NIL
EC_990: 20: 		||
EC_990: 21: 			NIL
EC_990: 22: 	||
EC_990: 23: 		NIL
EC_990: 24: ||
EC_990: 25: 	NIL

EC_990 : DBM: R7_x_resp=60, R3_x_resp=240, clock=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp=clock, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-180,
EC_990  --> EC_1000 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1000 , H : 220 , step : 0 >" as EC_1000 #Orange
EC_1000: 1: par
EC_1000: 2: 	par
EC_1000: 3: 		par
EC_1000: 4: 			par
EC_1000: 5: 				par
EC_1000: 6: 					par sync [the alarm is disarmed]
EC_1000: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1000: 8: 							[ true ] / the alarm is disarmed
EC_1000: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1000: 10: 								[ clock==0 ] / turn off the tone
EC_1000: 11: 								call( PostProc_R4 )
EC_1000: 12: 					&&
EC_1000: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1000: 14: 							[ clock==0 ] / alert the emergency center
EC_1000: 15: 							call( PostProc_R9 )
EC_1000: 16: 				||
EC_1000: 17: 					NIL
EC_1000: 18: 			||
EC_1000: 19: 				NIL
EC_1000: 20: 		||
EC_1000: 21: 			NIL
EC_1000: 22: 	||
EC_1000: 23: 		NIL
EC_1000: 24: ||
EC_1000: 25: 	NIL

EC_1000 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1000  --> EC_1001 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 1001 , H : 221 , step : 245 >" as EC_1001 #LightBlue
EC_1001: 1: par
EC_1001: 2: 	par
EC_1001: 3: 		par
EC_1001: 4: 			par
EC_1001: 5: 				par
EC_1001: 6: 					par sync [the alarm is disarmed]
EC_1001: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1001: 8: 							[ true ] / the alarm is disarmed
EC_1001: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1001: 10: 								[ clock==0 ] / turn off the tone
EC_1001: 11: 								call( PostProc_R4 )
EC_1001: 12: 					&&
EC_1001: 13: 						call( PostProc_R9 )
EC_1001: 14: 				||
EC_1001: 15: 					NIL
EC_1001: 16: 			||
EC_1001: 17: 				NIL
EC_1001: 18: 		||
EC_1001: 19: 			NIL
EC_1001: 20: 	||
EC_1001: 21: 		NIL
EC_1001: 22: ||
EC_1001: 23: 	NIL

EC_1001 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1001  --> EC_1002 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 1002 , H : 222 , step : 0 >" as EC_1002 #Pink
EC_1002: 1: par
EC_1002: 2: 	par
EC_1002: 3: 		par
EC_1002: 4: 			par
EC_1002: 5: 				par
EC_1002: 6: 					par sync [the alarm is disarmed]
EC_1002: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1002: 8: 							[ true ] / the alarm is disarmed
EC_1002: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1002: 10: 								[ clock==0 ] / turn off the tone
EC_1002: 11: 								call( PostProc_R4 )
EC_1002: 12: 					&&
EC_1002: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1002: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1002: 15: 							call( PostProc_R7 )
EC_1002: 16: 						++
EC_1002: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1002: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1002: 19: 								[ clock==0 ] / alert the emergency center
EC_1002: 20: 								call( PostProc_R9 )
EC_1002: 21: 				||
EC_1002: 22: 					NIL
EC_1002: 23: 			||
EC_1002: 24: 				NIL
EC_1002: 25: 		||
EC_1002: 26: 			NIL
EC_1002: 27: 	||
EC_1002: 28: 		NIL
EC_1002: 29: ||
EC_1002: 30: 	NIL

EC_1002 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1002  --> EC_1004 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 1004 , H : 223 , step : 0 >" as EC_1004 #Orange
EC_1004: 1: par
EC_1004: 2: 	par
EC_1004: 3: 		par
EC_1004: 4: 			par
EC_1004: 5: 				par
EC_1004: 6: 					par sync [the alarm is disarmed]
EC_1004: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1004: 8: 							[ true ] / the alarm is disarmed
EC_1004: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1004: 10: 								[ clock==0 ] / turn off the tone
EC_1004: 11: 								call( PostProc_R4 )
EC_1004: 12: 					&&
EC_1004: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1004: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1004: 15: 							call( PostProc_R7 )
EC_1004: 16: 						++
EC_1004: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1004: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1004: 19: 								[ clock==0 ] / alert the emergency center
EC_1004: 20: 								call( PostProc_R9 )
EC_1004: 21: 				||
EC_1004: 22: 					NIL
EC_1004: 23: 			||
EC_1004: 24: 				NIL
EC_1004: 25: 		||
EC_1004: 26: 			NIL
EC_1004: 27: 	||
EC_1004: 28: 		NIL
EC_1004: 29: ||
EC_1004: 30: 	NIL

EC_1004 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1004  --> EC_1005 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 1005 , H : 224 , step : 246 >" as EC_1005 #LightBlue
EC_1005: 1: par
EC_1005: 2: 	par
EC_1005: 3: 		par
EC_1005: 4: 			par
EC_1005: 5: 				par
EC_1005: 6: 					par sync [the alarm is disarmed]
EC_1005: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1005: 8: 							[ true ] / the alarm is disarmed
EC_1005: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1005: 10: 								[ clock==0 ] / turn off the tone
EC_1005: 11: 								call( PostProc_R4 )
EC_1005: 12: 					&&
EC_1005: 13: 						call( PostProc_R7 )
EC_1005: 14: 				||
EC_1005: 15: 					NIL
EC_1005: 16: 			||
EC_1005: 17: 				NIL
EC_1005: 18: 		||
EC_1005: 19: 			NIL
EC_1005: 20: 	||
EC_1005: 21: 		NIL
EC_1005: 22: ||
EC_1005: 23: 	NIL

EC_1005 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1005  --> EC_1007 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 1007 , H : 225 , step : 0 >" as EC_1007 #Pink
EC_1007: 1: par
EC_1007: 2: 	par
EC_1007: 3: 		par
EC_1007: 4: 			par
EC_1007: 5: 				par
EC_1007: 6: 					par sync [the alarm is disarmed]
EC_1007: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1007: 8: 							[ true ] / the alarm is disarmed
EC_1007: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1007: 10: 								[ clock==0 ] / turn off the tone
EC_1007: 11: 								call( PostProc_R4 )
EC_1007: 12: 					&&
EC_1007: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1007: 14: 							[ true ] / the alarm is disarmed
EC_1007: 15: 							call( PostProc_R8 )
EC_1007: 16: 				||
EC_1007: 17: 					NIL
EC_1007: 18: 			||
EC_1007: 19: 				NIL
EC_1007: 20: 		||
EC_1007: 21: 			NIL
EC_1007: 22: 	||
EC_1007: 23: 		NIL
EC_1007: 24: ||
EC_1007: 25: 	NIL

EC_1007 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1007  --> EC_1009 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1009 , H : 226 , step : 0 >" as EC_1009 #Orange
EC_1009: 1: par
EC_1009: 2: 	par
EC_1009: 3: 		par
EC_1009: 4: 			par
EC_1009: 5: 				par
EC_1009: 6: 					par sync [the alarm is disarmed]
EC_1009: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1009: 8: 							[ true ] / the alarm is disarmed
EC_1009: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1009: 10: 								[ clock==0 ] / turn off the tone
EC_1009: 11: 								call( PostProc_R4 )
EC_1009: 12: 					&&
EC_1009: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1009: 14: 							[ true ] / the alarm is disarmed
EC_1009: 15: 							call( PostProc_R8 )
EC_1009: 16: 				||
EC_1009: 17: 					NIL
EC_1009: 18: 			||
EC_1009: 19: 				NIL
EC_1009: 20: 		||
EC_1009: 21: 			NIL
EC_1009: 22: 	||
EC_1009: 23: 		NIL
EC_1009: 24: ||
EC_1009: 25: 	NIL

EC_1009 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1009  --> EC_1010 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 1010 , H : 227 , step : 247 >" as EC_1010 #LightBlue
EC_1010: 1: par
EC_1010: 2: 	par
EC_1010: 3: 		par
EC_1010: 4: 			par
EC_1010: 5: 				par
EC_1010: 6: 					par sync [the alarm is disarmed]
EC_1010: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1010: 8: 							[ clock==0 ] / turn off the tone
EC_1010: 9: 							call( PostProc_R4 )
EC_1010: 10: 					&&
EC_1010: 11: 						call( PostProc_R8 )
EC_1010: 12: 				||
EC_1010: 13: 					NIL
EC_1010: 14: 			||
EC_1010: 15: 				NIL
EC_1010: 16: 		||
EC_1010: 17: 			NIL
EC_1010: 18: 	||
EC_1010: 19: 		NIL
EC_1010: 20: ||
EC_1010: 21: 	NIL

EC_1010 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1010  --> EC_1011 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 1011 , H : 228 , step : 0 >" as EC_1011 #Pink
EC_1011: 1: par
EC_1011: 2: 	par
EC_1011: 3: 		par
EC_1011: 4: 			par
EC_1011: 5: 				par
EC_1011: 6: 					par sync [the alarm is disarmed]
EC_1011: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1011: 8: 							[ clock==0 ] / turn off the tone
EC_1011: 9: 							call( PostProc_R4 )
EC_1011: 10: 					&&
EC_1011: 11: 						NIL
EC_1011: 12: 				||
EC_1011: 13: 					NIL
EC_1011: 14: 			||
EC_1011: 15: 				NIL
EC_1011: 16: 		||
EC_1011: 17: 			NIL
EC_1011: 18: 	||
EC_1011: 19: 		NIL
EC_1011: 20: ||
EC_1011: 21: 	NIL

EC_1011 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1011  --> EC_1013 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1013 , H : 229 , step : 0 >" as EC_1013 #Orange
EC_1013: 1: par
EC_1013: 2: 	par
EC_1013: 3: 		par
EC_1013: 4: 			par
EC_1013: 5: 				par
EC_1013: 6: 					par sync [the alarm is disarmed]
EC_1013: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1013: 8: 							[ clock==0 ] / turn off the tone
EC_1013: 9: 							call( PostProc_R4 )
EC_1013: 10: 					&&
EC_1013: 11: 						NIL
EC_1013: 12: 				||
EC_1013: 13: 					NIL
EC_1013: 14: 			||
EC_1013: 15: 				NIL
EC_1013: 16: 		||
EC_1013: 17: 			NIL
EC_1013: 18: 	||
EC_1013: 19: 		NIL
EC_1013: 20: ||
EC_1013: 21: 	NIL

EC_1013 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_1013  --> EC_1014 : \lact [True] / META:REDUNDANCE:EC< id : 327 , H : 140 >

state "EC< id : 1014 , H : 230 , step : 0 >" as EC_1014 #Green
EC_1014: 1: par
EC_1014: 2: 	par
EC_1014: 3: 		par
EC_1014: 4: 			par
EC_1014: 5: 				par
EC_1014: 6: 					par sync [the alarm is disarmed]
EC_1014: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1014: 8: 							[ clock==0 ] / turn off the tone
EC_1014: 9: 							call( PostProc_R4 )
EC_1014: 10: 					&&
EC_1014: 11: 						NIL
EC_1014: 12: 				||
EC_1014: 13: 					NIL
EC_1014: 14: 			||
EC_1014: 15: 				NIL
EC_1014: 16: 		||
EC_1014: 17: 			NIL
EC_1014: 18: 	||
EC_1014: 19: 		NIL
EC_1014: 20: ||
EC_1014: 21: 	NIL

EC_1014 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_1004  --> EC_1006 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 1006 , H : 224 , step : 248 >" as EC_1006 #LightBlue
EC_1006: 1: par
EC_1006: 2: 	par
EC_1006: 3: 		par
EC_1006: 4: 			par
EC_1006: 5: 				par
EC_1006: 6: 					par sync [the alarm is disarmed]
EC_1006: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1006: 8: 							[ true ] / the alarm is disarmed
EC_1006: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1006: 10: 								[ clock==0 ] / turn off the tone
EC_1006: 11: 								call( PostProc_R4 )
EC_1006: 12: 					&&
EC_1006: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1006: 14: 							[ clock==0 ] / alert the emergency center
EC_1006: 15: 							call( PostProc_R9 )
EC_1006: 16: 				||
EC_1006: 17: 					NIL
EC_1006: 18: 			||
EC_1006: 19: 				NIL
EC_1006: 20: 		||
EC_1006: 21: 			NIL
EC_1006: 22: 	||
EC_1006: 23: 		NIL
EC_1006: 24: ||
EC_1006: 25: 	NIL

EC_1006 : DBM: R7_x_resp=60, R3_x_resp=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp=clock, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-240,
EC_1006  --> EC_1016 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1016 , H : 225 , step : 0 >" as EC_1016 #Orange
EC_1016: 1: par
EC_1016: 2: 	par
EC_1016: 3: 		par
EC_1016: 4: 			par
EC_1016: 5: 				par
EC_1016: 6: 					par sync [the alarm is disarmed]
EC_1016: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1016: 8: 							[ true ] / the alarm is disarmed
EC_1016: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1016: 10: 								[ clock==0 ] / turn off the tone
EC_1016: 11: 								call( PostProc_R4 )
EC_1016: 12: 					&&
EC_1016: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1016: 14: 							[ clock==0 ] / alert the emergency center
EC_1016: 15: 							call( PostProc_R9 )
EC_1016: 16: 				||
EC_1016: 17: 					NIL
EC_1016: 18: 			||
EC_1016: 19: 				NIL
EC_1016: 20: 		||
EC_1016: 21: 			NIL
EC_1016: 22: 	||
EC_1016: 23: 		NIL
EC_1016: 24: ||
EC_1016: 25: 	NIL

EC_1016 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1016  --> EC_1017 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 1017 , H : 226 , step : 249 >" as EC_1017 #LightBlue
EC_1017: 1: par
EC_1017: 2: 	par
EC_1017: 3: 		par
EC_1017: 4: 			par
EC_1017: 5: 				par
EC_1017: 6: 					par sync [the alarm is disarmed]
EC_1017: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1017: 8: 							[ true ] / the alarm is disarmed
EC_1017: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1017: 10: 								[ clock==0 ] / turn off the tone
EC_1017: 11: 								call( PostProc_R4 )
EC_1017: 12: 					&&
EC_1017: 13: 						call( PostProc_R9 )
EC_1017: 14: 				||
EC_1017: 15: 					NIL
EC_1017: 16: 			||
EC_1017: 17: 				NIL
EC_1017: 18: 		||
EC_1017: 19: 			NIL
EC_1017: 20: 	||
EC_1017: 21: 		NIL
EC_1017: 22: ||
EC_1017: 23: 	NIL

EC_1017 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1017  --> EC_1018 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 1018 , H : 227 , step : 0 >" as EC_1018 #Pink
EC_1018: 1: par
EC_1018: 2: 	par
EC_1018: 3: 		par
EC_1018: 4: 			par
EC_1018: 5: 				par
EC_1018: 6: 					par sync [the alarm is disarmed]
EC_1018: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1018: 8: 							[ true ] / the alarm is disarmed
EC_1018: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1018: 10: 								[ clock==0 ] / turn off the tone
EC_1018: 11: 								call( PostProc_R4 )
EC_1018: 12: 					&&
EC_1018: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1018: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1018: 15: 							call( PostProc_R7 )
EC_1018: 16: 						++
EC_1018: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1018: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1018: 19: 								[ clock==0 ] / alert the emergency center
EC_1018: 20: 								call( PostProc_R9 )
EC_1018: 21: 				||
EC_1018: 22: 					NIL
EC_1018: 23: 			||
EC_1018: 24: 				NIL
EC_1018: 25: 		||
EC_1018: 26: 			NIL
EC_1018: 27: 	||
EC_1018: 28: 		NIL
EC_1018: 29: ||
EC_1018: 30: 	NIL

EC_1018 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1018  --> EC_1020 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 1020 , H : 228 , step : 0 >" as EC_1020 #Orange
EC_1020: 1: par
EC_1020: 2: 	par
EC_1020: 3: 		par
EC_1020: 4: 			par
EC_1020: 5: 				par
EC_1020: 6: 					par sync [the alarm is disarmed]
EC_1020: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1020: 8: 							[ true ] / the alarm is disarmed
EC_1020: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1020: 10: 								[ clock==0 ] / turn off the tone
EC_1020: 11: 								call( PostProc_R4 )
EC_1020: 12: 					&&
EC_1020: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1020: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1020: 15: 							call( PostProc_R7 )
EC_1020: 16: 						++
EC_1020: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1020: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1020: 19: 								[ clock==0 ] / alert the emergency center
EC_1020: 20: 								call( PostProc_R9 )
EC_1020: 21: 				||
EC_1020: 22: 					NIL
EC_1020: 23: 			||
EC_1020: 24: 				NIL
EC_1020: 25: 		||
EC_1020: 26: 			NIL
EC_1020: 27: 	||
EC_1020: 28: 		NIL
EC_1020: 29: ||
EC_1020: 30: 	NIL

EC_1020 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1020  --> EC_1021 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 1021 , H : 229 , step : 250 >" as EC_1021 #LightBlue
EC_1021: 1: par
EC_1021: 2: 	par
EC_1021: 3: 		par
EC_1021: 4: 			par
EC_1021: 5: 				par
EC_1021: 6: 					par sync [the alarm is disarmed]
EC_1021: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1021: 8: 							[ true ] / the alarm is disarmed
EC_1021: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1021: 10: 								[ clock==0 ] / turn off the tone
EC_1021: 11: 								call( PostProc_R4 )
EC_1021: 12: 					&&
EC_1021: 13: 						call( PostProc_R7 )
EC_1021: 14: 				||
EC_1021: 15: 					NIL
EC_1021: 16: 			||
EC_1021: 17: 				NIL
EC_1021: 18: 		||
EC_1021: 19: 			NIL
EC_1021: 20: 	||
EC_1021: 21: 		NIL
EC_1021: 22: ||
EC_1021: 23: 	NIL

EC_1021 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1021  --> EC_1023 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 1023 , H : 230 , step : 0 >" as EC_1023 #Pink
EC_1023: 1: par
EC_1023: 2: 	par
EC_1023: 3: 		par
EC_1023: 4: 			par
EC_1023: 5: 				par
EC_1023: 6: 					par sync [the alarm is disarmed]
EC_1023: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1023: 8: 							[ true ] / the alarm is disarmed
EC_1023: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1023: 10: 								[ clock==0 ] / turn off the tone
EC_1023: 11: 								call( PostProc_R4 )
EC_1023: 12: 					&&
EC_1023: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1023: 14: 							[ true ] / the alarm is disarmed
EC_1023: 15: 							call( PostProc_R8 )
EC_1023: 16: 				||
EC_1023: 17: 					NIL
EC_1023: 18: 			||
EC_1023: 19: 				NIL
EC_1023: 20: 		||
EC_1023: 21: 			NIL
EC_1023: 22: 	||
EC_1023: 23: 		NIL
EC_1023: 24: ||
EC_1023: 25: 	NIL

EC_1023 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1023  --> EC_1025 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1025 , H : 231 , step : 0 >" as EC_1025 #Orange
EC_1025: 1: par
EC_1025: 2: 	par
EC_1025: 3: 		par
EC_1025: 4: 			par
EC_1025: 5: 				par
EC_1025: 6: 					par sync [the alarm is disarmed]
EC_1025: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1025: 8: 							[ true ] / the alarm is disarmed
EC_1025: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1025: 10: 								[ clock==0 ] / turn off the tone
EC_1025: 11: 								call( PostProc_R4 )
EC_1025: 12: 					&&
EC_1025: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1025: 14: 							[ true ] / the alarm is disarmed
EC_1025: 15: 							call( PostProc_R8 )
EC_1025: 16: 				||
EC_1025: 17: 					NIL
EC_1025: 18: 			||
EC_1025: 19: 				NIL
EC_1025: 20: 		||
EC_1025: 21: 			NIL
EC_1025: 22: 	||
EC_1025: 23: 		NIL
EC_1025: 24: ||
EC_1025: 25: 	NIL

EC_1025 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1025  --> EC_1026 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 1026 , H : 232 , step : 251 >" as EC_1026 #LightBlue
EC_1026: 1: par
EC_1026: 2: 	par
EC_1026: 3: 		par
EC_1026: 4: 			par
EC_1026: 5: 				par
EC_1026: 6: 					par sync [the alarm is disarmed]
EC_1026: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1026: 8: 							[ clock==0 ] / turn off the tone
EC_1026: 9: 							call( PostProc_R4 )
EC_1026: 10: 					&&
EC_1026: 11: 						call( PostProc_R8 )
EC_1026: 12: 				||
EC_1026: 13: 					NIL
EC_1026: 14: 			||
EC_1026: 15: 				NIL
EC_1026: 16: 		||
EC_1026: 17: 			NIL
EC_1026: 18: 	||
EC_1026: 19: 		NIL
EC_1026: 20: ||
EC_1026: 21: 	NIL

EC_1026 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1026  --> EC_1027 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 1027 , H : 233 , step : 0 >" as EC_1027 #Pink
EC_1027: 1: par
EC_1027: 2: 	par
EC_1027: 3: 		par
EC_1027: 4: 			par
EC_1027: 5: 				par
EC_1027: 6: 					par sync [the alarm is disarmed]
EC_1027: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1027: 8: 							[ clock==0 ] / turn off the tone
EC_1027: 9: 							call( PostProc_R4 )
EC_1027: 10: 					&&
EC_1027: 11: 						NIL
EC_1027: 12: 				||
EC_1027: 13: 					NIL
EC_1027: 14: 			||
EC_1027: 15: 				NIL
EC_1027: 16: 		||
EC_1027: 17: 			NIL
EC_1027: 18: 	||
EC_1027: 19: 		NIL
EC_1027: 20: ||
EC_1027: 21: 	NIL

EC_1027 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1027  --> EC_1029 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1029 , H : 234 , step : 0 >" as EC_1029 #Orange
EC_1029: 1: par
EC_1029: 2: 	par
EC_1029: 3: 		par
EC_1029: 4: 			par
EC_1029: 5: 				par
EC_1029: 6: 					par sync [the alarm is disarmed]
EC_1029: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1029: 8: 							[ clock==0 ] / turn off the tone
EC_1029: 9: 							call( PostProc_R4 )
EC_1029: 10: 					&&
EC_1029: 11: 						NIL
EC_1029: 12: 				||
EC_1029: 13: 					NIL
EC_1029: 14: 			||
EC_1029: 15: 				NIL
EC_1029: 16: 		||
EC_1029: 17: 			NIL
EC_1029: 18: 	||
EC_1029: 19: 		NIL
EC_1029: 20: ||
EC_1029: 21: 	NIL

EC_1029 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1029  --> EC_1030 : \lact [True] / META:REDUNDANCE:EC< id : 448 , H : 187 >

state "EC< id : 1030 , H : 235 , step : 0 >" as EC_1030 #Green
EC_1030: 1: par
EC_1030: 2: 	par
EC_1030: 3: 		par
EC_1030: 4: 			par
EC_1030: 5: 				par
EC_1030: 6: 					par sync [the alarm is disarmed]
EC_1030: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1030: 8: 							[ clock==0 ] / turn off the tone
EC_1030: 9: 							call( PostProc_R4 )
EC_1030: 10: 					&&
EC_1030: 11: 						NIL
EC_1030: 12: 				||
EC_1030: 13: 					NIL
EC_1030: 14: 			||
EC_1030: 15: 				NIL
EC_1030: 16: 		||
EC_1030: 17: 			NIL
EC_1030: 18: 	||
EC_1030: 19: 		NIL
EC_1030: 20: ||
EC_1030: 21: 	NIL

EC_1030 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_981  --> EC_983 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 983 , H : 216 , step : 252 >" as EC_983 #LightBlue
EC_983: 1: par
EC_983: 2: 	par
EC_983: 3: 		par
EC_983: 4: 			par
EC_983: 5: 				par
EC_983: 6: 					par sync [the alarm is disarmed]
EC_983: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_983: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_983: 9: 							call( PostProc_R3 )
EC_983: 10: 						++
EC_983: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_983: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_983: 13: 								[ clock==0 ] / turn off the tone
EC_983: 14: 								call( PostProc_R5 )
EC_983: 15: 					&&
EC_983: 16: 						call( PostProc_R7 )
EC_983: 17: 				||
EC_983: 18: 					NIL
EC_983: 19: 			||
EC_983: 20: 				NIL
EC_983: 21: 		||
EC_983: 22: 			NIL
EC_983: 23: 	||
EC_983: 24: 		NIL
EC_983: 25: ||
EC_983: 26: 	NIL

EC_983 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_983  --> EC_1031 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 1031 , H : 217 , step : 0 >" as EC_1031 #Pink
EC_1031: 1: par
EC_1031: 2: 	par
EC_1031: 3: 		par
EC_1031: 4: 			par
EC_1031: 5: 				par
EC_1031: 6: 					par sync [the alarm is disarmed]
EC_1031: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1031: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1031: 9: 							call( PostProc_R3 )
EC_1031: 10: 						++
EC_1031: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1031: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1031: 13: 								[ clock==0 ] / turn off the tone
EC_1031: 14: 								call( PostProc_R5 )
EC_1031: 15: 					&&
EC_1031: 16: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1031: 17: 							[ true ] / the alarm is disarmed
EC_1031: 18: 							call( PostProc_R8 )
EC_1031: 19: 				||
EC_1031: 20: 					NIL
EC_1031: 21: 			||
EC_1031: 22: 				NIL
EC_1031: 23: 		||
EC_1031: 24: 			NIL
EC_1031: 25: 	||
EC_1031: 26: 		NIL
EC_1031: 27: ||
EC_1031: 28: 	NIL

EC_1031 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_1031  --> EC_1033 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1033 , H : 218 , step : 0 >" as EC_1033 #Orange
EC_1033: 1: par
EC_1033: 2: 	par
EC_1033: 3: 		par
EC_1033: 4: 			par
EC_1033: 5: 				par
EC_1033: 6: 					par sync [the alarm is disarmed]
EC_1033: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1033: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1033: 9: 							call( PostProc_R3 )
EC_1033: 10: 						++
EC_1033: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1033: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1033: 13: 								[ clock==0 ] / turn off the tone
EC_1033: 14: 								call( PostProc_R5 )
EC_1033: 15: 					&&
EC_1033: 16: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1033: 17: 							[ true ] / the alarm is disarmed
EC_1033: 18: 							call( PostProc_R8 )
EC_1033: 19: 				||
EC_1033: 20: 					NIL
EC_1033: 21: 			||
EC_1033: 22: 				NIL
EC_1033: 23: 		||
EC_1033: 24: 			NIL
EC_1033: 25: 	||
EC_1033: 26: 		NIL
EC_1033: 27: ||
EC_1033: 28: 	NIL

EC_1033 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_1033  --> EC_1034 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 1034 , H : 219 , step : 253 >" as EC_1034 #LightBlue
EC_1034: 1: par
EC_1034: 2: 	par
EC_1034: 3: 		par
EC_1034: 4: 			par
EC_1034: 5: 				par
EC_1034: 6: 					par sync [the alarm is disarmed]
EC_1034: 7: 						call( PostProc_R3 )
EC_1034: 8: 					&&
EC_1034: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1034: 10: 							[ true ] / the alarm is disarmed
EC_1034: 11: 							call( PostProc_R8 )
EC_1034: 12: 				||
EC_1034: 13: 					NIL
EC_1034: 14: 			||
EC_1034: 15: 				NIL
EC_1034: 16: 		||
EC_1034: 17: 			NIL
EC_1034: 18: 	||
EC_1034: 19: 		NIL
EC_1034: 20: ||
EC_1034: 21: 	NIL

EC_1034 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_1034  --> EC_1036 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 1036 , H : 220 , step : 0 >" as EC_1036 #Pink
EC_1036: 1: par
EC_1036: 2: 	par
EC_1036: 3: 		par
EC_1036: 4: 			par
EC_1036: 5: 				par
EC_1036: 6: 					par sync [the alarm is disarmed]
EC_1036: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1036: 8: 							[ true ] / the alarm is disarmed
EC_1036: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1036: 10: 								[ clock==0 ] / turn off the tone
EC_1036: 11: 								call( PostProc_R4 )
EC_1036: 12: 					&&
EC_1036: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1036: 14: 							[ true ] / the alarm is disarmed
EC_1036: 15: 							call( PostProc_R8 )
EC_1036: 16: 				||
EC_1036: 17: 					NIL
EC_1036: 18: 			||
EC_1036: 19: 				NIL
EC_1036: 20: 		||
EC_1036: 21: 			NIL
EC_1036: 22: 	||
EC_1036: 23: 		NIL
EC_1036: 24: ||
EC_1036: 25: 	NIL

EC_1036 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_1036  --> EC_1038 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1038 , H : 221 , step : 0 >" as EC_1038 #Orange
EC_1038: 1: par
EC_1038: 2: 	par
EC_1038: 3: 		par
EC_1038: 4: 			par
EC_1038: 5: 				par
EC_1038: 6: 					par sync [the alarm is disarmed]
EC_1038: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1038: 8: 							[ true ] / the alarm is disarmed
EC_1038: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1038: 10: 								[ clock==0 ] / turn off the tone
EC_1038: 11: 								call( PostProc_R4 )
EC_1038: 12: 					&&
EC_1038: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1038: 14: 							[ true ] / the alarm is disarmed
EC_1038: 15: 							call( PostProc_R8 )
EC_1038: 16: 				||
EC_1038: 17: 					NIL
EC_1038: 18: 			||
EC_1038: 19: 				NIL
EC_1038: 20: 		||
EC_1038: 21: 			NIL
EC_1038: 22: 	||
EC_1038: 23: 		NIL
EC_1038: 24: ||
EC_1038: 25: 	NIL

EC_1038 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_1038  --> EC_1039 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 1039 , H : 222 , step : 254 >" as EC_1039 #LightBlue
EC_1039: 1: par
EC_1039: 2: 	par
EC_1039: 3: 		par
EC_1039: 4: 			par
EC_1039: 5: 				par
EC_1039: 6: 					par sync [the alarm is disarmed]
EC_1039: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1039: 8: 							[ clock==0 ] / turn off the tone
EC_1039: 9: 							call( PostProc_R4 )
EC_1039: 10: 					&&
EC_1039: 11: 						call( PostProc_R8 )
EC_1039: 12: 				||
EC_1039: 13: 					NIL
EC_1039: 14: 			||
EC_1039: 15: 				NIL
EC_1039: 16: 		||
EC_1039: 17: 			NIL
EC_1039: 18: 	||
EC_1039: 19: 		NIL
EC_1039: 20: ||
EC_1039: 21: 	NIL

EC_1039 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_1039  --> EC_1040 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 1040 , H : 223 , step : 0 >" as EC_1040 #Pink
EC_1040: 1: par
EC_1040: 2: 	par
EC_1040: 3: 		par
EC_1040: 4: 			par
EC_1040: 5: 				par
EC_1040: 6: 					par sync [the alarm is disarmed]
EC_1040: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1040: 8: 							[ clock==0 ] / turn off the tone
EC_1040: 9: 							call( PostProc_R4 )
EC_1040: 10: 					&&
EC_1040: 11: 						NIL
EC_1040: 12: 				||
EC_1040: 13: 					NIL
EC_1040: 14: 			||
EC_1040: 15: 				NIL
EC_1040: 16: 		||
EC_1040: 17: 			NIL
EC_1040: 18: 	||
EC_1040: 19: 		NIL
EC_1040: 20: ||
EC_1040: 21: 	NIL

EC_1040 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=60,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp=clock, R3_x_resp-clock<=180, clock-R3_x_resp<=-180,
EC_1040  --> EC_1042 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1042 , H : 224 , step : 0 >" as EC_1042 #Orange
EC_1042: 1: par
EC_1042: 2: 	par
EC_1042: 3: 		par
EC_1042: 4: 			par
EC_1042: 5: 				par
EC_1042: 6: 					par sync [the alarm is disarmed]
EC_1042: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1042: 8: 							[ clock==0 ] / turn off the tone
EC_1042: 9: 							call( PostProc_R4 )
EC_1042: 10: 					&&
EC_1042: 11: 						NIL
EC_1042: 12: 				||
EC_1042: 13: 					NIL
EC_1042: 14: 			||
EC_1042: 15: 				NIL
EC_1042: 16: 		||
EC_1042: 17: 			NIL
EC_1042: 18: 	||
EC_1042: 19: 		NIL
EC_1042: 20: ||
EC_1042: 21: 	NIL

EC_1042 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_1042  --> EC_1043 : \lact [True] / META:REDUNDANCE:EC< id : 222 , H : 98 >

state "EC< id : 1043 , H : 225 , step : 0 >" as EC_1043 #Green
EC_1043: 1: par
EC_1043: 2: 	par
EC_1043: 3: 		par
EC_1043: 4: 			par
EC_1043: 5: 				par
EC_1043: 6: 					par sync [the alarm is disarmed]
EC_1043: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1043: 8: 							[ clock==0 ] / turn off the tone
EC_1043: 9: 							call( PostProc_R4 )
EC_1043: 10: 					&&
EC_1043: 11: 						NIL
EC_1043: 12: 				||
EC_1043: 13: 					NIL
EC_1043: 14: 			||
EC_1043: 15: 				NIL
EC_1043: 16: 		||
EC_1043: 17: 			NIL
EC_1043: 18: 	||
EC_1043: 19: 		NIL
EC_1043: 20: ||
EC_1043: 21: 	NIL

EC_1043 : DBM: R7_x_resp<=60, 180<=R3_x_resp<=240, clock<=0,\l   R7_x_resp-R3_x_resp<=-180, R3_x_resp-R7_x_resp<=180,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-180,
EC_981  --> EC_984 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 984 , H : 216 , step : 255 >" as EC_984 #LightBlue
EC_984: 1: par
EC_984: 2: 	par
EC_984: 3: 		par
EC_984: 4: 			par
EC_984: 5: 				par
EC_984: 6: 					par sync [the alarm is disarmed]
EC_984: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_984: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_984: 9: 							call( PostProc_R3 )
EC_984: 10: 						++
EC_984: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_984: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_984: 13: 								[ clock==0 ] / turn off the tone
EC_984: 14: 								call( PostProc_R5 )
EC_984: 15: 					&&
EC_984: 16: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_984: 17: 							[ clock==0 ] / alert the emergency center
EC_984: 18: 							call( PostProc_R9 )
EC_984: 19: 				||
EC_984: 20: 					NIL
EC_984: 21: 			||
EC_984: 22: 				NIL
EC_984: 23: 		||
EC_984: 24: 			NIL
EC_984: 25: 	||
EC_984: 26: 		NIL
EC_984: 27: ||
EC_984: 28: 	NIL

EC_984 : DBM: R7_x_resp=60, R3_x_resp=240, clock=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp=clock, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-180,
EC_984  --> EC_1045 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1045 , H : 217 , step : 0 >" as EC_1045 #Orange
EC_1045: 1: par
EC_1045: 2: 	par
EC_1045: 3: 		par
EC_1045: 4: 			par
EC_1045: 5: 				par
EC_1045: 6: 					par sync [the alarm is disarmed]
EC_1045: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1045: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1045: 9: 							call( PostProc_R3 )
EC_1045: 10: 						++
EC_1045: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1045: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1045: 13: 								[ clock==0 ] / turn off the tone
EC_1045: 14: 								call( PostProc_R5 )
EC_1045: 15: 					&&
EC_1045: 16: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1045: 17: 							[ clock==0 ] / alert the emergency center
EC_1045: 18: 							call( PostProc_R9 )
EC_1045: 19: 				||
EC_1045: 20: 					NIL
EC_1045: 21: 			||
EC_1045: 22: 				NIL
EC_1045: 23: 		||
EC_1045: 24: 			NIL
EC_1045: 25: 	||
EC_1045: 26: 		NIL
EC_1045: 27: ||
EC_1045: 28: 	NIL

EC_1045 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1045  --> EC_1046 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 1046 , H : 218 , step : 256 >" as EC_1046 #LightBlue
EC_1046: 1: par
EC_1046: 2: 	par
EC_1046: 3: 		par
EC_1046: 4: 			par
EC_1046: 5: 				par
EC_1046: 6: 					par sync [the alarm is disarmed]
EC_1046: 7: 						call( PostProc_R3 )
EC_1046: 8: 					&&
EC_1046: 9: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_1046: 10: 							[ clock==0 ] / alert the emergency center
EC_1046: 11: 							call( PostProc_R9 )
EC_1046: 12: 				||
EC_1046: 13: 					NIL
EC_1046: 14: 			||
EC_1046: 15: 				NIL
EC_1046: 16: 		||
EC_1046: 17: 			NIL
EC_1046: 18: 	||
EC_1046: 19: 		NIL
EC_1046: 20: ||
EC_1046: 21: 	NIL

EC_1046 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1046  --> EC_1049 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 1049 , H : 219 , step : 0 >" as EC_1049 #Pink
EC_1049: 1: par
EC_1049: 2: 	par
EC_1049: 3: 		par
EC_1049: 4: 			par
EC_1049: 5: 				par
EC_1049: 6: 					par sync [the alarm is disarmed]
EC_1049: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1049: 8: 							[ true ] / the alarm is disarmed
EC_1049: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1049: 10: 								[ clock==0 ] / turn off the tone
EC_1049: 11: 								call( PostProc_R4 )
EC_1049: 12: 					&&
EC_1049: 13: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_1049: 14: 							[ clock==0 ] / alert the emergency center
EC_1049: 15: 							call( PostProc_R9 )
EC_1049: 16: 				||
EC_1049: 17: 					NIL
EC_1049: 18: 			||
EC_1049: 19: 				NIL
EC_1049: 20: 		||
EC_1049: 21: 			NIL
EC_1049: 22: 	||
EC_1049: 23: 		NIL
EC_1049: 24: ||
EC_1049: 25: 	NIL

EC_1049 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1049  --> EC_1051 : inv [] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1051 , H : 220 , step : 0 >" as EC_1051 #Orange
EC_1051: 1: par
EC_1051: 2: 	par
EC_1051: 3: 		par
EC_1051: 4: 			par
EC_1051: 5: 				par
EC_1051: 6: 					par sync [the alarm is disarmed]
EC_1051: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1051: 8: 							[ true ] / the alarm is disarmed
EC_1051: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1051: 10: 								[ clock==0 ] / turn off the tone
EC_1051: 11: 								call( PostProc_R4 )
EC_1051: 12: 					&&
EC_1051: 13: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_1051: 14: 							[ clock==0 ] / alert the emergency center
EC_1051: 15: 							call( PostProc_R9 )
EC_1051: 16: 				||
EC_1051: 17: 					NIL
EC_1051: 18: 			||
EC_1051: 19: 				NIL
EC_1051: 20: 		||
EC_1051: 21: 			NIL
EC_1051: 22: 	||
EC_1051: 23: 		NIL
EC_1051: 24: ||
EC_1051: 25: 	NIL

EC_1051 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1051  --> EC_1052 : inv [] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 1052 , H : 221 , step : 257 >" as EC_1052 #LightBlue
EC_1052: 1: par
EC_1052: 2: 	par
EC_1052: 3: 		par
EC_1052: 4: 			par
EC_1052: 5: 				par
EC_1052: 6: 					par sync [the alarm is disarmed]
EC_1052: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1052: 8: 							[ true ] / the alarm is disarmed
EC_1052: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1052: 10: 								[ clock==0 ] / turn off the tone
EC_1052: 11: 								call( PostProc_R4 )
EC_1052: 12: 					&&
EC_1052: 13: 						call( PostProc_R9 )
EC_1052: 14: 				||
EC_1052: 15: 					NIL
EC_1052: 16: 			||
EC_1052: 17: 				NIL
EC_1052: 18: 		||
EC_1052: 19: 			NIL
EC_1052: 20: 	||
EC_1052: 21: 		NIL
EC_1052: 22: ||
EC_1052: 23: 	NIL

EC_1052 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1052  --> EC_1053 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 1053 , H : 222 , step : 0 >" as EC_1053 #Pink
EC_1053: 1: par
EC_1053: 2: 	par
EC_1053: 3: 		par
EC_1053: 4: 			par
EC_1053: 5: 				par
EC_1053: 6: 					par sync [the alarm is disarmed]
EC_1053: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1053: 8: 							[ true ] / the alarm is disarmed
EC_1053: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1053: 10: 								[ clock==0 ] / turn off the tone
EC_1053: 11: 								call( PostProc_R4 )
EC_1053: 12: 					&&
EC_1053: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1053: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1053: 15: 							call( PostProc_R7 )
EC_1053: 16: 						++
EC_1053: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1053: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1053: 19: 								[ clock==0 ] / alert the emergency center
EC_1053: 20: 								call( PostProc_R9 )
EC_1053: 21: 				||
EC_1053: 22: 					NIL
EC_1053: 23: 			||
EC_1053: 24: 				NIL
EC_1053: 25: 		||
EC_1053: 26: 			NIL
EC_1053: 27: 	||
EC_1053: 28: 		NIL
EC_1053: 29: ||
EC_1053: 30: 	NIL

EC_1053 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1053  --> EC_1055 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 1055 , H : 223 , step : 0 >" as EC_1055 #Orange
EC_1055: 1: par
EC_1055: 2: 	par
EC_1055: 3: 		par
EC_1055: 4: 			par
EC_1055: 5: 				par
EC_1055: 6: 					par sync [the alarm is disarmed]
EC_1055: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1055: 8: 							[ true ] / the alarm is disarmed
EC_1055: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1055: 10: 								[ clock==0 ] / turn off the tone
EC_1055: 11: 								call( PostProc_R4 )
EC_1055: 12: 					&&
EC_1055: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1055: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1055: 15: 							call( PostProc_R7 )
EC_1055: 16: 						++
EC_1055: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1055: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1055: 19: 								[ clock==0 ] / alert the emergency center
EC_1055: 20: 								call( PostProc_R9 )
EC_1055: 21: 				||
EC_1055: 22: 					NIL
EC_1055: 23: 			||
EC_1055: 24: 				NIL
EC_1055: 25: 		||
EC_1055: 26: 			NIL
EC_1055: 27: 	||
EC_1055: 28: 		NIL
EC_1055: 29: ||
EC_1055: 30: 	NIL

EC_1055 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1055  --> EC_1056 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 1056 , H : 224 , step : 258 >" as EC_1056 #LightBlue
EC_1056: 1: par
EC_1056: 2: 	par
EC_1056: 3: 		par
EC_1056: 4: 			par
EC_1056: 5: 				par
EC_1056: 6: 					par sync [the alarm is disarmed]
EC_1056: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1056: 8: 							[ true ] / the alarm is disarmed
EC_1056: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1056: 10: 								[ clock==0 ] / turn off the tone
EC_1056: 11: 								call( PostProc_R4 )
EC_1056: 12: 					&&
EC_1056: 13: 						call( PostProc_R7 )
EC_1056: 14: 				||
EC_1056: 15: 					NIL
EC_1056: 16: 			||
EC_1056: 17: 				NIL
EC_1056: 18: 		||
EC_1056: 19: 			NIL
EC_1056: 20: 	||
EC_1056: 21: 		NIL
EC_1056: 22: ||
EC_1056: 23: 	NIL

EC_1056 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1056  --> EC_1058 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 1058 , H : 225 , step : 0 >" as EC_1058 #Pink
EC_1058: 1: par
EC_1058: 2: 	par
EC_1058: 3: 		par
EC_1058: 4: 			par
EC_1058: 5: 				par
EC_1058: 6: 					par sync [the alarm is disarmed]
EC_1058: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1058: 8: 							[ true ] / the alarm is disarmed
EC_1058: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1058: 10: 								[ clock==0 ] / turn off the tone
EC_1058: 11: 								call( PostProc_R4 )
EC_1058: 12: 					&&
EC_1058: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1058: 14: 							[ true ] / the alarm is disarmed
EC_1058: 15: 							call( PostProc_R8 )
EC_1058: 16: 				||
EC_1058: 17: 					NIL
EC_1058: 18: 			||
EC_1058: 19: 				NIL
EC_1058: 20: 		||
EC_1058: 21: 			NIL
EC_1058: 22: 	||
EC_1058: 23: 		NIL
EC_1058: 24: ||
EC_1058: 25: 	NIL

EC_1058 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1058  --> EC_1060 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1060 , H : 226 , step : 0 >" as EC_1060 #Orange
EC_1060: 1: par
EC_1060: 2: 	par
EC_1060: 3: 		par
EC_1060: 4: 			par
EC_1060: 5: 				par
EC_1060: 6: 					par sync [the alarm is disarmed]
EC_1060: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1060: 8: 							[ true ] / the alarm is disarmed
EC_1060: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1060: 10: 								[ clock==0 ] / turn off the tone
EC_1060: 11: 								call( PostProc_R4 )
EC_1060: 12: 					&&
EC_1060: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1060: 14: 							[ true ] / the alarm is disarmed
EC_1060: 15: 							call( PostProc_R8 )
EC_1060: 16: 				||
EC_1060: 17: 					NIL
EC_1060: 18: 			||
EC_1060: 19: 				NIL
EC_1060: 20: 		||
EC_1060: 21: 			NIL
EC_1060: 22: 	||
EC_1060: 23: 		NIL
EC_1060: 24: ||
EC_1060: 25: 	NIL

EC_1060 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1060  --> EC_1061 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 1061 , H : 227 , step : 259 >" as EC_1061 #LightBlue
EC_1061: 1: par
EC_1061: 2: 	par
EC_1061: 3: 		par
EC_1061: 4: 			par
EC_1061: 5: 				par
EC_1061: 6: 					par sync [the alarm is disarmed]
EC_1061: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1061: 8: 							[ clock==0 ] / turn off the tone
EC_1061: 9: 							call( PostProc_R4 )
EC_1061: 10: 					&&
EC_1061: 11: 						call( PostProc_R8 )
EC_1061: 12: 				||
EC_1061: 13: 					NIL
EC_1061: 14: 			||
EC_1061: 15: 				NIL
EC_1061: 16: 		||
EC_1061: 17: 			NIL
EC_1061: 18: 	||
EC_1061: 19: 		NIL
EC_1061: 20: ||
EC_1061: 21: 	NIL

EC_1061 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1061  --> EC_1062 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 1062 , H : 228 , step : 0 >" as EC_1062 #Pink
EC_1062: 1: par
EC_1062: 2: 	par
EC_1062: 3: 		par
EC_1062: 4: 			par
EC_1062: 5: 				par
EC_1062: 6: 					par sync [the alarm is disarmed]
EC_1062: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1062: 8: 							[ clock==0 ] / turn off the tone
EC_1062: 9: 							call( PostProc_R4 )
EC_1062: 10: 					&&
EC_1062: 11: 						NIL
EC_1062: 12: 				||
EC_1062: 13: 					NIL
EC_1062: 14: 			||
EC_1062: 15: 				NIL
EC_1062: 16: 		||
EC_1062: 17: 			NIL
EC_1062: 18: 	||
EC_1062: 19: 		NIL
EC_1062: 20: ||
EC_1062: 21: 	NIL

EC_1062 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1062  --> EC_1064 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1064 , H : 229 , step : 0 >" as EC_1064 #Orange
EC_1064: 1: par
EC_1064: 2: 	par
EC_1064: 3: 		par
EC_1064: 4: 			par
EC_1064: 5: 				par
EC_1064: 6: 					par sync [the alarm is disarmed]
EC_1064: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1064: 8: 							[ clock==0 ] / turn off the tone
EC_1064: 9: 							call( PostProc_R4 )
EC_1064: 10: 					&&
EC_1064: 11: 						NIL
EC_1064: 12: 				||
EC_1064: 13: 					NIL
EC_1064: 14: 			||
EC_1064: 15: 				NIL
EC_1064: 16: 		||
EC_1064: 17: 			NIL
EC_1064: 18: 	||
EC_1064: 19: 		NIL
EC_1064: 20: ||
EC_1064: 21: 	NIL

EC_1064 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_1064  --> EC_1065 : \lact [True] / META:REDUNDANCE:EC< id : 327 , H : 140 >

state "EC< id : 1065 , H : 230 , step : 0 >" as EC_1065 #Green
EC_1065: 1: par
EC_1065: 2: 	par
EC_1065: 3: 		par
EC_1065: 4: 			par
EC_1065: 5: 				par
EC_1065: 6: 					par sync [the alarm is disarmed]
EC_1065: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1065: 8: 							[ clock==0 ] / turn off the tone
EC_1065: 9: 							call( PostProc_R4 )
EC_1065: 10: 					&&
EC_1065: 11: 						NIL
EC_1065: 12: 				||
EC_1065: 13: 					NIL
EC_1065: 14: 			||
EC_1065: 15: 				NIL
EC_1065: 16: 		||
EC_1065: 17: 			NIL
EC_1065: 18: 	||
EC_1065: 19: 		NIL
EC_1065: 20: ||
EC_1065: 21: 	NIL

EC_1065 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_1055  --> EC_1057 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 1057 , H : 224 , step : 260 >" as EC_1057 #LightBlue
EC_1057: 1: par
EC_1057: 2: 	par
EC_1057: 3: 		par
EC_1057: 4: 			par
EC_1057: 5: 				par
EC_1057: 6: 					par sync [the alarm is disarmed]
EC_1057: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1057: 8: 							[ true ] / the alarm is disarmed
EC_1057: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1057: 10: 								[ clock==0 ] / turn off the tone
EC_1057: 11: 								call( PostProc_R4 )
EC_1057: 12: 					&&
EC_1057: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1057: 14: 							[ clock==0 ] / alert the emergency center
EC_1057: 15: 							call( PostProc_R9 )
EC_1057: 16: 				||
EC_1057: 17: 					NIL
EC_1057: 18: 			||
EC_1057: 19: 				NIL
EC_1057: 20: 		||
EC_1057: 21: 			NIL
EC_1057: 22: 	||
EC_1057: 23: 		NIL
EC_1057: 24: ||
EC_1057: 25: 	NIL

EC_1057 : DBM: R7_x_resp=60, R3_x_resp=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp=clock, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-240,
EC_1057  --> EC_1067 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1067 , H : 225 , step : 0 >" as EC_1067 #Orange
EC_1067: 1: par
EC_1067: 2: 	par
EC_1067: 3: 		par
EC_1067: 4: 			par
EC_1067: 5: 				par
EC_1067: 6: 					par sync [the alarm is disarmed]
EC_1067: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1067: 8: 							[ true ] / the alarm is disarmed
EC_1067: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1067: 10: 								[ clock==0 ] / turn off the tone
EC_1067: 11: 								call( PostProc_R4 )
EC_1067: 12: 					&&
EC_1067: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1067: 14: 							[ clock==0 ] / alert the emergency center
EC_1067: 15: 							call( PostProc_R9 )
EC_1067: 16: 				||
EC_1067: 17: 					NIL
EC_1067: 18: 			||
EC_1067: 19: 				NIL
EC_1067: 20: 		||
EC_1067: 21: 			NIL
EC_1067: 22: 	||
EC_1067: 23: 		NIL
EC_1067: 24: ||
EC_1067: 25: 	NIL

EC_1067 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1067  --> EC_1068 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 1068 , H : 226 , step : 261 >" as EC_1068 #LightBlue
EC_1068: 1: par
EC_1068: 2: 	par
EC_1068: 3: 		par
EC_1068: 4: 			par
EC_1068: 5: 				par
EC_1068: 6: 					par sync [the alarm is disarmed]
EC_1068: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1068: 8: 							[ true ] / the alarm is disarmed
EC_1068: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1068: 10: 								[ clock==0 ] / turn off the tone
EC_1068: 11: 								call( PostProc_R4 )
EC_1068: 12: 					&&
EC_1068: 13: 						call( PostProc_R9 )
EC_1068: 14: 				||
EC_1068: 15: 					NIL
EC_1068: 16: 			||
EC_1068: 17: 				NIL
EC_1068: 18: 		||
EC_1068: 19: 			NIL
EC_1068: 20: 	||
EC_1068: 21: 		NIL
EC_1068: 22: ||
EC_1068: 23: 	NIL

EC_1068 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1068  --> EC_1069 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 1069 , H : 227 , step : 0 >" as EC_1069 #Pink
EC_1069: 1: par
EC_1069: 2: 	par
EC_1069: 3: 		par
EC_1069: 4: 			par
EC_1069: 5: 				par
EC_1069: 6: 					par sync [the alarm is disarmed]
EC_1069: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1069: 8: 							[ true ] / the alarm is disarmed
EC_1069: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1069: 10: 								[ clock==0 ] / turn off the tone
EC_1069: 11: 								call( PostProc_R4 )
EC_1069: 12: 					&&
EC_1069: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1069: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1069: 15: 							call( PostProc_R7 )
EC_1069: 16: 						++
EC_1069: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1069: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1069: 19: 								[ clock==0 ] / alert the emergency center
EC_1069: 20: 								call( PostProc_R9 )
EC_1069: 21: 				||
EC_1069: 22: 					NIL
EC_1069: 23: 			||
EC_1069: 24: 				NIL
EC_1069: 25: 		||
EC_1069: 26: 			NIL
EC_1069: 27: 	||
EC_1069: 28: 		NIL
EC_1069: 29: ||
EC_1069: 30: 	NIL

EC_1069 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1069  --> EC_1071 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 1071 , H : 228 , step : 0 >" as EC_1071 #Orange
EC_1071: 1: par
EC_1071: 2: 	par
EC_1071: 3: 		par
EC_1071: 4: 			par
EC_1071: 5: 				par
EC_1071: 6: 					par sync [the alarm is disarmed]
EC_1071: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1071: 8: 							[ true ] / the alarm is disarmed
EC_1071: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1071: 10: 								[ clock==0 ] / turn off the tone
EC_1071: 11: 								call( PostProc_R4 )
EC_1071: 12: 					&&
EC_1071: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1071: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1071: 15: 							call( PostProc_R7 )
EC_1071: 16: 						++
EC_1071: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1071: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1071: 19: 								[ clock==0 ] / alert the emergency center
EC_1071: 20: 								call( PostProc_R9 )
EC_1071: 21: 				||
EC_1071: 22: 					NIL
EC_1071: 23: 			||
EC_1071: 24: 				NIL
EC_1071: 25: 		||
EC_1071: 26: 			NIL
EC_1071: 27: 	||
EC_1071: 28: 		NIL
EC_1071: 29: ||
EC_1071: 30: 	NIL

EC_1071 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1071  --> EC_1072 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 1072 , H : 229 , step : 262 >" as EC_1072 #LightBlue
EC_1072: 1: par
EC_1072: 2: 	par
EC_1072: 3: 		par
EC_1072: 4: 			par
EC_1072: 5: 				par
EC_1072: 6: 					par sync [the alarm is disarmed]
EC_1072: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1072: 8: 							[ true ] / the alarm is disarmed
EC_1072: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1072: 10: 								[ clock==0 ] / turn off the tone
EC_1072: 11: 								call( PostProc_R4 )
EC_1072: 12: 					&&
EC_1072: 13: 						call( PostProc_R7 )
EC_1072: 14: 				||
EC_1072: 15: 					NIL
EC_1072: 16: 			||
EC_1072: 17: 				NIL
EC_1072: 18: 		||
EC_1072: 19: 			NIL
EC_1072: 20: 	||
EC_1072: 21: 		NIL
EC_1072: 22: ||
EC_1072: 23: 	NIL

EC_1072 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1072  --> EC_1074 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 1074 , H : 230 , step : 0 >" as EC_1074 #Pink
EC_1074: 1: par
EC_1074: 2: 	par
EC_1074: 3: 		par
EC_1074: 4: 			par
EC_1074: 5: 				par
EC_1074: 6: 					par sync [the alarm is disarmed]
EC_1074: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1074: 8: 							[ true ] / the alarm is disarmed
EC_1074: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1074: 10: 								[ clock==0 ] / turn off the tone
EC_1074: 11: 								call( PostProc_R4 )
EC_1074: 12: 					&&
EC_1074: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1074: 14: 							[ true ] / the alarm is disarmed
EC_1074: 15: 							call( PostProc_R8 )
EC_1074: 16: 				||
EC_1074: 17: 					NIL
EC_1074: 18: 			||
EC_1074: 19: 				NIL
EC_1074: 20: 		||
EC_1074: 21: 			NIL
EC_1074: 22: 	||
EC_1074: 23: 		NIL
EC_1074: 24: ||
EC_1074: 25: 	NIL

EC_1074 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1074  --> EC_1076 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1076 , H : 231 , step : 0 >" as EC_1076 #Orange
EC_1076: 1: par
EC_1076: 2: 	par
EC_1076: 3: 		par
EC_1076: 4: 			par
EC_1076: 5: 				par
EC_1076: 6: 					par sync [the alarm is disarmed]
EC_1076: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1076: 8: 							[ true ] / the alarm is disarmed
EC_1076: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1076: 10: 								[ clock==0 ] / turn off the tone
EC_1076: 11: 								call( PostProc_R4 )
EC_1076: 12: 					&&
EC_1076: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1076: 14: 							[ true ] / the alarm is disarmed
EC_1076: 15: 							call( PostProc_R8 )
EC_1076: 16: 				||
EC_1076: 17: 					NIL
EC_1076: 18: 			||
EC_1076: 19: 				NIL
EC_1076: 20: 		||
EC_1076: 21: 			NIL
EC_1076: 22: 	||
EC_1076: 23: 		NIL
EC_1076: 24: ||
EC_1076: 25: 	NIL

EC_1076 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1076  --> EC_1077 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 1077 , H : 232 , step : 263 >" as EC_1077 #LightBlue
EC_1077: 1: par
EC_1077: 2: 	par
EC_1077: 3: 		par
EC_1077: 4: 			par
EC_1077: 5: 				par
EC_1077: 6: 					par sync [the alarm is disarmed]
EC_1077: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1077: 8: 							[ clock==0 ] / turn off the tone
EC_1077: 9: 							call( PostProc_R4 )
EC_1077: 10: 					&&
EC_1077: 11: 						call( PostProc_R8 )
EC_1077: 12: 				||
EC_1077: 13: 					NIL
EC_1077: 14: 			||
EC_1077: 15: 				NIL
EC_1077: 16: 		||
EC_1077: 17: 			NIL
EC_1077: 18: 	||
EC_1077: 19: 		NIL
EC_1077: 20: ||
EC_1077: 21: 	NIL

EC_1077 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1077  --> EC_1078 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 1078 , H : 233 , step : 0 >" as EC_1078 #Pink
EC_1078: 1: par
EC_1078: 2: 	par
EC_1078: 3: 		par
EC_1078: 4: 			par
EC_1078: 5: 				par
EC_1078: 6: 					par sync [the alarm is disarmed]
EC_1078: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1078: 8: 							[ clock==0 ] / turn off the tone
EC_1078: 9: 							call( PostProc_R4 )
EC_1078: 10: 					&&
EC_1078: 11: 						NIL
EC_1078: 12: 				||
EC_1078: 13: 					NIL
EC_1078: 14: 			||
EC_1078: 15: 				NIL
EC_1078: 16: 		||
EC_1078: 17: 			NIL
EC_1078: 18: 	||
EC_1078: 19: 		NIL
EC_1078: 20: ||
EC_1078: 21: 	NIL

EC_1078 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1078  --> EC_1080 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1080 , H : 234 , step : 0 >" as EC_1080 #Orange
EC_1080: 1: par
EC_1080: 2: 	par
EC_1080: 3: 		par
EC_1080: 4: 			par
EC_1080: 5: 				par
EC_1080: 6: 					par sync [the alarm is disarmed]
EC_1080: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1080: 8: 							[ clock==0 ] / turn off the tone
EC_1080: 9: 							call( PostProc_R4 )
EC_1080: 10: 					&&
EC_1080: 11: 						NIL
EC_1080: 12: 				||
EC_1080: 13: 					NIL
EC_1080: 14: 			||
EC_1080: 15: 				NIL
EC_1080: 16: 		||
EC_1080: 17: 			NIL
EC_1080: 18: 	||
EC_1080: 19: 		NIL
EC_1080: 20: ||
EC_1080: 21: 	NIL

EC_1080 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1080  --> EC_1081 : \lact [True] / META:REDUNDANCE:EC< id : 448 , H : 187 >

state "EC< id : 1081 , H : 235 , step : 0 >" as EC_1081 #Green
EC_1081: 1: par
EC_1081: 2: 	par
EC_1081: 3: 		par
EC_1081: 4: 			par
EC_1081: 5: 				par
EC_1081: 6: 					par sync [the alarm is disarmed]
EC_1081: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1081: 8: 							[ clock==0 ] / turn off the tone
EC_1081: 9: 							call( PostProc_R4 )
EC_1081: 10: 					&&
EC_1081: 11: 						NIL
EC_1081: 12: 				||
EC_1081: 13: 					NIL
EC_1081: 14: 			||
EC_1081: 15: 				NIL
EC_1081: 16: 		||
EC_1081: 17: 			NIL
EC_1081: 18: 	||
EC_1081: 19: 		NIL
EC_1081: 20: ||
EC_1081: 21: 	NIL

EC_1081 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1045  --> EC_1047 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 1047 , H : 218 , step : 264 >" as EC_1047 #LightBlue
EC_1047: 1: par
EC_1047: 2: 	par
EC_1047: 3: 		par
EC_1047: 4: 			par
EC_1047: 5: 				par
EC_1047: 6: 					par sync [the alarm is disarmed]
EC_1047: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1047: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1047: 9: 							call( PostProc_R3 )
EC_1047: 10: 						++
EC_1047: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1047: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1047: 13: 								[ clock==0 ] / turn off the tone
EC_1047: 14: 								call( PostProc_R5 )
EC_1047: 15: 					&&
EC_1047: 16: 						call( PostProc_R9 )
EC_1047: 17: 				||
EC_1047: 18: 					NIL
EC_1047: 19: 			||
EC_1047: 20: 				NIL
EC_1047: 21: 		||
EC_1047: 22: 			NIL
EC_1047: 23: 	||
EC_1047: 24: 		NIL
EC_1047: 25: ||
EC_1047: 26: 	NIL

EC_1047 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1047  --> EC_1082 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 1082 , H : 219 , step : 0 >" as EC_1082 #Pink
EC_1082: 1: par
EC_1082: 2: 	par
EC_1082: 3: 		par
EC_1082: 4: 			par
EC_1082: 5: 				par
EC_1082: 6: 					par sync [the alarm is disarmed]
EC_1082: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1082: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1082: 9: 							call( PostProc_R3 )
EC_1082: 10: 						++
EC_1082: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1082: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1082: 13: 								[ clock==0 ] / turn off the tone
EC_1082: 14: 								call( PostProc_R5 )
EC_1082: 15: 					&&
EC_1082: 16: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1082: 17: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1082: 18: 							call( PostProc_R7 )
EC_1082: 19: 						++
EC_1082: 20: 							[ R7_x_resp==60 ] / deadline at 60
EC_1082: 21: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1082: 22: 								[ clock==0 ] / alert the emergency center
EC_1082: 23: 								call( PostProc_R9 )
EC_1082: 24: 				||
EC_1082: 25: 					NIL
EC_1082: 26: 			||
EC_1082: 27: 				NIL
EC_1082: 28: 		||
EC_1082: 29: 			NIL
EC_1082: 30: 	||
EC_1082: 31: 		NIL
EC_1082: 32: ||
EC_1082: 33: 	NIL

EC_1082 : DBM: R7_x_resp=60, R3_x_resp=240, clock<=0, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1082  --> EC_1084 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 1084 , H : 220 , step : 0 >" as EC_1084 #Orange
EC_1084: 1: par
EC_1084: 2: 	par
EC_1084: 3: 		par
EC_1084: 4: 			par
EC_1084: 5: 				par
EC_1084: 6: 					par sync [the alarm is disarmed]
EC_1084: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1084: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1084: 9: 							call( PostProc_R3 )
EC_1084: 10: 						++
EC_1084: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1084: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1084: 13: 								[ clock==0 ] / turn off the tone
EC_1084: 14: 								call( PostProc_R5 )
EC_1084: 15: 					&&
EC_1084: 16: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1084: 17: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1084: 18: 							call( PostProc_R7 )
EC_1084: 19: 						++
EC_1084: 20: 							[ R7_x_resp==60 ] / deadline at 60
EC_1084: 21: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1084: 22: 								[ clock==0 ] / alert the emergency center
EC_1084: 23: 								call( PostProc_R9 )
EC_1084: 24: 				||
EC_1084: 25: 					NIL
EC_1084: 26: 			||
EC_1084: 27: 				NIL
EC_1084: 28: 		||
EC_1084: 29: 			NIL
EC_1084: 30: 	||
EC_1084: 31: 		NIL
EC_1084: 32: ||
EC_1084: 33: 	NIL

EC_1084 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1084  --> EC_1085 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 1085 , H : 221 , step : 265 >" as EC_1085 #LightBlue
EC_1085: 1: par
EC_1085: 2: 	par
EC_1085: 3: 		par
EC_1085: 4: 			par
EC_1085: 5: 				par
EC_1085: 6: 					par sync [the alarm is disarmed]
EC_1085: 7: 						call( PostProc_R3 )
EC_1085: 8: 					&&
EC_1085: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1085: 10: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1085: 11: 							call( PostProc_R7 )
EC_1085: 12: 						++
EC_1085: 13: 							[ R7_x_resp==60 ] / deadline at 60
EC_1085: 14: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1085: 15: 								[ clock==0 ] / alert the emergency center
EC_1085: 16: 								call( PostProc_R9 )
EC_1085: 17: 				||
EC_1085: 18: 					NIL
EC_1085: 19: 			||
EC_1085: 20: 				NIL
EC_1085: 21: 		||
EC_1085: 22: 			NIL
EC_1085: 23: 	||
EC_1085: 24: 		NIL
EC_1085: 25: ||
EC_1085: 26: 	NIL

EC_1085 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1085  --> EC_1089 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 1089 , H : 222 , step : 0 >" as EC_1089 #Pink
EC_1089: 1: par
EC_1089: 2: 	par
EC_1089: 3: 		par
EC_1089: 4: 			par
EC_1089: 5: 				par
EC_1089: 6: 					par sync [the alarm is disarmed]
EC_1089: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1089: 8: 							[ true ] / the alarm is disarmed
EC_1089: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1089: 10: 								[ clock==0 ] / turn off the tone
EC_1089: 11: 								call( PostProc_R4 )
EC_1089: 12: 					&&
EC_1089: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1089: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1089: 15: 							call( PostProc_R7 )
EC_1089: 16: 						++
EC_1089: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1089: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1089: 19: 								[ clock==0 ] / alert the emergency center
EC_1089: 20: 								call( PostProc_R9 )
EC_1089: 21: 				||
EC_1089: 22: 					NIL
EC_1089: 23: 			||
EC_1089: 24: 				NIL
EC_1089: 25: 		||
EC_1089: 26: 			NIL
EC_1089: 27: 	||
EC_1089: 28: 		NIL
EC_1089: 29: ||
EC_1089: 30: 	NIL

EC_1089 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1089  --> EC_1091 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1091 , H : 223 , step : 0 >" as EC_1091 #Orange
EC_1091: 1: par
EC_1091: 2: 	par
EC_1091: 3: 		par
EC_1091: 4: 			par
EC_1091: 5: 				par
EC_1091: 6: 					par sync [the alarm is disarmed]
EC_1091: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1091: 8: 							[ true ] / the alarm is disarmed
EC_1091: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1091: 10: 								[ clock==0 ] / turn off the tone
EC_1091: 11: 								call( PostProc_R4 )
EC_1091: 12: 					&&
EC_1091: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1091: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1091: 15: 							call( PostProc_R7 )
EC_1091: 16: 						++
EC_1091: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1091: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1091: 19: 								[ clock==0 ] / alert the emergency center
EC_1091: 20: 								call( PostProc_R9 )
EC_1091: 21: 				||
EC_1091: 22: 					NIL
EC_1091: 23: 			||
EC_1091: 24: 				NIL
EC_1091: 25: 		||
EC_1091: 26: 			NIL
EC_1091: 27: 	||
EC_1091: 28: 		NIL
EC_1091: 29: ||
EC_1091: 30: 	NIL

EC_1091 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1091  --> EC_1092 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 1092 , H : 224 , step : 266 >" as EC_1092 #LightBlue
EC_1092: 1: par
EC_1092: 2: 	par
EC_1092: 3: 		par
EC_1092: 4: 			par
EC_1092: 5: 				par
EC_1092: 6: 					par sync [the alarm is disarmed]
EC_1092: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1092: 8: 							[ true ] / the alarm is disarmed
EC_1092: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1092: 10: 								[ clock==0 ] / turn off the tone
EC_1092: 11: 								call( PostProc_R4 )
EC_1092: 12: 					&&
EC_1092: 13: 						call( PostProc_R7 )
EC_1092: 14: 				||
EC_1092: 15: 					NIL
EC_1092: 16: 			||
EC_1092: 17: 				NIL
EC_1092: 18: 		||
EC_1092: 19: 			NIL
EC_1092: 20: 	||
EC_1092: 21: 		NIL
EC_1092: 22: ||
EC_1092: 23: 	NIL

EC_1092 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1092  --> EC_1094 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 1094 , H : 225 , step : 0 >" as EC_1094 #Pink
EC_1094: 1: par
EC_1094: 2: 	par
EC_1094: 3: 		par
EC_1094: 4: 			par
EC_1094: 5: 				par
EC_1094: 6: 					par sync [the alarm is disarmed]
EC_1094: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1094: 8: 							[ true ] / the alarm is disarmed
EC_1094: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1094: 10: 								[ clock==0 ] / turn off the tone
EC_1094: 11: 								call( PostProc_R4 )
EC_1094: 12: 					&&
EC_1094: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1094: 14: 							[ true ] / the alarm is disarmed
EC_1094: 15: 							call( PostProc_R8 )
EC_1094: 16: 				||
EC_1094: 17: 					NIL
EC_1094: 18: 			||
EC_1094: 19: 				NIL
EC_1094: 20: 		||
EC_1094: 21: 			NIL
EC_1094: 22: 	||
EC_1094: 23: 		NIL
EC_1094: 24: ||
EC_1094: 25: 	NIL

EC_1094 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1094  --> EC_1096 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1096 , H : 226 , step : 0 >" as EC_1096 #Orange
EC_1096: 1: par
EC_1096: 2: 	par
EC_1096: 3: 		par
EC_1096: 4: 			par
EC_1096: 5: 				par
EC_1096: 6: 					par sync [the alarm is disarmed]
EC_1096: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1096: 8: 							[ true ] / the alarm is disarmed
EC_1096: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1096: 10: 								[ clock==0 ] / turn off the tone
EC_1096: 11: 								call( PostProc_R4 )
EC_1096: 12: 					&&
EC_1096: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1096: 14: 							[ true ] / the alarm is disarmed
EC_1096: 15: 							call( PostProc_R8 )
EC_1096: 16: 				||
EC_1096: 17: 					NIL
EC_1096: 18: 			||
EC_1096: 19: 				NIL
EC_1096: 20: 		||
EC_1096: 21: 			NIL
EC_1096: 22: 	||
EC_1096: 23: 		NIL
EC_1096: 24: ||
EC_1096: 25: 	NIL

EC_1096 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1096  --> EC_1097 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 1097 , H : 227 , step : 267 >" as EC_1097 #LightBlue
EC_1097: 1: par
EC_1097: 2: 	par
EC_1097: 3: 		par
EC_1097: 4: 			par
EC_1097: 5: 				par
EC_1097: 6: 					par sync [the alarm is disarmed]
EC_1097: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1097: 8: 							[ clock==0 ] / turn off the tone
EC_1097: 9: 							call( PostProc_R4 )
EC_1097: 10: 					&&
EC_1097: 11: 						call( PostProc_R8 )
EC_1097: 12: 				||
EC_1097: 13: 					NIL
EC_1097: 14: 			||
EC_1097: 15: 				NIL
EC_1097: 16: 		||
EC_1097: 17: 			NIL
EC_1097: 18: 	||
EC_1097: 19: 		NIL
EC_1097: 20: ||
EC_1097: 21: 	NIL

EC_1097 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1097  --> EC_1098 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 1098 , H : 228 , step : 0 >" as EC_1098 #Pink
EC_1098: 1: par
EC_1098: 2: 	par
EC_1098: 3: 		par
EC_1098: 4: 			par
EC_1098: 5: 				par
EC_1098: 6: 					par sync [the alarm is disarmed]
EC_1098: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1098: 8: 							[ clock==0 ] / turn off the tone
EC_1098: 9: 							call( PostProc_R4 )
EC_1098: 10: 					&&
EC_1098: 11: 						NIL
EC_1098: 12: 				||
EC_1098: 13: 					NIL
EC_1098: 14: 			||
EC_1098: 15: 				NIL
EC_1098: 16: 		||
EC_1098: 17: 			NIL
EC_1098: 18: 	||
EC_1098: 19: 		NIL
EC_1098: 20: ||
EC_1098: 21: 	NIL

EC_1098 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1098  --> EC_1100 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1100 , H : 229 , step : 0 >" as EC_1100 #Orange
EC_1100: 1: par
EC_1100: 2: 	par
EC_1100: 3: 		par
EC_1100: 4: 			par
EC_1100: 5: 				par
EC_1100: 6: 					par sync [the alarm is disarmed]
EC_1100: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1100: 8: 							[ clock==0 ] / turn off the tone
EC_1100: 9: 							call( PostProc_R4 )
EC_1100: 10: 					&&
EC_1100: 11: 						NIL
EC_1100: 12: 				||
EC_1100: 13: 					NIL
EC_1100: 14: 			||
EC_1100: 15: 				NIL
EC_1100: 16: 		||
EC_1100: 17: 			NIL
EC_1100: 18: 	||
EC_1100: 19: 		NIL
EC_1100: 20: ||
EC_1100: 21: 	NIL

EC_1100 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_1100  --> EC_1101 : \lact [True] / META:REDUNDANCE:EC< id : 327 , H : 140 >

state "EC< id : 1101 , H : 230 , step : 0 >" as EC_1101 #Green
EC_1101: 1: par
EC_1101: 2: 	par
EC_1101: 3: 		par
EC_1101: 4: 			par
EC_1101: 5: 				par
EC_1101: 6: 					par sync [the alarm is disarmed]
EC_1101: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1101: 8: 							[ clock==0 ] / turn off the tone
EC_1101: 9: 							call( PostProc_R4 )
EC_1101: 10: 					&&
EC_1101: 11: 						NIL
EC_1101: 12: 				||
EC_1101: 13: 					NIL
EC_1101: 14: 			||
EC_1101: 15: 				NIL
EC_1101: 16: 		||
EC_1101: 17: 			NIL
EC_1101: 18: 	||
EC_1101: 19: 		NIL
EC_1101: 20: ||
EC_1101: 21: 	NIL

EC_1101 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_1091  --> EC_1093 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 1093 , H : 224 , step : 268 >" as EC_1093 #LightBlue
EC_1093: 1: par
EC_1093: 2: 	par
EC_1093: 3: 		par
EC_1093: 4: 			par
EC_1093: 5: 				par
EC_1093: 6: 					par sync [the alarm is disarmed]
EC_1093: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1093: 8: 							[ true ] / the alarm is disarmed
EC_1093: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1093: 10: 								[ clock==0 ] / turn off the tone
EC_1093: 11: 								call( PostProc_R4 )
EC_1093: 12: 					&&
EC_1093: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1093: 14: 							[ clock==0 ] / alert the emergency center
EC_1093: 15: 							call( PostProc_R9 )
EC_1093: 16: 				||
EC_1093: 17: 					NIL
EC_1093: 18: 			||
EC_1093: 19: 				NIL
EC_1093: 20: 		||
EC_1093: 21: 			NIL
EC_1093: 22: 	||
EC_1093: 23: 		NIL
EC_1093: 24: ||
EC_1093: 25: 	NIL

EC_1093 : DBM: R7_x_resp=60, R3_x_resp=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp=clock, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-240,
EC_1093  --> EC_1103 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1103 , H : 225 , step : 0 >" as EC_1103 #Orange
EC_1103: 1: par
EC_1103: 2: 	par
EC_1103: 3: 		par
EC_1103: 4: 			par
EC_1103: 5: 				par
EC_1103: 6: 					par sync [the alarm is disarmed]
EC_1103: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1103: 8: 							[ true ] / the alarm is disarmed
EC_1103: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1103: 10: 								[ clock==0 ] / turn off the tone
EC_1103: 11: 								call( PostProc_R4 )
EC_1103: 12: 					&&
EC_1103: 13: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1103: 14: 							[ clock==0 ] / alert the emergency center
EC_1103: 15: 							call( PostProc_R9 )
EC_1103: 16: 				||
EC_1103: 17: 					NIL
EC_1103: 18: 			||
EC_1103: 19: 				NIL
EC_1103: 20: 		||
EC_1103: 21: 			NIL
EC_1103: 22: 	||
EC_1103: 23: 		NIL
EC_1103: 24: ||
EC_1103: 25: 	NIL

EC_1103 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1103  --> EC_1104 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 1104 , H : 226 , step : 269 >" as EC_1104 #LightBlue
EC_1104: 1: par
EC_1104: 2: 	par
EC_1104: 3: 		par
EC_1104: 4: 			par
EC_1104: 5: 				par
EC_1104: 6: 					par sync [the alarm is disarmed]
EC_1104: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1104: 8: 							[ true ] / the alarm is disarmed
EC_1104: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1104: 10: 								[ clock==0 ] / turn off the tone
EC_1104: 11: 								call( PostProc_R4 )
EC_1104: 12: 					&&
EC_1104: 13: 						call( PostProc_R9 )
EC_1104: 14: 				||
EC_1104: 15: 					NIL
EC_1104: 16: 			||
EC_1104: 17: 				NIL
EC_1104: 18: 		||
EC_1104: 19: 			NIL
EC_1104: 20: 	||
EC_1104: 21: 		NIL
EC_1104: 22: ||
EC_1104: 23: 	NIL

EC_1104 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1104  --> EC_1105 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 1105 , H : 227 , step : 0 >" as EC_1105 #Pink
EC_1105: 1: par
EC_1105: 2: 	par
EC_1105: 3: 		par
EC_1105: 4: 			par
EC_1105: 5: 				par
EC_1105: 6: 					par sync [the alarm is disarmed]
EC_1105: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1105: 8: 							[ true ] / the alarm is disarmed
EC_1105: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1105: 10: 								[ clock==0 ] / turn off the tone
EC_1105: 11: 								call( PostProc_R4 )
EC_1105: 12: 					&&
EC_1105: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1105: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1105: 15: 							call( PostProc_R7 )
EC_1105: 16: 						++
EC_1105: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1105: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1105: 19: 								[ clock==0 ] / alert the emergency center
EC_1105: 20: 								call( PostProc_R9 )
EC_1105: 21: 				||
EC_1105: 22: 					NIL
EC_1105: 23: 			||
EC_1105: 24: 				NIL
EC_1105: 25: 		||
EC_1105: 26: 			NIL
EC_1105: 27: 	||
EC_1105: 28: 		NIL
EC_1105: 29: ||
EC_1105: 30: 	NIL

EC_1105 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1105  --> EC_1107 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 1107 , H : 228 , step : 0 >" as EC_1107 #Orange
EC_1107: 1: par
EC_1107: 2: 	par
EC_1107: 3: 		par
EC_1107: 4: 			par
EC_1107: 5: 				par
EC_1107: 6: 					par sync [the alarm is disarmed]
EC_1107: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1107: 8: 							[ true ] / the alarm is disarmed
EC_1107: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1107: 10: 								[ clock==0 ] / turn off the tone
EC_1107: 11: 								call( PostProc_R4 )
EC_1107: 12: 					&&
EC_1107: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1107: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1107: 15: 							call( PostProc_R7 )
EC_1107: 16: 						++
EC_1107: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1107: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1107: 19: 								[ clock==0 ] / alert the emergency center
EC_1107: 20: 								call( PostProc_R9 )
EC_1107: 21: 				||
EC_1107: 22: 					NIL
EC_1107: 23: 			||
EC_1107: 24: 				NIL
EC_1107: 25: 		||
EC_1107: 26: 			NIL
EC_1107: 27: 	||
EC_1107: 28: 		NIL
EC_1107: 29: ||
EC_1107: 30: 	NIL

EC_1107 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1107  --> EC_1108 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 1108 , H : 229 , step : 270 >" as EC_1108 #LightBlue
EC_1108: 1: par
EC_1108: 2: 	par
EC_1108: 3: 		par
EC_1108: 4: 			par
EC_1108: 5: 				par
EC_1108: 6: 					par sync [the alarm is disarmed]
EC_1108: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1108: 8: 							[ true ] / the alarm is disarmed
EC_1108: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1108: 10: 								[ clock==0 ] / turn off the tone
EC_1108: 11: 								call( PostProc_R4 )
EC_1108: 12: 					&&
EC_1108: 13: 						call( PostProc_R7 )
EC_1108: 14: 				||
EC_1108: 15: 					NIL
EC_1108: 16: 			||
EC_1108: 17: 				NIL
EC_1108: 18: 		||
EC_1108: 19: 			NIL
EC_1108: 20: 	||
EC_1108: 21: 		NIL
EC_1108: 22: ||
EC_1108: 23: 	NIL

EC_1108 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1108  --> EC_1110 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 1110 , H : 230 , step : 0 >" as EC_1110 #Pink
EC_1110: 1: par
EC_1110: 2: 	par
EC_1110: 3: 		par
EC_1110: 4: 			par
EC_1110: 5: 				par
EC_1110: 6: 					par sync [the alarm is disarmed]
EC_1110: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1110: 8: 							[ true ] / the alarm is disarmed
EC_1110: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1110: 10: 								[ clock==0 ] / turn off the tone
EC_1110: 11: 								call( PostProc_R4 )
EC_1110: 12: 					&&
EC_1110: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1110: 14: 							[ true ] / the alarm is disarmed
EC_1110: 15: 							call( PostProc_R8 )
EC_1110: 16: 				||
EC_1110: 17: 					NIL
EC_1110: 18: 			||
EC_1110: 19: 				NIL
EC_1110: 20: 		||
EC_1110: 21: 			NIL
EC_1110: 22: 	||
EC_1110: 23: 		NIL
EC_1110: 24: ||
EC_1110: 25: 	NIL

EC_1110 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1110  --> EC_1112 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1112 , H : 231 , step : 0 >" as EC_1112 #Orange
EC_1112: 1: par
EC_1112: 2: 	par
EC_1112: 3: 		par
EC_1112: 4: 			par
EC_1112: 5: 				par
EC_1112: 6: 					par sync [the alarm is disarmed]
EC_1112: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1112: 8: 							[ true ] / the alarm is disarmed
EC_1112: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1112: 10: 								[ clock==0 ] / turn off the tone
EC_1112: 11: 								call( PostProc_R4 )
EC_1112: 12: 					&&
EC_1112: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1112: 14: 							[ true ] / the alarm is disarmed
EC_1112: 15: 							call( PostProc_R8 )
EC_1112: 16: 				||
EC_1112: 17: 					NIL
EC_1112: 18: 			||
EC_1112: 19: 				NIL
EC_1112: 20: 		||
EC_1112: 21: 			NIL
EC_1112: 22: 	||
EC_1112: 23: 		NIL
EC_1112: 24: ||
EC_1112: 25: 	NIL

EC_1112 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1112  --> EC_1113 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 1113 , H : 232 , step : 271 >" as EC_1113 #LightBlue
EC_1113: 1: par
EC_1113: 2: 	par
EC_1113: 3: 		par
EC_1113: 4: 			par
EC_1113: 5: 				par
EC_1113: 6: 					par sync [the alarm is disarmed]
EC_1113: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1113: 8: 							[ clock==0 ] / turn off the tone
EC_1113: 9: 							call( PostProc_R4 )
EC_1113: 10: 					&&
EC_1113: 11: 						call( PostProc_R8 )
EC_1113: 12: 				||
EC_1113: 13: 					NIL
EC_1113: 14: 			||
EC_1113: 15: 				NIL
EC_1113: 16: 		||
EC_1113: 17: 			NIL
EC_1113: 18: 	||
EC_1113: 19: 		NIL
EC_1113: 20: ||
EC_1113: 21: 	NIL

EC_1113 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1113  --> EC_1114 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 1114 , H : 233 , step : 0 >" as EC_1114 #Pink
EC_1114: 1: par
EC_1114: 2: 	par
EC_1114: 3: 		par
EC_1114: 4: 			par
EC_1114: 5: 				par
EC_1114: 6: 					par sync [the alarm is disarmed]
EC_1114: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1114: 8: 							[ clock==0 ] / turn off the tone
EC_1114: 9: 							call( PostProc_R4 )
EC_1114: 10: 					&&
EC_1114: 11: 						NIL
EC_1114: 12: 				||
EC_1114: 13: 					NIL
EC_1114: 14: 			||
EC_1114: 15: 				NIL
EC_1114: 16: 		||
EC_1114: 17: 			NIL
EC_1114: 18: 	||
EC_1114: 19: 		NIL
EC_1114: 20: ||
EC_1114: 21: 	NIL

EC_1114 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1114  --> EC_1116 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1116 , H : 234 , step : 0 >" as EC_1116 #Orange
EC_1116: 1: par
EC_1116: 2: 	par
EC_1116: 3: 		par
EC_1116: 4: 			par
EC_1116: 5: 				par
EC_1116: 6: 					par sync [the alarm is disarmed]
EC_1116: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1116: 8: 							[ clock==0 ] / turn off the tone
EC_1116: 9: 							call( PostProc_R4 )
EC_1116: 10: 					&&
EC_1116: 11: 						NIL
EC_1116: 12: 				||
EC_1116: 13: 					NIL
EC_1116: 14: 			||
EC_1116: 15: 				NIL
EC_1116: 16: 		||
EC_1116: 17: 			NIL
EC_1116: 18: 	||
EC_1116: 19: 		NIL
EC_1116: 20: ||
EC_1116: 21: 	NIL

EC_1116 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1116  --> EC_1117 : \lact [True] / META:REDUNDANCE:EC< id : 448 , H : 187 >

state "EC< id : 1117 , H : 235 , step : 0 >" as EC_1117 #Green
EC_1117: 1: par
EC_1117: 2: 	par
EC_1117: 3: 		par
EC_1117: 4: 			par
EC_1117: 5: 				par
EC_1117: 6: 					par sync [the alarm is disarmed]
EC_1117: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1117: 8: 							[ clock==0 ] / turn off the tone
EC_1117: 9: 							call( PostProc_R4 )
EC_1117: 10: 					&&
EC_1117: 11: 						NIL
EC_1117: 12: 				||
EC_1117: 13: 					NIL
EC_1117: 14: 			||
EC_1117: 15: 				NIL
EC_1117: 16: 		||
EC_1117: 17: 			NIL
EC_1117: 18: 	||
EC_1117: 19: 		NIL
EC_1117: 20: ||
EC_1117: 21: 	NIL

EC_1117 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1084  --> EC_1086 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 1086 , H : 221 , step : 272 >" as EC_1086 #LightBlue
EC_1086: 1: par
EC_1086: 2: 	par
EC_1086: 3: 		par
EC_1086: 4: 			par
EC_1086: 5: 				par
EC_1086: 6: 					par sync [the alarm is disarmed]
EC_1086: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1086: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1086: 9: 							call( PostProc_R3 )
EC_1086: 10: 						++
EC_1086: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1086: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1086: 13: 								[ clock==0 ] / turn off the tone
EC_1086: 14: 								call( PostProc_R5 )
EC_1086: 15: 					&&
EC_1086: 16: 						call( PostProc_R7 )
EC_1086: 17: 				||
EC_1086: 18: 					NIL
EC_1086: 19: 			||
EC_1086: 20: 				NIL
EC_1086: 21: 		||
EC_1086: 22: 			NIL
EC_1086: 23: 	||
EC_1086: 24: 		NIL
EC_1086: 25: ||
EC_1086: 26: 	NIL

EC_1086 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1086  --> EC_1118 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 1118 , H : 222 , step : 0 >" as EC_1118 #Pink
EC_1118: 1: par
EC_1118: 2: 	par
EC_1118: 3: 		par
EC_1118: 4: 			par
EC_1118: 5: 				par
EC_1118: 6: 					par sync [the alarm is disarmed]
EC_1118: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1118: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1118: 9: 							call( PostProc_R3 )
EC_1118: 10: 						++
EC_1118: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1118: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1118: 13: 								[ clock==0 ] / turn off the tone
EC_1118: 14: 								call( PostProc_R5 )
EC_1118: 15: 					&&
EC_1118: 16: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1118: 17: 							[ true ] / the alarm is disarmed
EC_1118: 18: 							call( PostProc_R8 )
EC_1118: 19: 				||
EC_1118: 20: 					NIL
EC_1118: 21: 			||
EC_1118: 22: 				NIL
EC_1118: 23: 		||
EC_1118: 24: 			NIL
EC_1118: 25: 	||
EC_1118: 26: 		NIL
EC_1118: 27: ||
EC_1118: 28: 	NIL

EC_1118 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1118  --> EC_1120 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1120 , H : 223 , step : 0 >" as EC_1120 #Orange
EC_1120: 1: par
EC_1120: 2: 	par
EC_1120: 3: 		par
EC_1120: 4: 			par
EC_1120: 5: 				par
EC_1120: 6: 					par sync [the alarm is disarmed]
EC_1120: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1120: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1120: 9: 							call( PostProc_R3 )
EC_1120: 10: 						++
EC_1120: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1120: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1120: 13: 								[ clock==0 ] / turn off the tone
EC_1120: 14: 								call( PostProc_R5 )
EC_1120: 15: 					&&
EC_1120: 16: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1120: 17: 							[ true ] / the alarm is disarmed
EC_1120: 18: 							call( PostProc_R8 )
EC_1120: 19: 				||
EC_1120: 20: 					NIL
EC_1120: 21: 			||
EC_1120: 22: 				NIL
EC_1120: 23: 		||
EC_1120: 24: 			NIL
EC_1120: 25: 	||
EC_1120: 26: 		NIL
EC_1120: 27: ||
EC_1120: 28: 	NIL

EC_1120 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1120  --> EC_1121 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 1121 , H : 224 , step : 273 >" as EC_1121 #LightBlue
EC_1121: 1: par
EC_1121: 2: 	par
EC_1121: 3: 		par
EC_1121: 4: 			par
EC_1121: 5: 				par
EC_1121: 6: 					par sync [the alarm is disarmed]
EC_1121: 7: 						call( PostProc_R3 )
EC_1121: 8: 					&&
EC_1121: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1121: 10: 							[ true ] / the alarm is disarmed
EC_1121: 11: 							call( PostProc_R8 )
EC_1121: 12: 				||
EC_1121: 13: 					NIL
EC_1121: 14: 			||
EC_1121: 15: 				NIL
EC_1121: 16: 		||
EC_1121: 17: 			NIL
EC_1121: 18: 	||
EC_1121: 19: 		NIL
EC_1121: 20: ||
EC_1121: 21: 	NIL

EC_1121 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1121  --> EC_1123 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 1123 , H : 225 , step : 0 >" as EC_1123 #Pink
EC_1123: 1: par
EC_1123: 2: 	par
EC_1123: 3: 		par
EC_1123: 4: 			par
EC_1123: 5: 				par
EC_1123: 6: 					par sync [the alarm is disarmed]
EC_1123: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1123: 8: 							[ true ] / the alarm is disarmed
EC_1123: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1123: 10: 								[ clock==0 ] / turn off the tone
EC_1123: 11: 								call( PostProc_R4 )
EC_1123: 12: 					&&
EC_1123: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1123: 14: 							[ true ] / the alarm is disarmed
EC_1123: 15: 							call( PostProc_R8 )
EC_1123: 16: 				||
EC_1123: 17: 					NIL
EC_1123: 18: 			||
EC_1123: 19: 				NIL
EC_1123: 20: 		||
EC_1123: 21: 			NIL
EC_1123: 22: 	||
EC_1123: 23: 		NIL
EC_1123: 24: ||
EC_1123: 25: 	NIL

EC_1123 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1123  --> EC_1125 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1125 , H : 226 , step : 0 >" as EC_1125 #Orange
EC_1125: 1: par
EC_1125: 2: 	par
EC_1125: 3: 		par
EC_1125: 4: 			par
EC_1125: 5: 				par
EC_1125: 6: 					par sync [the alarm is disarmed]
EC_1125: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1125: 8: 							[ true ] / the alarm is disarmed
EC_1125: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1125: 10: 								[ clock==0 ] / turn off the tone
EC_1125: 11: 								call( PostProc_R4 )
EC_1125: 12: 					&&
EC_1125: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1125: 14: 							[ true ] / the alarm is disarmed
EC_1125: 15: 							call( PostProc_R8 )
EC_1125: 16: 				||
EC_1125: 17: 					NIL
EC_1125: 18: 			||
EC_1125: 19: 				NIL
EC_1125: 20: 		||
EC_1125: 21: 			NIL
EC_1125: 22: 	||
EC_1125: 23: 		NIL
EC_1125: 24: ||
EC_1125: 25: 	NIL

EC_1125 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1125  --> EC_1126 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 1126 , H : 227 , step : 274 >" as EC_1126 #LightBlue
EC_1126: 1: par
EC_1126: 2: 	par
EC_1126: 3: 		par
EC_1126: 4: 			par
EC_1126: 5: 				par
EC_1126: 6: 					par sync [the alarm is disarmed]
EC_1126: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1126: 8: 							[ clock==0 ] / turn off the tone
EC_1126: 9: 							call( PostProc_R4 )
EC_1126: 10: 					&&
EC_1126: 11: 						call( PostProc_R8 )
EC_1126: 12: 				||
EC_1126: 13: 					NIL
EC_1126: 14: 			||
EC_1126: 15: 				NIL
EC_1126: 16: 		||
EC_1126: 17: 			NIL
EC_1126: 18: 	||
EC_1126: 19: 		NIL
EC_1126: 20: ||
EC_1126: 21: 	NIL

EC_1126 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1126  --> EC_1127 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 1127 , H : 228 , step : 0 >" as EC_1127 #Pink
EC_1127: 1: par
EC_1127: 2: 	par
EC_1127: 3: 		par
EC_1127: 4: 			par
EC_1127: 5: 				par
EC_1127: 6: 					par sync [the alarm is disarmed]
EC_1127: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1127: 8: 							[ clock==0 ] / turn off the tone
EC_1127: 9: 							call( PostProc_R4 )
EC_1127: 10: 					&&
EC_1127: 11: 						NIL
EC_1127: 12: 				||
EC_1127: 13: 					NIL
EC_1127: 14: 			||
EC_1127: 15: 				NIL
EC_1127: 16: 		||
EC_1127: 17: 			NIL
EC_1127: 18: 	||
EC_1127: 19: 		NIL
EC_1127: 20: ||
EC_1127: 21: 	NIL

EC_1127 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=60,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp=clock, R3_x_resp-clock<=240, clock-R3_x_resp<=-240,
EC_1127  --> EC_1129 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1129 , H : 229 , step : 0 >" as EC_1129 #Orange
EC_1129: 1: par
EC_1129: 2: 	par
EC_1129: 3: 		par
EC_1129: 4: 			par
EC_1129: 5: 				par
EC_1129: 6: 					par sync [the alarm is disarmed]
EC_1129: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1129: 8: 							[ clock==0 ] / turn off the tone
EC_1129: 9: 							call( PostProc_R4 )
EC_1129: 10: 					&&
EC_1129: 11: 						NIL
EC_1129: 12: 				||
EC_1129: 13: 					NIL
EC_1129: 14: 			||
EC_1129: 15: 				NIL
EC_1129: 16: 		||
EC_1129: 17: 			NIL
EC_1129: 18: 	||
EC_1129: 19: 		NIL
EC_1129: 20: ||
EC_1129: 21: 	NIL

EC_1129 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_1129  --> EC_1130 : \lact [True] / META:REDUNDANCE:EC< id : 327 , H : 140 >

state "EC< id : 1130 , H : 230 , step : 0 >" as EC_1130 #Green
EC_1130: 1: par
EC_1130: 2: 	par
EC_1130: 3: 		par
EC_1130: 4: 			par
EC_1130: 5: 				par
EC_1130: 6: 					par sync [the alarm is disarmed]
EC_1130: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1130: 8: 							[ clock==0 ] / turn off the tone
EC_1130: 9: 							call( PostProc_R4 )
EC_1130: 10: 					&&
EC_1130: 11: 						NIL
EC_1130: 12: 				||
EC_1130: 13: 					NIL
EC_1130: 14: 			||
EC_1130: 15: 				NIL
EC_1130: 16: 		||
EC_1130: 17: 			NIL
EC_1130: 18: 	||
EC_1130: 19: 		NIL
EC_1130: 20: ||
EC_1130: 21: 	NIL

EC_1130 : DBM: R7_x_resp<=60, 240<=R3_x_resp<=300, clock<=0,\l   R7_x_resp-R3_x_resp<=-240, R3_x_resp-R7_x_resp<=240,\l   R7_x_resp-clock<=60, clock-R7_x_resp<=0, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-240,
EC_1120  --> EC_1122 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R3_x_resp==300] / deadline at 300

state "EC< id : 1122 , H : 224 , step : 275 >" as EC_1122 #LightBlue
EC_1122: 1: par
EC_1122: 2: 	par
EC_1122: 3: 		par
EC_1122: 4: 			par
EC_1122: 5: 				par
EC_1122: 6: 					par sync [the alarm is disarmed]
EC_1122: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1122: 8: 							[ clock==0 ] / turn off the tone
EC_1122: 9: 							call( PostProc_R5 )
EC_1122: 10: 					&&
EC_1122: 11: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1122: 12: 							[ true ] / the alarm is disarmed
EC_1122: 13: 							call( PostProc_R8 )
EC_1122: 14: 				||
EC_1122: 15: 					NIL
EC_1122: 16: 			||
EC_1122: 17: 				NIL
EC_1122: 18: 		||
EC_1122: 19: 			NIL
EC_1122: 20: 	||
EC_1122: 21: 		NIL
EC_1122: 22: ||
EC_1122: 23: 	NIL

EC_1122 : DBM: R7_x_resp=60, R3_x_resp=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp=clock, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-240,
EC_1122  --> EC_1132 : inv [clock] => [clock<=0, R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1132 , H : 225 , step : 0 >" as EC_1132 #Orange
EC_1132: 1: par
EC_1132: 2: 	par
EC_1132: 3: 		par
EC_1132: 4: 			par
EC_1132: 5: 				par
EC_1132: 6: 					par sync [the alarm is disarmed]
EC_1132: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1132: 8: 							[ clock==0 ] / turn off the tone
EC_1132: 9: 							call( PostProc_R5 )
EC_1132: 10: 					&&
EC_1132: 11: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1132: 12: 							[ true ] / the alarm is disarmed
EC_1132: 13: 							call( PostProc_R8 )
EC_1132: 14: 				||
EC_1132: 15: 					NIL
EC_1132: 16: 			||
EC_1132: 17: 				NIL
EC_1132: 18: 		||
EC_1132: 19: 			NIL
EC_1132: 20: 	||
EC_1132: 21: 		NIL
EC_1132: 22: ||
EC_1132: 23: 	NIL

EC_1132 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1132  --> EC_1133 : inv [clock] => [clock<=0, R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / turn off the tone

state "EC< id : 1133 , H : 226 , step : 276 >" as EC_1133 #LightBlue
EC_1133: 1: par
EC_1133: 2: 	par
EC_1133: 3: 		par
EC_1133: 4: 			par
EC_1133: 5: 				par
EC_1133: 6: 					par sync [the alarm is disarmed]
EC_1133: 7: 						call( PostProc_R5 )
EC_1133: 8: 					&&
EC_1133: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1133: 10: 							[ true ] / the alarm is disarmed
EC_1133: 11: 							call( PostProc_R8 )
EC_1133: 12: 				||
EC_1133: 13: 					NIL
EC_1133: 14: 			||
EC_1133: 15: 				NIL
EC_1133: 16: 		||
EC_1133: 17: 			NIL
EC_1133: 18: 	||
EC_1133: 19: 		NIL
EC_1133: 20: ||
EC_1133: 21: 	NIL

EC_1133 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1133  --> EC_1134 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R5

state "EC< id : 1134 , H : 227 , step : 0 >" as EC_1134 #Pink
EC_1134: 1: par
EC_1134: 2: 	par
EC_1134: 3: 		par
EC_1134: 4: 			par
EC_1134: 5: 				par
EC_1134: 6: 					par sync [the alarm is disarmed]
EC_1134: 7: 						NIL
EC_1134: 8: 					&&
EC_1134: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1134: 10: 							[ true ] / the alarm is disarmed
EC_1134: 11: 							call( PostProc_R8 )
EC_1134: 12: 				||
EC_1134: 13: 					NIL
EC_1134: 14: 			||
EC_1134: 15: 				NIL
EC_1134: 16: 		||
EC_1134: 17: 			NIL
EC_1134: 18: 	||
EC_1134: 19: 		NIL
EC_1134: 20: ||
EC_1134: 21: 	NIL

EC_1134 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1134  --> EC_1136 : inv [] => [True, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1136 , H : 228 , step : 0 >" as EC_1136 #Red
EC_1136: 1: par
EC_1136: 2: 	par
EC_1136: 3: 		par
EC_1136: 4: 			par
EC_1136: 5: 				par
EC_1136: 6: 					par sync [the alarm is disarmed]
EC_1136: 7: 						NIL
EC_1136: 8: 					&&
EC_1136: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1136: 10: 							[ true ] / the alarm is disarmed
EC_1136: 11: 							call( PostProc_R8 )
EC_1136: 12: 				||
EC_1136: 13: 					NIL
EC_1136: 14: 			||
EC_1136: 15: 				NIL
EC_1136: 16: 		||
EC_1136: 17: 			NIL
EC_1136: 18: 	||
EC_1136: 19: 		NIL
EC_1136: 20: ||
EC_1136: 21: 	NIL

EC_1136 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1084  --> EC_1087 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 1087 , H : 221 , step : 277 >" as EC_1087 #LightBlue
EC_1087: 1: par
EC_1087: 2: 	par
EC_1087: 3: 		par
EC_1087: 4: 			par
EC_1087: 5: 				par
EC_1087: 6: 					par sync [the alarm is disarmed]
EC_1087: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1087: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1087: 9: 							call( PostProc_R3 )
EC_1087: 10: 						++
EC_1087: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1087: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1087: 13: 								[ clock==0 ] / turn off the tone
EC_1087: 14: 								call( PostProc_R5 )
EC_1087: 15: 					&&
EC_1087: 16: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1087: 17: 							[ clock==0 ] / alert the emergency center
EC_1087: 18: 							call( PostProc_R9 )
EC_1087: 19: 				||
EC_1087: 20: 					NIL
EC_1087: 21: 			||
EC_1087: 22: 				NIL
EC_1087: 23: 		||
EC_1087: 24: 			NIL
EC_1087: 25: 	||
EC_1087: 26: 		NIL
EC_1087: 27: ||
EC_1087: 28: 	NIL

EC_1087 : DBM: R7_x_resp=60, R3_x_resp=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp=clock, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-240,
EC_1087  --> EC_1138 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1138 , H : 222 , step : 0 >" as EC_1138 #Orange
EC_1138: 1: par
EC_1138: 2: 	par
EC_1138: 3: 		par
EC_1138: 4: 			par
EC_1138: 5: 				par
EC_1138: 6: 					par sync [the alarm is disarmed]
EC_1138: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1138: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1138: 9: 							call( PostProc_R3 )
EC_1138: 10: 						++
EC_1138: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1138: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1138: 13: 								[ clock==0 ] / turn off the tone
EC_1138: 14: 								call( PostProc_R5 )
EC_1138: 15: 					&&
EC_1138: 16: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1138: 17: 							[ clock==0 ] / alert the emergency center
EC_1138: 18: 							call( PostProc_R9 )
EC_1138: 19: 				||
EC_1138: 20: 					NIL
EC_1138: 21: 			||
EC_1138: 22: 				NIL
EC_1138: 23: 		||
EC_1138: 24: 			NIL
EC_1138: 25: 	||
EC_1138: 26: 		NIL
EC_1138: 27: ||
EC_1138: 28: 	NIL

EC_1138 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1138  --> EC_1139 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 1139 , H : 223 , step : 278 >" as EC_1139 #LightBlue
EC_1139: 1: par
EC_1139: 2: 	par
EC_1139: 3: 		par
EC_1139: 4: 			par
EC_1139: 5: 				par
EC_1139: 6: 					par sync [the alarm is disarmed]
EC_1139: 7: 						call( PostProc_R3 )
EC_1139: 8: 					&&
EC_1139: 9: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_1139: 10: 							[ clock==0 ] / alert the emergency center
EC_1139: 11: 							call( PostProc_R9 )
EC_1139: 12: 				||
EC_1139: 13: 					NIL
EC_1139: 14: 			||
EC_1139: 15: 				NIL
EC_1139: 16: 		||
EC_1139: 17: 			NIL
EC_1139: 18: 	||
EC_1139: 19: 		NIL
EC_1139: 20: ||
EC_1139: 21: 	NIL

EC_1139 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1139  --> EC_1142 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 1142 , H : 224 , step : 0 >" as EC_1142 #Pink
EC_1142: 1: par
EC_1142: 2: 	par
EC_1142: 3: 		par
EC_1142: 4: 			par
EC_1142: 5: 				par
EC_1142: 6: 					par sync [the alarm is disarmed]
EC_1142: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1142: 8: 							[ true ] / the alarm is disarmed
EC_1142: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1142: 10: 								[ clock==0 ] / turn off the tone
EC_1142: 11: 								call( PostProc_R4 )
EC_1142: 12: 					&&
EC_1142: 13: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_1142: 14: 							[ clock==0 ] / alert the emergency center
EC_1142: 15: 							call( PostProc_R9 )
EC_1142: 16: 				||
EC_1142: 17: 					NIL
EC_1142: 18: 			||
EC_1142: 19: 				NIL
EC_1142: 20: 		||
EC_1142: 21: 			NIL
EC_1142: 22: 	||
EC_1142: 23: 		NIL
EC_1142: 24: ||
EC_1142: 25: 	NIL

EC_1142 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1142  --> EC_1144 : inv [] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1144 , H : 225 , step : 0 >" as EC_1144 #Orange
EC_1144: 1: par
EC_1144: 2: 	par
EC_1144: 3: 		par
EC_1144: 4: 			par
EC_1144: 5: 				par
EC_1144: 6: 					par sync [the alarm is disarmed]
EC_1144: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1144: 8: 							[ true ] / the alarm is disarmed
EC_1144: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1144: 10: 								[ clock==0 ] / turn off the tone
EC_1144: 11: 								call( PostProc_R4 )
EC_1144: 12: 					&&
EC_1144: 13: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_1144: 14: 							[ clock==0 ] / alert the emergency center
EC_1144: 15: 							call( PostProc_R9 )
EC_1144: 16: 				||
EC_1144: 17: 					NIL
EC_1144: 18: 			||
EC_1144: 19: 				NIL
EC_1144: 20: 		||
EC_1144: 21: 			NIL
EC_1144: 22: 	||
EC_1144: 23: 		NIL
EC_1144: 24: ||
EC_1144: 25: 	NIL

EC_1144 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1144  --> EC_1145 : inv [] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 1145 , H : 226 , step : 279 >" as EC_1145 #LightBlue
EC_1145: 1: par
EC_1145: 2: 	par
EC_1145: 3: 		par
EC_1145: 4: 			par
EC_1145: 5: 				par
EC_1145: 6: 					par sync [the alarm is disarmed]
EC_1145: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1145: 8: 							[ true ] / the alarm is disarmed
EC_1145: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1145: 10: 								[ clock==0 ] / turn off the tone
EC_1145: 11: 								call( PostProc_R4 )
EC_1145: 12: 					&&
EC_1145: 13: 						call( PostProc_R9 )
EC_1145: 14: 				||
EC_1145: 15: 					NIL
EC_1145: 16: 			||
EC_1145: 17: 				NIL
EC_1145: 18: 		||
EC_1145: 19: 			NIL
EC_1145: 20: 	||
EC_1145: 21: 		NIL
EC_1145: 22: ||
EC_1145: 23: 	NIL

EC_1145 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1145  --> EC_1146 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 1146 , H : 227 , step : 0 >" as EC_1146 #Pink
EC_1146: 1: par
EC_1146: 2: 	par
EC_1146: 3: 		par
EC_1146: 4: 			par
EC_1146: 5: 				par
EC_1146: 6: 					par sync [the alarm is disarmed]
EC_1146: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1146: 8: 							[ true ] / the alarm is disarmed
EC_1146: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1146: 10: 								[ clock==0 ] / turn off the tone
EC_1146: 11: 								call( PostProc_R4 )
EC_1146: 12: 					&&
EC_1146: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1146: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1146: 15: 							call( PostProc_R7 )
EC_1146: 16: 						++
EC_1146: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1146: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1146: 19: 								[ clock==0 ] / alert the emergency center
EC_1146: 20: 								call( PostProc_R9 )
EC_1146: 21: 				||
EC_1146: 22: 					NIL
EC_1146: 23: 			||
EC_1146: 24: 				NIL
EC_1146: 25: 		||
EC_1146: 26: 			NIL
EC_1146: 27: 	||
EC_1146: 28: 		NIL
EC_1146: 29: ||
EC_1146: 30: 	NIL

EC_1146 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1146  --> EC_1148 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 1148 , H : 228 , step : 0 >" as EC_1148 #Orange
EC_1148: 1: par
EC_1148: 2: 	par
EC_1148: 3: 		par
EC_1148: 4: 			par
EC_1148: 5: 				par
EC_1148: 6: 					par sync [the alarm is disarmed]
EC_1148: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1148: 8: 							[ true ] / the alarm is disarmed
EC_1148: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1148: 10: 								[ clock==0 ] / turn off the tone
EC_1148: 11: 								call( PostProc_R4 )
EC_1148: 12: 					&&
EC_1148: 13: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1148: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1148: 15: 							call( PostProc_R7 )
EC_1148: 16: 						++
EC_1148: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1148: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1148: 19: 								[ clock==0 ] / alert the emergency center
EC_1148: 20: 								call( PostProc_R9 )
EC_1148: 21: 				||
EC_1148: 22: 					NIL
EC_1148: 23: 			||
EC_1148: 24: 				NIL
EC_1148: 25: 		||
EC_1148: 26: 			NIL
EC_1148: 27: 	||
EC_1148: 28: 		NIL
EC_1148: 29: ||
EC_1148: 30: 	NIL

EC_1148 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1148  --> EC_1149 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 1149 , H : 229 , step : 280 >" as EC_1149 #LightBlue
EC_1149: 1: par
EC_1149: 2: 	par
EC_1149: 3: 		par
EC_1149: 4: 			par
EC_1149: 5: 				par
EC_1149: 6: 					par sync [the alarm is disarmed]
EC_1149: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1149: 8: 							[ true ] / the alarm is disarmed
EC_1149: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1149: 10: 								[ clock==0 ] / turn off the tone
EC_1149: 11: 								call( PostProc_R4 )
EC_1149: 12: 					&&
EC_1149: 13: 						call( PostProc_R7 )
EC_1149: 14: 				||
EC_1149: 15: 					NIL
EC_1149: 16: 			||
EC_1149: 17: 				NIL
EC_1149: 18: 		||
EC_1149: 19: 			NIL
EC_1149: 20: 	||
EC_1149: 21: 		NIL
EC_1149: 22: ||
EC_1149: 23: 	NIL

EC_1149 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1149  --> EC_1151 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 1151 , H : 230 , step : 0 >" as EC_1151 #Pink
EC_1151: 1: par
EC_1151: 2: 	par
EC_1151: 3: 		par
EC_1151: 4: 			par
EC_1151: 5: 				par
EC_1151: 6: 					par sync [the alarm is disarmed]
EC_1151: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1151: 8: 							[ true ] / the alarm is disarmed
EC_1151: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1151: 10: 								[ clock==0 ] / turn off the tone
EC_1151: 11: 								call( PostProc_R4 )
EC_1151: 12: 					&&
EC_1151: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1151: 14: 							[ true ] / the alarm is disarmed
EC_1151: 15: 							call( PostProc_R8 )
EC_1151: 16: 				||
EC_1151: 17: 					NIL
EC_1151: 18: 			||
EC_1151: 19: 				NIL
EC_1151: 20: 		||
EC_1151: 21: 			NIL
EC_1151: 22: 	||
EC_1151: 23: 		NIL
EC_1151: 24: ||
EC_1151: 25: 	NIL

EC_1151 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1151  --> EC_1153 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1153 , H : 231 , step : 0 >" as EC_1153 #Orange
EC_1153: 1: par
EC_1153: 2: 	par
EC_1153: 3: 		par
EC_1153: 4: 			par
EC_1153: 5: 				par
EC_1153: 6: 					par sync [the alarm is disarmed]
EC_1153: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1153: 8: 							[ true ] / the alarm is disarmed
EC_1153: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1153: 10: 								[ clock==0 ] / turn off the tone
EC_1153: 11: 								call( PostProc_R4 )
EC_1153: 12: 					&&
EC_1153: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1153: 14: 							[ true ] / the alarm is disarmed
EC_1153: 15: 							call( PostProc_R8 )
EC_1153: 16: 				||
EC_1153: 17: 					NIL
EC_1153: 18: 			||
EC_1153: 19: 				NIL
EC_1153: 20: 		||
EC_1153: 21: 			NIL
EC_1153: 22: 	||
EC_1153: 23: 		NIL
EC_1153: 24: ||
EC_1153: 25: 	NIL

EC_1153 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1153  --> EC_1154 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 1154 , H : 232 , step : 281 >" as EC_1154 #LightBlue
EC_1154: 1: par
EC_1154: 2: 	par
EC_1154: 3: 		par
EC_1154: 4: 			par
EC_1154: 5: 				par
EC_1154: 6: 					par sync [the alarm is disarmed]
EC_1154: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1154: 8: 							[ clock==0 ] / turn off the tone
EC_1154: 9: 							call( PostProc_R4 )
EC_1154: 10: 					&&
EC_1154: 11: 						call( PostProc_R8 )
EC_1154: 12: 				||
EC_1154: 13: 					NIL
EC_1154: 14: 			||
EC_1154: 15: 				NIL
EC_1154: 16: 		||
EC_1154: 17: 			NIL
EC_1154: 18: 	||
EC_1154: 19: 		NIL
EC_1154: 20: ||
EC_1154: 21: 	NIL

EC_1154 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1154  --> EC_1155 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 1155 , H : 233 , step : 0 >" as EC_1155 #Pink
EC_1155: 1: par
EC_1155: 2: 	par
EC_1155: 3: 		par
EC_1155: 4: 			par
EC_1155: 5: 				par
EC_1155: 6: 					par sync [the alarm is disarmed]
EC_1155: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1155: 8: 							[ clock==0 ] / turn off the tone
EC_1155: 9: 							call( PostProc_R4 )
EC_1155: 10: 					&&
EC_1155: 11: 						NIL
EC_1155: 12: 				||
EC_1155: 13: 					NIL
EC_1155: 14: 			||
EC_1155: 15: 				NIL
EC_1155: 16: 		||
EC_1155: 17: 			NIL
EC_1155: 18: 	||
EC_1155: 19: 		NIL
EC_1155: 20: ||
EC_1155: 21: 	NIL

EC_1155 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1155  --> EC_1157 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1157 , H : 234 , step : 0 >" as EC_1157 #Orange
EC_1157: 1: par
EC_1157: 2: 	par
EC_1157: 3: 		par
EC_1157: 4: 			par
EC_1157: 5: 				par
EC_1157: 6: 					par sync [the alarm is disarmed]
EC_1157: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1157: 8: 							[ clock==0 ] / turn off the tone
EC_1157: 9: 							call( PostProc_R4 )
EC_1157: 10: 					&&
EC_1157: 11: 						NIL
EC_1157: 12: 				||
EC_1157: 13: 					NIL
EC_1157: 14: 			||
EC_1157: 15: 				NIL
EC_1157: 16: 		||
EC_1157: 17: 			NIL
EC_1157: 18: 	||
EC_1157: 19: 		NIL
EC_1157: 20: ||
EC_1157: 21: 	NIL

EC_1157 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1157  --> EC_1158 : \lact [True] / META:REDUNDANCE:EC< id : 448 , H : 187 >

state "EC< id : 1158 , H : 235 , step : 0 >" as EC_1158 #Green
EC_1158: 1: par
EC_1158: 2: 	par
EC_1158: 3: 		par
EC_1158: 4: 			par
EC_1158: 5: 				par
EC_1158: 6: 					par sync [the alarm is disarmed]
EC_1158: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1158: 8: 							[ clock==0 ] / turn off the tone
EC_1158: 9: 							call( PostProc_R4 )
EC_1158: 10: 					&&
EC_1158: 11: 						NIL
EC_1158: 12: 				||
EC_1158: 13: 					NIL
EC_1158: 14: 			||
EC_1158: 15: 				NIL
EC_1158: 16: 		||
EC_1158: 17: 			NIL
EC_1158: 18: 	||
EC_1158: 19: 		NIL
EC_1158: 20: ||
EC_1158: 21: 	NIL

EC_1158 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1138  --> EC_1140 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 1140 , H : 223 , step : 282 >" as EC_1140 #LightBlue
EC_1140: 1: par
EC_1140: 2: 	par
EC_1140: 3: 		par
EC_1140: 4: 			par
EC_1140: 5: 				par
EC_1140: 6: 					par sync [the alarm is disarmed]
EC_1140: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1140: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1140: 9: 							call( PostProc_R3 )
EC_1140: 10: 						++
EC_1140: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1140: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1140: 13: 								[ clock==0 ] / turn off the tone
EC_1140: 14: 								call( PostProc_R5 )
EC_1140: 15: 					&&
EC_1140: 16: 						call( PostProc_R9 )
EC_1140: 17: 				||
EC_1140: 18: 					NIL
EC_1140: 19: 			||
EC_1140: 20: 				NIL
EC_1140: 21: 		||
EC_1140: 22: 			NIL
EC_1140: 23: 	||
EC_1140: 24: 		NIL
EC_1140: 25: ||
EC_1140: 26: 	NIL

EC_1140 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1140  --> EC_1159 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 1159 , H : 224 , step : 0 >" as EC_1159 #Pink
EC_1159: 1: par
EC_1159: 2: 	par
EC_1159: 3: 		par
EC_1159: 4: 			par
EC_1159: 5: 				par
EC_1159: 6: 					par sync [the alarm is disarmed]
EC_1159: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1159: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1159: 9: 							call( PostProc_R3 )
EC_1159: 10: 						++
EC_1159: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1159: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1159: 13: 								[ clock==0 ] / turn off the tone
EC_1159: 14: 								call( PostProc_R5 )
EC_1159: 15: 					&&
EC_1159: 16: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1159: 17: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1159: 18: 							call( PostProc_R7 )
EC_1159: 19: 						++
EC_1159: 20: 							[ R7_x_resp==60 ] / deadline at 60
EC_1159: 21: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1159: 22: 								[ clock==0 ] / alert the emergency center
EC_1159: 23: 								call( PostProc_R9 )
EC_1159: 24: 				||
EC_1159: 25: 					NIL
EC_1159: 26: 			||
EC_1159: 27: 				NIL
EC_1159: 28: 		||
EC_1159: 29: 			NIL
EC_1159: 30: 	||
EC_1159: 31: 		NIL
EC_1159: 32: ||
EC_1159: 33: 	NIL

EC_1159 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1159  --> EC_1161 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 1161 , H : 225 , step : 0 >" as EC_1161 #Orange
EC_1161: 1: par
EC_1161: 2: 	par
EC_1161: 3: 		par
EC_1161: 4: 			par
EC_1161: 5: 				par
EC_1161: 6: 					par sync [the alarm is disarmed]
EC_1161: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1161: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1161: 9: 							call( PostProc_R3 )
EC_1161: 10: 						++
EC_1161: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1161: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1161: 13: 								[ clock==0 ] / turn off the tone
EC_1161: 14: 								call( PostProc_R5 )
EC_1161: 15: 					&&
EC_1161: 16: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1161: 17: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1161: 18: 							call( PostProc_R7 )
EC_1161: 19: 						++
EC_1161: 20: 							[ R7_x_resp==60 ] / deadline at 60
EC_1161: 21: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1161: 22: 								[ clock==0 ] / alert the emergency center
EC_1161: 23: 								call( PostProc_R9 )
EC_1161: 24: 				||
EC_1161: 25: 					NIL
EC_1161: 26: 			||
EC_1161: 27: 				NIL
EC_1161: 28: 		||
EC_1161: 29: 			NIL
EC_1161: 30: 	||
EC_1161: 31: 		NIL
EC_1161: 32: ||
EC_1161: 33: 	NIL

EC_1161 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1161  --> EC_1162 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 1162 , H : 226 , step : 283 >" as EC_1162 #LightBlue
EC_1162: 1: par
EC_1162: 2: 	par
EC_1162: 3: 		par
EC_1162: 4: 			par
EC_1162: 5: 				par
EC_1162: 6: 					par sync [the alarm is disarmed]
EC_1162: 7: 						call( PostProc_R3 )
EC_1162: 8: 					&&
EC_1162: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1162: 10: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1162: 11: 							call( PostProc_R7 )
EC_1162: 12: 						++
EC_1162: 13: 							[ R7_x_resp==60 ] / deadline at 60
EC_1162: 14: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1162: 15: 								[ clock==0 ] / alert the emergency center
EC_1162: 16: 								call( PostProc_R9 )
EC_1162: 17: 				||
EC_1162: 18: 					NIL
EC_1162: 19: 			||
EC_1162: 20: 				NIL
EC_1162: 21: 		||
EC_1162: 22: 			NIL
EC_1162: 23: 	||
EC_1162: 24: 		NIL
EC_1162: 25: ||
EC_1162: 26: 	NIL

EC_1162 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1162  --> EC_1166 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 1166 , H : 227 , step : 0 >" as EC_1166 #Pink
EC_1166: 1: par
EC_1166: 2: 	par
EC_1166: 3: 		par
EC_1166: 4: 			par
EC_1166: 5: 				par
EC_1166: 6: 					par sync [the alarm is disarmed]
EC_1166: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1166: 8: 							[ true ] / the alarm is disarmed
EC_1166: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1166: 10: 								[ clock==0 ] / turn off the tone
EC_1166: 11: 								call( PostProc_R4 )
EC_1166: 12: 					&&
EC_1166: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1166: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1166: 15: 							call( PostProc_R7 )
EC_1166: 16: 						++
EC_1166: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1166: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1166: 19: 								[ clock==0 ] / alert the emergency center
EC_1166: 20: 								call( PostProc_R9 )
EC_1166: 21: 				||
EC_1166: 22: 					NIL
EC_1166: 23: 			||
EC_1166: 24: 				NIL
EC_1166: 25: 		||
EC_1166: 26: 			NIL
EC_1166: 27: 	||
EC_1166: 28: 		NIL
EC_1166: 29: ||
EC_1166: 30: 	NIL

EC_1166 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1166  --> EC_1168 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1168 , H : 228 , step : 0 >" as EC_1168 #Orange
EC_1168: 1: par
EC_1168: 2: 	par
EC_1168: 3: 		par
EC_1168: 4: 			par
EC_1168: 5: 				par
EC_1168: 6: 					par sync [the alarm is disarmed]
EC_1168: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1168: 8: 							[ true ] / the alarm is disarmed
EC_1168: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1168: 10: 								[ clock==0 ] / turn off the tone
EC_1168: 11: 								call( PostProc_R4 )
EC_1168: 12: 					&&
EC_1168: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1168: 14: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1168: 15: 							call( PostProc_R7 )
EC_1168: 16: 						++
EC_1168: 17: 							[ R7_x_resp==60 ] / deadline at 60
EC_1168: 18: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1168: 19: 								[ clock==0 ] / alert the emergency center
EC_1168: 20: 								call( PostProc_R9 )
EC_1168: 21: 				||
EC_1168: 22: 					NIL
EC_1168: 23: 			||
EC_1168: 24: 				NIL
EC_1168: 25: 		||
EC_1168: 26: 			NIL
EC_1168: 27: 	||
EC_1168: 28: 		NIL
EC_1168: 29: ||
EC_1168: 30: 	NIL

EC_1168 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1168  --> EC_1169 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 1169 , H : 229 , step : 284 >" as EC_1169 #LightBlue
EC_1169: 1: par
EC_1169: 2: 	par
EC_1169: 3: 		par
EC_1169: 4: 			par
EC_1169: 5: 				par
EC_1169: 6: 					par sync [the alarm is disarmed]
EC_1169: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1169: 8: 							[ true ] / the alarm is disarmed
EC_1169: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1169: 10: 								[ clock==0 ] / turn off the tone
EC_1169: 11: 								call( PostProc_R4 )
EC_1169: 12: 					&&
EC_1169: 13: 						call( PostProc_R7 )
EC_1169: 14: 				||
EC_1169: 15: 					NIL
EC_1169: 16: 			||
EC_1169: 17: 				NIL
EC_1169: 18: 		||
EC_1169: 19: 			NIL
EC_1169: 20: 	||
EC_1169: 21: 		NIL
EC_1169: 22: ||
EC_1169: 23: 	NIL

EC_1169 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1169  --> EC_1171 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 1171 , H : 230 , step : 0 >" as EC_1171 #Pink
EC_1171: 1: par
EC_1171: 2: 	par
EC_1171: 3: 		par
EC_1171: 4: 			par
EC_1171: 5: 				par
EC_1171: 6: 					par sync [the alarm is disarmed]
EC_1171: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1171: 8: 							[ true ] / the alarm is disarmed
EC_1171: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1171: 10: 								[ clock==0 ] / turn off the tone
EC_1171: 11: 								call( PostProc_R4 )
EC_1171: 12: 					&&
EC_1171: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1171: 14: 							[ true ] / the alarm is disarmed
EC_1171: 15: 							call( PostProc_R8 )
EC_1171: 16: 				||
EC_1171: 17: 					NIL
EC_1171: 18: 			||
EC_1171: 19: 				NIL
EC_1171: 20: 		||
EC_1171: 21: 			NIL
EC_1171: 22: 	||
EC_1171: 23: 		NIL
EC_1171: 24: ||
EC_1171: 25: 	NIL

EC_1171 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1171  --> EC_1173 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1173 , H : 231 , step : 0 >" as EC_1173 #Orange
EC_1173: 1: par
EC_1173: 2: 	par
EC_1173: 3: 		par
EC_1173: 4: 			par
EC_1173: 5: 				par
EC_1173: 6: 					par sync [the alarm is disarmed]
EC_1173: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1173: 8: 							[ true ] / the alarm is disarmed
EC_1173: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1173: 10: 								[ clock==0 ] / turn off the tone
EC_1173: 11: 								call( PostProc_R4 )
EC_1173: 12: 					&&
EC_1173: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1173: 14: 							[ true ] / the alarm is disarmed
EC_1173: 15: 							call( PostProc_R8 )
EC_1173: 16: 				||
EC_1173: 17: 					NIL
EC_1173: 18: 			||
EC_1173: 19: 				NIL
EC_1173: 20: 		||
EC_1173: 21: 			NIL
EC_1173: 22: 	||
EC_1173: 23: 		NIL
EC_1173: 24: ||
EC_1173: 25: 	NIL

EC_1173 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1173  --> EC_1174 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 1174 , H : 232 , step : 285 >" as EC_1174 #LightBlue
EC_1174: 1: par
EC_1174: 2: 	par
EC_1174: 3: 		par
EC_1174: 4: 			par
EC_1174: 5: 				par
EC_1174: 6: 					par sync [the alarm is disarmed]
EC_1174: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1174: 8: 							[ clock==0 ] / turn off the tone
EC_1174: 9: 							call( PostProc_R4 )
EC_1174: 10: 					&&
EC_1174: 11: 						call( PostProc_R8 )
EC_1174: 12: 				||
EC_1174: 13: 					NIL
EC_1174: 14: 			||
EC_1174: 15: 				NIL
EC_1174: 16: 		||
EC_1174: 17: 			NIL
EC_1174: 18: 	||
EC_1174: 19: 		NIL
EC_1174: 20: ||
EC_1174: 21: 	NIL

EC_1174 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1174  --> EC_1175 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 1175 , H : 233 , step : 0 >" as EC_1175 #Pink
EC_1175: 1: par
EC_1175: 2: 	par
EC_1175: 3: 		par
EC_1175: 4: 			par
EC_1175: 5: 				par
EC_1175: 6: 					par sync [the alarm is disarmed]
EC_1175: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1175: 8: 							[ clock==0 ] / turn off the tone
EC_1175: 9: 							call( PostProc_R4 )
EC_1175: 10: 					&&
EC_1175: 11: 						NIL
EC_1175: 12: 				||
EC_1175: 13: 					NIL
EC_1175: 14: 			||
EC_1175: 15: 				NIL
EC_1175: 16: 		||
EC_1175: 17: 			NIL
EC_1175: 18: 	||
EC_1175: 19: 		NIL
EC_1175: 20: ||
EC_1175: 21: 	NIL

EC_1175 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1175  --> EC_1177 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1177 , H : 234 , step : 0 >" as EC_1177 #Orange
EC_1177: 1: par
EC_1177: 2: 	par
EC_1177: 3: 		par
EC_1177: 4: 			par
EC_1177: 5: 				par
EC_1177: 6: 					par sync [the alarm is disarmed]
EC_1177: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1177: 8: 							[ clock==0 ] / turn off the tone
EC_1177: 9: 							call( PostProc_R4 )
EC_1177: 10: 					&&
EC_1177: 11: 						NIL
EC_1177: 12: 				||
EC_1177: 13: 					NIL
EC_1177: 14: 			||
EC_1177: 15: 				NIL
EC_1177: 16: 		||
EC_1177: 17: 			NIL
EC_1177: 18: 	||
EC_1177: 19: 		NIL
EC_1177: 20: ||
EC_1177: 21: 	NIL

EC_1177 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1177  --> EC_1178 : \lact [True] / META:REDUNDANCE:EC< id : 448 , H : 187 >

state "EC< id : 1178 , H : 235 , step : 0 >" as EC_1178 #Green
EC_1178: 1: par
EC_1178: 2: 	par
EC_1178: 3: 		par
EC_1178: 4: 			par
EC_1178: 5: 				par
EC_1178: 6: 					par sync [the alarm is disarmed]
EC_1178: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1178: 8: 							[ clock==0 ] / turn off the tone
EC_1178: 9: 							call( PostProc_R4 )
EC_1178: 10: 					&&
EC_1178: 11: 						NIL
EC_1178: 12: 				||
EC_1178: 13: 					NIL
EC_1178: 14: 			||
EC_1178: 15: 				NIL
EC_1178: 16: 		||
EC_1178: 17: 			NIL
EC_1178: 18: 	||
EC_1178: 19: 		NIL
EC_1178: 20: ||
EC_1178: 21: 	NIL

EC_1178 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1161  --> EC_1163 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 1163 , H : 226 , step : 286 >" as EC_1163 #LightBlue
EC_1163: 1: par
EC_1163: 2: 	par
EC_1163: 3: 		par
EC_1163: 4: 			par
EC_1163: 5: 				par
EC_1163: 6: 					par sync [the alarm is disarmed]
EC_1163: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1163: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1163: 9: 							call( PostProc_R3 )
EC_1163: 10: 						++
EC_1163: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1163: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1163: 13: 								[ clock==0 ] / turn off the tone
EC_1163: 14: 								call( PostProc_R5 )
EC_1163: 15: 					&&
EC_1163: 16: 						call( PostProc_R7 )
EC_1163: 17: 				||
EC_1163: 18: 					NIL
EC_1163: 19: 			||
EC_1163: 20: 				NIL
EC_1163: 21: 		||
EC_1163: 22: 			NIL
EC_1163: 23: 	||
EC_1163: 24: 		NIL
EC_1163: 25: ||
EC_1163: 26: 	NIL

EC_1163 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1163  --> EC_1179 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 1179 , H : 227 , step : 0 >" as EC_1179 #Pink
EC_1179: 1: par
EC_1179: 2: 	par
EC_1179: 3: 		par
EC_1179: 4: 			par
EC_1179: 5: 				par
EC_1179: 6: 					par sync [the alarm is disarmed]
EC_1179: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1179: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1179: 9: 							call( PostProc_R3 )
EC_1179: 10: 						++
EC_1179: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1179: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1179: 13: 								[ clock==0 ] / turn off the tone
EC_1179: 14: 								call( PostProc_R5 )
EC_1179: 15: 					&&
EC_1179: 16: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1179: 17: 							[ true ] / the alarm is disarmed
EC_1179: 18: 							call( PostProc_R8 )
EC_1179: 19: 				||
EC_1179: 20: 					NIL
EC_1179: 21: 			||
EC_1179: 22: 				NIL
EC_1179: 23: 		||
EC_1179: 24: 			NIL
EC_1179: 25: 	||
EC_1179: 26: 		NIL
EC_1179: 27: ||
EC_1179: 28: 	NIL

EC_1179 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1179  --> EC_1181 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1181 , H : 228 , step : 0 >" as EC_1181 #Orange
EC_1181: 1: par
EC_1181: 2: 	par
EC_1181: 3: 		par
EC_1181: 4: 			par
EC_1181: 5: 				par
EC_1181: 6: 					par sync [the alarm is disarmed]
EC_1181: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1181: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_1181: 9: 							call( PostProc_R3 )
EC_1181: 10: 						++
EC_1181: 11: 							[ R3_x_resp==300 ] / deadline at 300
EC_1181: 12: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1181: 13: 								[ clock==0 ] / turn off the tone
EC_1181: 14: 								call( PostProc_R5 )
EC_1181: 15: 					&&
EC_1181: 16: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1181: 17: 							[ true ] / the alarm is disarmed
EC_1181: 18: 							call( PostProc_R8 )
EC_1181: 19: 				||
EC_1181: 20: 					NIL
EC_1181: 21: 			||
EC_1181: 22: 				NIL
EC_1181: 23: 		||
EC_1181: 24: 			NIL
EC_1181: 25: 	||
EC_1181: 26: 		NIL
EC_1181: 27: ||
EC_1181: 28: 	NIL

EC_1181 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1181  --> EC_1182 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 300/>

state "EC< id : 1182 , H : 229 , step : 287 >" as EC_1182 #LightBlue
EC_1182: 1: par
EC_1182: 2: 	par
EC_1182: 3: 		par
EC_1182: 4: 			par
EC_1182: 5: 				par
EC_1182: 6: 					par sync [the alarm is disarmed]
EC_1182: 7: 						call( PostProc_R3 )
EC_1182: 8: 					&&
EC_1182: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1182: 10: 							[ true ] / the alarm is disarmed
EC_1182: 11: 							call( PostProc_R8 )
EC_1182: 12: 				||
EC_1182: 13: 					NIL
EC_1182: 14: 			||
EC_1182: 15: 				NIL
EC_1182: 16: 		||
EC_1182: 17: 			NIL
EC_1182: 18: 	||
EC_1182: 19: 		NIL
EC_1182: 20: ||
EC_1182: 21: 	NIL

EC_1182 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1182  --> EC_1184 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R3, Proc_R4

state "EC< id : 1184 , H : 230 , step : 0 >" as EC_1184 #Pink
EC_1184: 1: par
EC_1184: 2: 	par
EC_1184: 3: 		par
EC_1184: 4: 			par
EC_1184: 5: 				par
EC_1184: 6: 					par sync [the alarm is disarmed]
EC_1184: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1184: 8: 							[ true ] / the alarm is disarmed
EC_1184: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1184: 10: 								[ clock==0 ] / turn off the tone
EC_1184: 11: 								call( PostProc_R4 )
EC_1184: 12: 					&&
EC_1184: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1184: 14: 							[ true ] / the alarm is disarmed
EC_1184: 15: 							call( PostProc_R8 )
EC_1184: 16: 				||
EC_1184: 17: 					NIL
EC_1184: 18: 			||
EC_1184: 19: 				NIL
EC_1184: 20: 		||
EC_1184: 21: 			NIL
EC_1184: 22: 	||
EC_1184: 23: 		NIL
EC_1184: 24: ||
EC_1184: 25: 	NIL

EC_1184 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1184  --> EC_1186 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1186 , H : 231 , step : 0 >" as EC_1186 #Orange
EC_1186: 1: par
EC_1186: 2: 	par
EC_1186: 3: 		par
EC_1186: 4: 			par
EC_1186: 5: 				par
EC_1186: 6: 					par sync [the alarm is disarmed]
EC_1186: 7: 						alt invariant( [] ~> R3_x_resp<=300 )
EC_1186: 8: 							[ true ] / the alarm is disarmed
EC_1186: 9: 							alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1186: 10: 								[ clock==0 ] / turn off the tone
EC_1186: 11: 								call( PostProc_R4 )
EC_1186: 12: 					&&
EC_1186: 13: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1186: 14: 							[ true ] / the alarm is disarmed
EC_1186: 15: 							call( PostProc_R8 )
EC_1186: 16: 				||
EC_1186: 17: 					NIL
EC_1186: 18: 			||
EC_1186: 19: 				NIL
EC_1186: 20: 		||
EC_1186: 21: 			NIL
EC_1186: 22: 	||
EC_1186: 23: 		NIL
EC_1186: 24: ||
EC_1186: 25: 	NIL

EC_1186 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1186  --> EC_1187 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true, true] / TAU:the alarm is disarmed

state "EC< id : 1187 , H : 232 , step : 288 >" as EC_1187 #LightBlue
EC_1187: 1: par
EC_1187: 2: 	par
EC_1187: 3: 		par
EC_1187: 4: 			par
EC_1187: 5: 				par
EC_1187: 6: 					par sync [the alarm is disarmed]
EC_1187: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1187: 8: 							[ clock==0 ] / turn off the tone
EC_1187: 9: 							call( PostProc_R4 )
EC_1187: 10: 					&&
EC_1187: 11: 						call( PostProc_R8 )
EC_1187: 12: 				||
EC_1187: 13: 					NIL
EC_1187: 14: 			||
EC_1187: 15: 				NIL
EC_1187: 16: 		||
EC_1187: 17: 			NIL
EC_1187: 18: 	||
EC_1187: 19: 		NIL
EC_1187: 20: ||
EC_1187: 21: 	NIL

EC_1187 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1187  --> EC_1188 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 1188 , H : 233 , step : 0 >" as EC_1188 #Pink
EC_1188: 1: par
EC_1188: 2: 	par
EC_1188: 3: 		par
EC_1188: 4: 			par
EC_1188: 5: 				par
EC_1188: 6: 					par sync [the alarm is disarmed]
EC_1188: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1188: 8: 							[ clock==0 ] / turn off the tone
EC_1188: 9: 							call( PostProc_R4 )
EC_1188: 10: 					&&
EC_1188: 11: 						NIL
EC_1188: 12: 				||
EC_1188: 13: 					NIL
EC_1188: 14: 			||
EC_1188: 15: 				NIL
EC_1188: 16: 		||
EC_1188: 17: 			NIL
EC_1188: 18: 	||
EC_1188: 19: 		NIL
EC_1188: 20: ||
EC_1188: 21: 	NIL

EC_1188 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1188  --> EC_1190 : inv [clock] => [clock<=0, R3_x_resp<=300, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1190 , H : 234 , step : 0 >" as EC_1190 #Orange
EC_1190: 1: par
EC_1190: 2: 	par
EC_1190: 3: 		par
EC_1190: 4: 			par
EC_1190: 5: 				par
EC_1190: 6: 					par sync [the alarm is disarmed]
EC_1190: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1190: 8: 							[ clock==0 ] / turn off the tone
EC_1190: 9: 							call( PostProc_R4 )
EC_1190: 10: 					&&
EC_1190: 11: 						NIL
EC_1190: 12: 				||
EC_1190: 13: 					NIL
EC_1190: 14: 			||
EC_1190: 15: 				NIL
EC_1190: 16: 		||
EC_1190: 17: 			NIL
EC_1190: 18: 	||
EC_1190: 19: 		NIL
EC_1190: 20: ||
EC_1190: 21: 	NIL

EC_1190 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1190  --> EC_1191 : \lact [True] / META:REDUNDANCE:EC< id : 448 , H : 187 >

state "EC< id : 1191 , H : 235 , step : 0 >" as EC_1191 #Green
EC_1191: 1: par
EC_1191: 2: 	par
EC_1191: 3: 		par
EC_1191: 4: 			par
EC_1191: 5: 				par
EC_1191: 6: 					par sync [the alarm is disarmed]
EC_1191: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1191: 8: 							[ clock==0 ] / turn off the tone
EC_1191: 9: 							call( PostProc_R4 )
EC_1191: 10: 					&&
EC_1191: 11: 						NIL
EC_1191: 12: 				||
EC_1191: 13: 					NIL
EC_1191: 14: 			||
EC_1191: 15: 				NIL
EC_1191: 16: 		||
EC_1191: 17: 			NIL
EC_1191: 18: 	||
EC_1191: 19: 		NIL
EC_1191: 20: ||
EC_1191: 21: 	NIL

EC_1191 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1181  --> EC_1183 : inv [] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R3_x_resp==300] / deadline at 300

state "EC< id : 1183 , H : 229 , step : 289 >" as EC_1183 #LightBlue
EC_1183: 1: par
EC_1183: 2: 	par
EC_1183: 3: 		par
EC_1183: 4: 			par
EC_1183: 5: 				par
EC_1183: 6: 					par sync [the alarm is disarmed]
EC_1183: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1183: 8: 							[ clock==0 ] / turn off the tone
EC_1183: 9: 							call( PostProc_R5 )
EC_1183: 10: 					&&
EC_1183: 11: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1183: 12: 							[ true ] / the alarm is disarmed
EC_1183: 13: 							call( PostProc_R8 )
EC_1183: 14: 				||
EC_1183: 15: 					NIL
EC_1183: 16: 			||
EC_1183: 17: 				NIL
EC_1183: 18: 		||
EC_1183: 19: 			NIL
EC_1183: 20: 	||
EC_1183: 21: 		NIL
EC_1183: 22: ||
EC_1183: 23: 	NIL

EC_1183 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1183  --> EC_1193 : inv [clock] => [clock<=0, R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1193 , H : 230 , step : 0 >" as EC_1193 #Orange
EC_1193: 1: par
EC_1193: 2: 	par
EC_1193: 3: 		par
EC_1193: 4: 			par
EC_1193: 5: 				par
EC_1193: 6: 					par sync [the alarm is disarmed]
EC_1193: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1193: 8: 							[ clock==0 ] / turn off the tone
EC_1193: 9: 							call( PostProc_R5 )
EC_1193: 10: 					&&
EC_1193: 11: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1193: 12: 							[ true ] / the alarm is disarmed
EC_1193: 13: 							call( PostProc_R8 )
EC_1193: 14: 				||
EC_1193: 15: 					NIL
EC_1193: 16: 			||
EC_1193: 17: 				NIL
EC_1193: 18: 		||
EC_1193: 19: 			NIL
EC_1193: 20: 	||
EC_1193: 21: 		NIL
EC_1193: 22: ||
EC_1193: 23: 	NIL

EC_1193 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1193  --> EC_1194 : inv [clock] => [clock<=0, R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / turn off the tone

state "EC< id : 1194 , H : 231 , step : 290 >" as EC_1194 #LightBlue
EC_1194: 1: par
EC_1194: 2: 	par
EC_1194: 3: 		par
EC_1194: 4: 			par
EC_1194: 5: 				par
EC_1194: 6: 					par sync [the alarm is disarmed]
EC_1194: 7: 						call( PostProc_R5 )
EC_1194: 8: 					&&
EC_1194: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1194: 10: 							[ true ] / the alarm is disarmed
EC_1194: 11: 							call( PostProc_R8 )
EC_1194: 12: 				||
EC_1194: 13: 					NIL
EC_1194: 14: 			||
EC_1194: 15: 				NIL
EC_1194: 16: 		||
EC_1194: 17: 			NIL
EC_1194: 18: 	||
EC_1194: 19: 		NIL
EC_1194: 20: ||
EC_1194: 21: 	NIL

EC_1194 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1194  --> EC_1195 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R5

state "EC< id : 1195 , H : 232 , step : 0 >" as EC_1195 #Pink
EC_1195: 1: par
EC_1195: 2: 	par
EC_1195: 3: 		par
EC_1195: 4: 			par
EC_1195: 5: 				par
EC_1195: 6: 					par sync [the alarm is disarmed]
EC_1195: 7: 						NIL
EC_1195: 8: 					&&
EC_1195: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1195: 10: 							[ true ] / the alarm is disarmed
EC_1195: 11: 							call( PostProc_R8 )
EC_1195: 12: 				||
EC_1195: 13: 					NIL
EC_1195: 14: 			||
EC_1195: 15: 				NIL
EC_1195: 16: 		||
EC_1195: 17: 			NIL
EC_1195: 18: 	||
EC_1195: 19: 		NIL
EC_1195: 20: ||
EC_1195: 21: 	NIL

EC_1195 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1195  --> EC_1197 : inv [] => [True, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1197 , H : 233 , step : 0 >" as EC_1197 #Red
EC_1197: 1: par
EC_1197: 2: 	par
EC_1197: 3: 		par
EC_1197: 4: 			par
EC_1197: 5: 				par
EC_1197: 6: 					par sync [the alarm is disarmed]
EC_1197: 7: 						NIL
EC_1197: 8: 					&&
EC_1197: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1197: 10: 							[ true ] / the alarm is disarmed
EC_1197: 11: 							call( PostProc_R8 )
EC_1197: 12: 				||
EC_1197: 13: 					NIL
EC_1197: 14: 			||
EC_1197: 15: 				NIL
EC_1197: 16: 		||
EC_1197: 17: 			NIL
EC_1197: 18: 	||
EC_1197: 19: 		NIL
EC_1197: 20: ||
EC_1197: 21: 	NIL

EC_1197 : DBM: R7_x_resp<=60, 300<=R3_x_resp<=360, clock<=60,\l   R7_x_resp-R3_x_resp<=-300, R3_x_resp-R7_x_resp<=300,\l   R7_x_resp=clock, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1161  --> EC_1165 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R3_x_resp==300] / deadline at 300

state "EC< id : 1165 , H : 226 , step : 291 >" as EC_1165 #LightBlue
EC_1165: 1: par
EC_1165: 2: 	par
EC_1165: 3: 		par
EC_1165: 4: 			par
EC_1165: 5: 				par
EC_1165: 6: 					par sync [the alarm is disarmed]
EC_1165: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1165: 8: 							[ clock==0 ] / turn off the tone
EC_1165: 9: 							call( PostProc_R5 )
EC_1165: 10: 					&&
EC_1165: 11: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1165: 12: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1165: 13: 							call( PostProc_R7 )
EC_1165: 14: 						++
EC_1165: 15: 							[ R7_x_resp==60 ] / deadline at 60
EC_1165: 16: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1165: 17: 								[ clock==0 ] / alert the emergency center
EC_1165: 18: 								call( PostProc_R9 )
EC_1165: 19: 				||
EC_1165: 20: 					NIL
EC_1165: 21: 			||
EC_1165: 22: 				NIL
EC_1165: 23: 		||
EC_1165: 24: 			NIL
EC_1165: 25: 	||
EC_1165: 26: 		NIL
EC_1165: 27: ||
EC_1165: 28: 	NIL

EC_1165 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1165  --> EC_1199 : inv [clock] => [clock<=0, R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1199 , H : 227 , step : 0 >" as EC_1199 #Orange
EC_1199: 1: par
EC_1199: 2: 	par
EC_1199: 3: 		par
EC_1199: 4: 			par
EC_1199: 5: 				par
EC_1199: 6: 					par sync [the alarm is disarmed]
EC_1199: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1199: 8: 							[ clock==0 ] / turn off the tone
EC_1199: 9: 							call( PostProc_R5 )
EC_1199: 10: 					&&
EC_1199: 11: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1199: 12: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1199: 13: 							call( PostProc_R7 )
EC_1199: 14: 						++
EC_1199: 15: 							[ R7_x_resp==60 ] / deadline at 60
EC_1199: 16: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1199: 17: 								[ clock==0 ] / alert the emergency center
EC_1199: 18: 								call( PostProc_R9 )
EC_1199: 19: 				||
EC_1199: 20: 					NIL
EC_1199: 21: 			||
EC_1199: 22: 				NIL
EC_1199: 23: 		||
EC_1199: 24: 			NIL
EC_1199: 25: 	||
EC_1199: 26: 		NIL
EC_1199: 27: ||
EC_1199: 28: 	NIL

EC_1199 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1199  --> EC_1200 : inv [clock] => [clock<=0, R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [clock==0] / turn off the tone

state "EC< id : 1200 , H : 228 , step : 292 >" as EC_1200 #LightBlue
EC_1200: 1: par
EC_1200: 2: 	par
EC_1200: 3: 		par
EC_1200: 4: 			par
EC_1200: 5: 				par
EC_1200: 6: 					par sync [the alarm is disarmed]
EC_1200: 7: 						call( PostProc_R5 )
EC_1200: 8: 					&&
EC_1200: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1200: 10: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1200: 11: 							call( PostProc_R7 )
EC_1200: 12: 						++
EC_1200: 13: 							[ R7_x_resp==60 ] / deadline at 60
EC_1200: 14: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1200: 15: 								[ clock==0 ] / alert the emergency center
EC_1200: 16: 								call( PostProc_R9 )
EC_1200: 17: 				||
EC_1200: 18: 					NIL
EC_1200: 19: 			||
EC_1200: 20: 				NIL
EC_1200: 21: 		||
EC_1200: 22: 			NIL
EC_1200: 23: 	||
EC_1200: 24: 		NIL
EC_1200: 25: ||
EC_1200: 26: 	NIL

EC_1200 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1200  --> EC_1203 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R5

state "EC< id : 1203 , H : 229 , step : 0 >" as EC_1203 #Pink
EC_1203: 1: par
EC_1203: 2: 	par
EC_1203: 3: 		par
EC_1203: 4: 			par
EC_1203: 5: 				par
EC_1203: 6: 					par sync [the alarm is disarmed]
EC_1203: 7: 						NIL
EC_1203: 8: 					&&
EC_1203: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1203: 10: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1203: 11: 							call( PostProc_R7 )
EC_1203: 12: 						++
EC_1203: 13: 							[ R7_x_resp==60 ] / deadline at 60
EC_1203: 14: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1203: 15: 								[ clock==0 ] / alert the emergency center
EC_1203: 16: 								call( PostProc_R9 )
EC_1203: 17: 				||
EC_1203: 18: 					NIL
EC_1203: 19: 			||
EC_1203: 20: 				NIL
EC_1203: 21: 		||
EC_1203: 22: 			NIL
EC_1203: 23: 	||
EC_1203: 24: 		NIL
EC_1203: 25: ||
EC_1203: 26: 	NIL

EC_1203 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1203  --> EC_1205 : inv [] => [True, R7_x_resp<=60, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1205 , H : 230 , step : 0 >" as EC_1205 #Orange
EC_1205: 1: par
EC_1205: 2: 	par
EC_1205: 3: 		par
EC_1205: 4: 			par
EC_1205: 5: 				par
EC_1205: 6: 					par sync [the alarm is disarmed]
EC_1205: 7: 						NIL
EC_1205: 8: 					&&
EC_1205: 9: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1205: 10: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1205: 11: 							call( PostProc_R7 )
EC_1205: 12: 						++
EC_1205: 13: 							[ R7_x_resp==60 ] / deadline at 60
EC_1205: 14: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1205: 15: 								[ clock==0 ] / alert the emergency center
EC_1205: 16: 								call( PostProc_R9 )
EC_1205: 17: 				||
EC_1205: 18: 					NIL
EC_1205: 19: 			||
EC_1205: 20: 				NIL
EC_1205: 21: 		||
EC_1205: 22: 			NIL
EC_1205: 23: 	||
EC_1205: 24: 		NIL
EC_1205: 25: ||
EC_1205: 26: 	NIL

EC_1205 : DBM: R7_x_resp<=60, 300<=R3_x_resp<=360, clock<=60,\l   R7_x_resp-R3_x_resp<=-300, R3_x_resp-R7_x_resp<=300,\l   R7_x_resp=clock, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1205  --> EC_1206 : inv [] => [True, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 1206 , H : 231 , step : 293 >" as EC_1206 #LightBlue
EC_1206: 1: par
EC_1206: 2: 	par
EC_1206: 3: 		par
EC_1206: 4: 			par
EC_1206: 5: 				par
EC_1206: 6: 					par
EC_1206: 7: 						call( PostProc_R7 )
EC_1206: 8: 					||
EC_1206: 9: 						NIL
EC_1206: 10: 				||
EC_1206: 11: 					NIL
EC_1206: 12: 			||
EC_1206: 13: 				NIL
EC_1206: 14: 		||
EC_1206: 15: 			NIL
EC_1206: 16: 	||
EC_1206: 17: 		NIL
EC_1206: 18: ||
EC_1206: 19: 	NIL

EC_1206 : DBM: R7_x_resp<=60, 300<=R3_x_resp<=360, clock<=60,\l   R7_x_resp-R3_x_resp<=-300, R3_x_resp-R7_x_resp<=300,\l   R7_x_resp=clock, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1206  --> EC_1208 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 1208 , H : 232 , step : 0 >" as EC_1208 #Pink
EC_1208: 1: par
EC_1208: 2: 	par
EC_1208: 3: 		par
EC_1208: 4: 			par
EC_1208: 5: 				par
EC_1208: 6: 					par
EC_1208: 7: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1208: 8: 							[ true ] / the alarm is disarmed
EC_1208: 9: 							call( PostProc_R8 )
EC_1208: 10: 					||
EC_1208: 11: 						NIL
EC_1208: 12: 				||
EC_1208: 13: 					NIL
EC_1208: 14: 			||
EC_1208: 15: 				NIL
EC_1208: 16: 		||
EC_1208: 17: 			NIL
EC_1208: 18: 	||
EC_1208: 19: 		NIL
EC_1208: 20: ||
EC_1208: 21: 	NIL

EC_1208 : DBM: R7_x_resp<=60, 300<=R3_x_resp<=360, clock<=60,\l   R7_x_resp-R3_x_resp<=-300, R3_x_resp-R7_x_resp<=300,\l   R7_x_resp=clock, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1208  --> EC_1210 : inv [] => [R7_x_resp<=60, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1210 , H : 233 , step : 0 >" as EC_1210 #Orange
EC_1210: 1: par
EC_1210: 2: 	par
EC_1210: 3: 		par
EC_1210: 4: 			par
EC_1210: 5: 				par
EC_1210: 6: 					par
EC_1210: 7: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1210: 8: 							[ true ] / the alarm is disarmed
EC_1210: 9: 							call( PostProc_R8 )
EC_1210: 10: 					||
EC_1210: 11: 						NIL
EC_1210: 12: 				||
EC_1210: 13: 					NIL
EC_1210: 14: 			||
EC_1210: 15: 				NIL
EC_1210: 16: 		||
EC_1210: 17: 			NIL
EC_1210: 18: 	||
EC_1210: 19: 		NIL
EC_1210: 20: ||
EC_1210: 21: 	NIL

EC_1210 : DBM: R7_x_resp<=60, 300<=R3_x_resp<=360, clock<=60,\l   R7_x_resp-R3_x_resp<=-300, R3_x_resp-R7_x_resp<=300,\l   R7_x_resp=clock, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1210  --> EC_1211 : inv [] => [R7_x_resp<=60, True, True, True, True, True, True]\lact [true] / the alarm is disarmed

state "EC< id : 1211 , H : 234 , step : 294 >" as EC_1211 #LightBlue
EC_1211: 1: par
EC_1211: 2: 	par
EC_1211: 3: 		par
EC_1211: 4: 			par
EC_1211: 5: 				par
EC_1211: 6: 					par
EC_1211: 7: 						call( PostProc_R8 )
EC_1211: 8: 					||
EC_1211: 9: 						NIL
EC_1211: 10: 				||
EC_1211: 11: 					NIL
EC_1211: 12: 			||
EC_1211: 13: 				NIL
EC_1211: 14: 		||
EC_1211: 15: 			NIL
EC_1211: 16: 	||
EC_1211: 17: 		NIL
EC_1211: 18: ||
EC_1211: 19: 	NIL

EC_1211 : DBM: R7_x_resp<=60, 300<=R3_x_resp<=360, clock<=60,\l   R7_x_resp-R3_x_resp<=-300, R3_x_resp-R7_x_resp<=300,\l   R7_x_resp=clock, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1211  --> EC_1212 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 1212 , H : 235 , step : 0 >" as EC_1212 #Pink
EC_1212: 1: par
EC_1212: 2: 	par
EC_1212: 3: 		par
EC_1212: 4: 			par
EC_1212: 5: 				par
EC_1212: 6: 					par
EC_1212: 7: 						NIL
EC_1212: 8: 				||
EC_1212: 9: 					NIL
EC_1212: 10: 			||
EC_1212: 11: 				NIL
EC_1212: 12: 		||
EC_1212: 13: 			NIL
EC_1212: 14: 	||
EC_1212: 15: 		NIL
EC_1212: 16: ||
EC_1212: 17: 	NIL

EC_1212 : DBM: R7_x_resp<=60, 300<=R3_x_resp<=360, clock<=60,\l   R7_x_resp-R3_x_resp<=-300, R3_x_resp-R7_x_resp<=300,\l   R7_x_resp=clock, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1212  --> EC_1214 : inv [] => [True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1214 , H : 236 , step : 0 >" as EC_1214 #Red
EC_1214: 1: par
EC_1214: 2: 	par
EC_1214: 3: 		par
EC_1214: 4: 			par
EC_1214: 5: 				par
EC_1214: 6: 					par
EC_1214: 7: 						NIL
EC_1214: 8: 				||
EC_1214: 9: 					NIL
EC_1214: 10: 			||
EC_1214: 11: 				NIL
EC_1214: 12: 		||
EC_1214: 13: 			NIL
EC_1214: 14: 	||
EC_1214: 15: 		NIL
EC_1214: 16: ||
EC_1214: 17: 	NIL

EC_1214 : DBM: R3_x_resp>=300, R7_x_resp-R3_x_resp<=-300, R3_x_resp-R7_x_resp<=300,\l   R7_x_resp=clock, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1205  --> EC_1207 : inv [] => [True, R7_x_resp<=60, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 1207 , H : 231 , step : 295 >" as EC_1207 #LightBlue
EC_1207: 1: par
EC_1207: 2: 	par
EC_1207: 3: 		par
EC_1207: 4: 			par
EC_1207: 5: 				par
EC_1207: 6: 					par
EC_1207: 7: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1207: 8: 							[ clock==0 ] / alert the emergency center
EC_1207: 9: 							call( PostProc_R9 )
EC_1207: 10: 					||
EC_1207: 11: 						NIL
EC_1207: 12: 				||
EC_1207: 13: 					NIL
EC_1207: 14: 			||
EC_1207: 15: 				NIL
EC_1207: 16: 		||
EC_1207: 17: 			NIL
EC_1207: 18: 	||
EC_1207: 19: 		NIL
EC_1207: 20: ||
EC_1207: 21: 	NIL

EC_1207 : DBM: R7_x_resp=60, R3_x_resp=360, clock=60, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1207  --> EC_1216 : inv [clock] => [clock<=0, R7_x_resp<=60, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1216 , H : 232 , step : 0 >" as EC_1216 #Orange
EC_1216: 1: par
EC_1216: 2: 	par
EC_1216: 3: 		par
EC_1216: 4: 			par
EC_1216: 5: 				par
EC_1216: 6: 					par
EC_1216: 7: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1216: 8: 							[ clock==0 ] / alert the emergency center
EC_1216: 9: 							call( PostProc_R9 )
EC_1216: 10: 					||
EC_1216: 11: 						NIL
EC_1216: 12: 				||
EC_1216: 13: 					NIL
EC_1216: 14: 			||
EC_1216: 15: 				NIL
EC_1216: 16: 		||
EC_1216: 17: 			NIL
EC_1216: 18: 	||
EC_1216: 19: 		NIL
EC_1216: 20: ||
EC_1216: 21: 	NIL

EC_1216 : DBM: R7_x_resp=60, R3_x_resp=360, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=360, clock-R3_x_resp<=-360,
EC_1216  --> EC_1217 : inv [clock] => [clock<=0, R7_x_resp<=60, True, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 1217 , H : 233 , step : 296 >" as EC_1217 #LightBlue
EC_1217: 1: par
EC_1217: 2: 	par
EC_1217: 3: 		par
EC_1217: 4: 			par
EC_1217: 5: 				par
EC_1217: 6: 					par
EC_1217: 7: 						call( PostProc_R9 )
EC_1217: 8: 					||
EC_1217: 9: 						NIL
EC_1217: 10: 				||
EC_1217: 11: 					NIL
EC_1217: 12: 			||
EC_1217: 13: 				NIL
EC_1217: 14: 		||
EC_1217: 15: 			NIL
EC_1217: 16: 	||
EC_1217: 17: 		NIL
EC_1217: 18: ||
EC_1217: 19: 	NIL

EC_1217 : DBM: R7_x_resp=60, R3_x_resp=360, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=360, clock-R3_x_resp<=-360,
EC_1217  --> EC_1218 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 1218 , H : 234 , step : 0 >" as EC_1218 #Pink
EC_1218: 1: par
EC_1218: 2: 	par
EC_1218: 3: 		par
EC_1218: 4: 			par
EC_1218: 5: 				par
EC_1218: 6: 					par
EC_1218: 7: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1218: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1218: 9: 							call( PostProc_R7 )
EC_1218: 10: 						++
EC_1218: 11: 							[ R7_x_resp==60 ] / deadline at 60
EC_1218: 12: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1218: 13: 								[ clock==0 ] / alert the emergency center
EC_1218: 14: 								call( PostProc_R9 )
EC_1218: 15: 					||
EC_1218: 16: 						NIL
EC_1218: 17: 				||
EC_1218: 18: 					NIL
EC_1218: 19: 			||
EC_1218: 20: 				NIL
EC_1218: 21: 		||
EC_1218: 22: 			NIL
EC_1218: 23: 	||
EC_1218: 24: 		NIL
EC_1218: 25: ||
EC_1218: 26: 	NIL

EC_1218 : DBM: R7_x_resp=60, R3_x_resp=360, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=360, clock-R3_x_resp<=-360,
EC_1218  --> EC_1220 : inv [R7_x_resp] => [R7_x_resp<=60, True, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 1220 , H : 235 , step : 0 >" as EC_1220 #Orange
EC_1220: 1: par
EC_1220: 2: 	par
EC_1220: 3: 		par
EC_1220: 4: 			par
EC_1220: 5: 				par
EC_1220: 6: 					par
EC_1220: 7: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1220: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1220: 9: 							call( PostProc_R7 )
EC_1220: 10: 						++
EC_1220: 11: 							[ R7_x_resp==60 ] / deadline at 60
EC_1220: 12: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1220: 13: 								[ clock==0 ] / alert the emergency center
EC_1220: 14: 								call( PostProc_R9 )
EC_1220: 15: 					||
EC_1220: 16: 						NIL
EC_1220: 17: 				||
EC_1220: 18: 					NIL
EC_1220: 19: 			||
EC_1220: 20: 				NIL
EC_1220: 21: 		||
EC_1220: 22: 			NIL
EC_1220: 23: 	||
EC_1220: 24: 		NIL
EC_1220: 25: ||
EC_1220: 26: 	NIL

EC_1220 : DBM: R7_x_resp<=60, 360<=R3_x_resp<=420, clock<=60,\l   R7_x_resp-R3_x_resp<=-360, R3_x_resp-R7_x_resp<=360,\l   R7_x_resp=clock, R3_x_resp-clock<=360, clock-R3_x_resp<=-360,
EC_1220  --> EC_1221 : inv [R7_x_resp] => [R7_x_resp<=60, True, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 1221 , H : 236 , step : 297 >" as EC_1221 #LightBlue
EC_1221: 1: par
EC_1221: 2: 	par
EC_1221: 3: 		par
EC_1221: 4: 			par
EC_1221: 5: 				par
EC_1221: 6: 					par
EC_1221: 7: 						call( PostProc_R7 )
EC_1221: 8: 					||
EC_1221: 9: 						NIL
EC_1221: 10: 				||
EC_1221: 11: 					NIL
EC_1221: 12: 			||
EC_1221: 13: 				NIL
EC_1221: 14: 		||
EC_1221: 15: 			NIL
EC_1221: 16: 	||
EC_1221: 17: 		NIL
EC_1221: 18: ||
EC_1221: 19: 	NIL

EC_1221 : DBM: R7_x_resp<=60, 360<=R3_x_resp<=420, clock<=60,\l   R7_x_resp-R3_x_resp<=-360, R3_x_resp-R7_x_resp<=360,\l   R7_x_resp=clock, R3_x_resp-clock<=360, clock-R3_x_resp<=-360,
EC_1221  --> EC_1223 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R7, Proc_R8

state "EC< id : 1223 , H : 237 , step : 0 >" as EC_1223 #Pink
EC_1223: 1: par
EC_1223: 2: 	par
EC_1223: 3: 		par
EC_1223: 4: 			par
EC_1223: 5: 				par
EC_1223: 6: 					par
EC_1223: 7: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1223: 8: 							[ true ] / the alarm is disarmed
EC_1223: 9: 							call( PostProc_R8 )
EC_1223: 10: 					||
EC_1223: 11: 						NIL
EC_1223: 12: 				||
EC_1223: 13: 					NIL
EC_1223: 14: 			||
EC_1223: 15: 				NIL
EC_1223: 16: 		||
EC_1223: 17: 			NIL
EC_1223: 18: 	||
EC_1223: 19: 		NIL
EC_1223: 20: ||
EC_1223: 21: 	NIL

EC_1223 : DBM: R7_x_resp<=60, 360<=R3_x_resp<=420, clock<=60,\l   R7_x_resp-R3_x_resp<=-360, R3_x_resp-R7_x_resp<=360,\l   R7_x_resp=clock, R3_x_resp-clock<=360, clock-R3_x_resp<=-360,
EC_1223  --> EC_1225 : inv [] => [R7_x_resp<=60, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1225 , H : 238 , step : 0 >" as EC_1225 #Orange
EC_1225: 1: par
EC_1225: 2: 	par
EC_1225: 3: 		par
EC_1225: 4: 			par
EC_1225: 5: 				par
EC_1225: 6: 					par
EC_1225: 7: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1225: 8: 							[ true ] / the alarm is disarmed
EC_1225: 9: 							call( PostProc_R8 )
EC_1225: 10: 					||
EC_1225: 11: 						NIL
EC_1225: 12: 				||
EC_1225: 13: 					NIL
EC_1225: 14: 			||
EC_1225: 15: 				NIL
EC_1225: 16: 		||
EC_1225: 17: 			NIL
EC_1225: 18: 	||
EC_1225: 19: 		NIL
EC_1225: 20: ||
EC_1225: 21: 	NIL

EC_1225 : DBM: R7_x_resp<=60, 360<=R3_x_resp<=420, clock<=60,\l   R7_x_resp-R3_x_resp<=-360, R3_x_resp-R7_x_resp<=360,\l   R7_x_resp=clock, R3_x_resp-clock<=360, clock-R3_x_resp<=-360,
EC_1225  --> EC_1226 : inv [] => [R7_x_resp<=60, True, True, True, True, True, True]\lact [true] / the alarm is disarmed

state "EC< id : 1226 , H : 239 , step : 298 >" as EC_1226 #LightBlue
EC_1226: 1: par
EC_1226: 2: 	par
EC_1226: 3: 		par
EC_1226: 4: 			par
EC_1226: 5: 				par
EC_1226: 6: 					par
EC_1226: 7: 						call( PostProc_R8 )
EC_1226: 8: 					||
EC_1226: 9: 						NIL
EC_1226: 10: 				||
EC_1226: 11: 					NIL
EC_1226: 12: 			||
EC_1226: 13: 				NIL
EC_1226: 14: 		||
EC_1226: 15: 			NIL
EC_1226: 16: 	||
EC_1226: 17: 		NIL
EC_1226: 18: ||
EC_1226: 19: 	NIL

EC_1226 : DBM: R7_x_resp<=60, 360<=R3_x_resp<=420, clock<=60,\l   R7_x_resp-R3_x_resp<=-360, R3_x_resp-R7_x_resp<=360,\l   R7_x_resp=clock, R3_x_resp-clock<=360, clock-R3_x_resp<=-360,
EC_1226  --> EC_1227 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R8

state "EC< id : 1227 , H : 240 , step : 0 >" as EC_1227 #Pink
EC_1227: 1: par
EC_1227: 2: 	par
EC_1227: 3: 		par
EC_1227: 4: 			par
EC_1227: 5: 				par
EC_1227: 6: 					par
EC_1227: 7: 						NIL
EC_1227: 8: 				||
EC_1227: 9: 					NIL
EC_1227: 10: 			||
EC_1227: 11: 				NIL
EC_1227: 12: 		||
EC_1227: 13: 			NIL
EC_1227: 14: 	||
EC_1227: 15: 		NIL
EC_1227: 16: ||
EC_1227: 17: 	NIL

EC_1227 : DBM: R7_x_resp<=60, 360<=R3_x_resp<=420, clock<=60,\l   R7_x_resp-R3_x_resp<=-360, R3_x_resp-R7_x_resp<=360,\l   R7_x_resp=clock, R3_x_resp-clock<=360, clock-R3_x_resp<=-360,
EC_1227  --> EC_1229 : inv [] => [True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1229 , H : 241 , step : 0 >" as EC_1229 #Red
EC_1229: 1: par
EC_1229: 2: 	par
EC_1229: 3: 		par
EC_1229: 4: 			par
EC_1229: 5: 				par
EC_1229: 6: 					par
EC_1229: 7: 						NIL
EC_1229: 8: 				||
EC_1229: 9: 					NIL
EC_1229: 10: 			||
EC_1229: 11: 				NIL
EC_1229: 12: 		||
EC_1229: 13: 			NIL
EC_1229: 14: 	||
EC_1229: 15: 		NIL
EC_1229: 16: ||
EC_1229: 17: 	NIL

EC_1229 : DBM: R3_x_resp>=360, R7_x_resp-R3_x_resp<=-360, R3_x_resp-R7_x_resp<=360,\l   R7_x_resp=clock, R3_x_resp-clock<=360, clock-R3_x_resp<=-360,
EC_1220  --> EC_1222 : inv [R7_x_resp] => [R7_x_resp<=60, True, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 1222 , H : 236 , step : 299 >" as EC_1222 #LightBlue
EC_1222: 1: par
EC_1222: 2: 	par
EC_1222: 3: 		par
EC_1222: 4: 			par
EC_1222: 5: 				par
EC_1222: 6: 					par
EC_1222: 7: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1222: 8: 							[ clock==0 ] / alert the emergency center
EC_1222: 9: 							call( PostProc_R9 )
EC_1222: 10: 					||
EC_1222: 11: 						NIL
EC_1222: 12: 				||
EC_1222: 13: 					NIL
EC_1222: 14: 			||
EC_1222: 15: 				NIL
EC_1222: 16: 		||
EC_1222: 17: 			NIL
EC_1222: 18: 	||
EC_1222: 19: 		NIL
EC_1222: 20: ||
EC_1222: 21: 	NIL

EC_1222 : DBM: R7_x_resp=60, R3_x_resp=420, clock=60, R7_x_resp-R3_x_resp<=-360,\l   R3_x_resp-R7_x_resp<=360, R7_x_resp=clock, R3_x_resp-clock<=360,\l   clock-R3_x_resp<=-360,
EC_1222  --> EC_1231 : inv [clock] => [clock<=0, R7_x_resp<=60, True, True, True, True, True, True]\lact [True] / META:TIME_ELAPSE

state "EC< id : 1231 , H : 237 , step : 0 >" as EC_1231 #Orange
EC_1231: 1: par
EC_1231: 2: 	par
EC_1231: 3: 		par
EC_1231: 4: 			par
EC_1231: 5: 				par
EC_1231: 6: 					par
EC_1231: 7: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1231: 8: 							[ clock==0 ] / alert the emergency center
EC_1231: 9: 							call( PostProc_R9 )
EC_1231: 10: 					||
EC_1231: 11: 						NIL
EC_1231: 12: 				||
EC_1231: 13: 					NIL
EC_1231: 14: 			||
EC_1231: 15: 				NIL
EC_1231: 16: 		||
EC_1231: 17: 			NIL
EC_1231: 18: 	||
EC_1231: 19: 		NIL
EC_1231: 20: ||
EC_1231: 21: 	NIL

EC_1231 : DBM: R7_x_resp=60, R3_x_resp=420, clock<=0, R7_x_resp-R3_x_resp<=-360,\l   R3_x_resp-R7_x_resp<=360, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=420, clock-R3_x_resp<=-420,
EC_1231  --> EC_1232 : inv [clock] => [clock<=0, R7_x_resp<=60, True, True, True, True, True, True]\lact [clock==0] / alert the emergency center

state "EC< id : 1232 , H : 238 , step : 300 >" as EC_1232 #LightBlue
EC_1232: 1: par
EC_1232: 2: 	par
EC_1232: 3: 		par
EC_1232: 4: 			par
EC_1232: 5: 				par
EC_1232: 6: 					par
EC_1232: 7: 						call( PostProc_R9 )
EC_1232: 8: 					||
EC_1232: 9: 						NIL
EC_1232: 10: 				||
EC_1232: 11: 					NIL
EC_1232: 12: 			||
EC_1232: 13: 				NIL
EC_1232: 14: 		||
EC_1232: 15: 			NIL
EC_1232: 16: 	||
EC_1232: 17: 		NIL
EC_1232: 18: ||
EC_1232: 19: 	NIL

EC_1232 : DBM: R7_x_resp=60, R3_x_resp=420, clock<=0, R7_x_resp-R3_x_resp<=-360,\l   R3_x_resp-R7_x_resp<=360, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=420, clock-R3_x_resp<=-420,
EC_1232  --> EC_1233 : \lact [True] / META:UNFOLD_CALL_PROCESS:K = PostProc_R9, Proc_R7

state "EC< id : 1233 , H : 239 , step : 0 >" as EC_1233 #Pink
EC_1233: 1: par
EC_1233: 2: 	par
EC_1233: 3: 		par
EC_1233: 4: 			par
EC_1233: 5: 				par
EC_1233: 6: 					par
EC_1233: 7: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1233: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1233: 9: 							call( PostProc_R7 )
EC_1233: 10: 						++
EC_1233: 11: 							[ R7_x_resp==60 ] / deadline at 60
EC_1233: 12: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1233: 13: 								[ clock==0 ] / alert the emergency center
EC_1233: 14: 								call( PostProc_R9 )
EC_1233: 15: 					||
EC_1233: 16: 						NIL
EC_1233: 17: 				||
EC_1233: 18: 					NIL
EC_1233: 19: 			||
EC_1233: 20: 				NIL
EC_1233: 21: 		||
EC_1233: 22: 			NIL
EC_1233: 23: 	||
EC_1233: 24: 		NIL
EC_1233: 25: ||
EC_1233: 26: 	NIL

EC_1233 : DBM: R7_x_resp=60, R3_x_resp=420, clock<=0, R7_x_resp-R3_x_resp<=-360,\l   R3_x_resp-R7_x_resp<=360, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=420, clock-R3_x_resp<=-420,
EC_1233  --> EC_1235 : inv [R7_x_resp] => [R7_x_resp<=60, True, True, True, True, True, True]\lact [True] / META:start time period within 0 to 60

state "EC< id : 1235 , H : 240 , step : 0 >" as EC_1235 #Orange
EC_1235: 1: par
EC_1235: 2: 	par
EC_1235: 3: 		par
EC_1235: 4: 			par
EC_1235: 5: 				par
EC_1235: 6: 					par
EC_1235: 7: 						alt invariant( [R7_x_resp] ~> R7_x_resp<=60 / start time period within 0 to 60 )
EC_1235: 8: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1235: 9: 							call( PostProc_R7 )
EC_1235: 10: 						++
EC_1235: 11: 							[ R7_x_resp==60 ] / deadline at 60
EC_1235: 12: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1235: 13: 								[ clock==0 ] / alert the emergency center
EC_1235: 14: 								call( PostProc_R9 )
EC_1235: 15: 					||
EC_1235: 16: 						NIL
EC_1235: 17: 				||
EC_1235: 18: 					NIL
EC_1235: 19: 			||
EC_1235: 20: 				NIL
EC_1235: 21: 		||
EC_1235: 22: 			NIL
EC_1235: 23: 	||
EC_1235: 24: 		NIL
EC_1235: 25: ||
EC_1235: 26: 	NIL

EC_1235 : DBM: R7_x_resp<=60, 420<=R3_x_resp<=480, clock<=60,\l   R7_x_resp-R3_x_resp<=-420, R3_x_resp-R7_x_resp<=420,\l   R7_x_resp=clock, R3_x_resp-clock<=420, clock-R3_x_resp<=-420,
EC_1235  --> EC_1236 : inv [R7_x_resp] => [R7_x_resp<=60, True, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 1236 , H : 241 , step : 0 >" as EC_1236 #LightBlue
EC_1236: 1: par
EC_1236: 2: 	par
EC_1236: 3: 		par
EC_1236: 4: 			par
EC_1236: 5: 				par
EC_1236: 6: 					par
EC_1236: 7: 						call( PostProc_R7 )
EC_1236: 8: 					||
EC_1236: 9: 						NIL
EC_1236: 10: 				||
EC_1236: 11: 					NIL
EC_1236: 12: 			||
EC_1236: 13: 				NIL
EC_1236: 14: 		||
EC_1236: 15: 			NIL
EC_1236: 16: 	||
EC_1236: 17: 		NIL
EC_1236: 18: ||
EC_1236: 19: 	NIL

EC_1236 : DBM: R7_x_resp<=60, 420<=R3_x_resp<=480, clock<=60,\l   R7_x_resp-R3_x_resp<=-420, R3_x_resp-R7_x_resp<=420,\l   R7_x_resp=clock, R3_x_resp-clock<=420, clock-R3_x_resp<=-420,
EC_1235  --> EC_1237 : inv [R7_x_resp] => [R7_x_resp<=60, True, True, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 1237 , H : 241 , step : 0 >" as EC_1237 #LightBlue
EC_1237: 1: par
EC_1237: 2: 	par
EC_1237: 3: 		par
EC_1237: 4: 			par
EC_1237: 5: 				par
EC_1237: 6: 					par
EC_1237: 7: 						alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1237: 8: 							[ clock==0 ] / alert the emergency center
EC_1237: 9: 							call( PostProc_R9 )
EC_1237: 10: 					||
EC_1237: 11: 						NIL
EC_1237: 12: 				||
EC_1237: 13: 					NIL
EC_1237: 14: 			||
EC_1237: 15: 				NIL
EC_1237: 16: 		||
EC_1237: 17: 			NIL
EC_1237: 18: 	||
EC_1237: 19: 		NIL
EC_1237: 20: ||
EC_1237: 21: 	NIL

EC_1237 : DBM: R7_x_resp=60, R3_x_resp=480, clock=60, R7_x_resp-R3_x_resp<=-420,\l   R3_x_resp-R7_x_resp<=420, R7_x_resp=clock, R3_x_resp-clock<=420,\l   clock-R3_x_resp<=-420,
EC_1199  --> EC_1201 : inv [clock] => [clock<=0, R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 1201 , H : 228 , step : 0 >" as EC_1201 #LightBlue
EC_1201: 1: par
EC_1201: 2: 	par
EC_1201: 3: 		par
EC_1201: 4: 			par
EC_1201: 5: 				par
EC_1201: 6: 					par sync [the alarm is disarmed]
EC_1201: 7: 						alt invariant( [] ~> [clock<=0, R3_x_resp<=300] )
EC_1201: 8: 							[ clock==0 ] / turn off the tone
EC_1201: 9: 							call( PostProc_R5 )
EC_1201: 10: 					&&
EC_1201: 11: 						call( PostProc_R7 )
EC_1201: 12: 				||
EC_1201: 13: 					NIL
EC_1201: 14: 			||
EC_1201: 15: 				NIL
EC_1201: 16: 		||
EC_1201: 17: 			NIL
EC_1201: 18: 	||
EC_1201: 19: 		NIL
EC_1201: 20: ||
EC_1201: 21: 	NIL

EC_1201 : DBM: R7_x_resp<=0, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-300,\l   R3_x_resp-R7_x_resp<=300, R7_x_resp=clock, R3_x_resp-clock<=300,\l   clock-R3_x_resp<=-300,
EC_1138  --> EC_1141 : inv [clock] => [R3_x_resp<=300, clock<=0, R7_x_resp<=60, True, True, True, True, True]\lact [R3_x_resp==300] / deadline at 300

state "EC< id : 1141 , H : 223 , step : 0 >" as EC_1141 #LightBlue
EC_1141: 1: par
EC_1141: 2: 	par
EC_1141: 3: 		par
EC_1141: 4: 			par
EC_1141: 5: 				par
EC_1141: 6: 					par sync [the alarm is disarmed]
EC_1141: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1141: 8: 							[ clock==0 ] / turn off the tone
EC_1141: 9: 							call( PostProc_R5 )
EC_1141: 10: 					&&
EC_1141: 11: 						alt invariant( [] ~> [clock<=0, R7_x_resp<=60] )
EC_1141: 12: 							[ clock==0 ] / alert the emergency center
EC_1141: 13: 							call( PostProc_R9 )
EC_1141: 14: 				||
EC_1141: 15: 					NIL
EC_1141: 16: 			||
EC_1141: 17: 				NIL
EC_1141: 18: 		||
EC_1141: 19: 			NIL
EC_1141: 20: 	||
EC_1141: 21: 		NIL
EC_1141: 22: ||
EC_1141: 23: 	NIL

EC_1141 : DBM: R7_x_resp=60, R3_x_resp=300, clock<=0, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp-clock<=60,\l   clock-R7_x_resp<=-60, R3_x_resp-clock<=300, clock-R3_x_resp<=-300,
EC_1084  --> EC_1088 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True, True]\lact [R3_x_resp==300] / deadline at 300

state "EC< id : 1088 , H : 221 , step : 0 >" as EC_1088 #LightBlue
EC_1088: 1: par
EC_1088: 2: 	par
EC_1088: 3: 		par
EC_1088: 4: 			par
EC_1088: 5: 				par
EC_1088: 6: 					par sync [the alarm is disarmed]
EC_1088: 7: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_1088: 8: 							[ clock==0 ] / turn off the tone
EC_1088: 9: 							call( PostProc_R5 )
EC_1088: 10: 					&&
EC_1088: 11: 						alt invariant( [] ~> R7_x_resp<=60 )
EC_1088: 12: 							[ true ] / enter in <TimedState: start time period , timing: within 0 to 60/>
EC_1088: 13: 							call( PostProc_R7 )
EC_1088: 14: 						++
EC_1088: 15: 							[ R7_x_resp==60 ] / deadline at 60
EC_1088: 16: 							alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_1088: 17: 								[ clock==0 ] / alert the emergency center
EC_1088: 18: 								call( PostProc_R9 )
EC_1088: 19: 				||
EC_1088: 20: 					NIL
EC_1088: 21: 			||
EC_1088: 22: 				NIL
EC_1088: 23: 		||
EC_1088: 24: 			NIL
EC_1088: 25: 	||
EC_1088: 26: 		NIL
EC_1088: 27: ||
EC_1088: 28: 	NIL

EC_1088 : DBM: R7_x_resp=60, R3_x_resp=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp=clock, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-240,
EC_345  --> EC_347 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 347 , H : 154 , step : 0 >" as EC_347 #LightBlue
EC_347: 1: par
EC_347: 2: 	par
EC_347: 3: 		par
EC_347: 4: 			par
EC_347: 5: 				par sync [the alarm is disarmed]
EC_347: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_347: 7: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_347: 8: 						call( PostProc_R3 )
EC_347: 9: 					++
EC_347: 10: 						[ R3_x_resp==300 ] / deadline at 300
EC_347: 11: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_347: 12: 							[ clock==0 ] / turn off the tone
EC_347: 13: 							call( PostProc_R5 )
EC_347: 14: 				&&
EC_347: 15: 					call( PostProc_R7 )
EC_347: 16: 			||
EC_347: 17: 				NIL
EC_347: 18: 		||
EC_347: 19: 			NIL
EC_347: 20: 	||
EC_347: 21: 		NIL
EC_347: 22: ||
EC_347: 23: 	NIL

EC_347 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_345  --> EC_348 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 348 , H : 154 , step : 0 >" as EC_348 #LightBlue
EC_348: 1: par
EC_348: 2: 	par
EC_348: 3: 		par
EC_348: 4: 			par
EC_348: 5: 				par sync [the alarm is disarmed]
EC_348: 6: 					alt invariant( [] ~> R3_x_resp<=300 )
EC_348: 7: 						[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_348: 8: 						call( PostProc_R3 )
EC_348: 9: 					++
EC_348: 10: 						[ R3_x_resp==300 ] / deadline at 300
EC_348: 11: 						alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_348: 12: 							[ clock==0 ] / turn off the tone
EC_348: 13: 							call( PostProc_R5 )
EC_348: 14: 				&&
EC_348: 15: 					alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_348: 16: 						[ clock==0 ] / alert the emergency center
EC_348: 17: 						call( PostProc_R9 )
EC_348: 18: 			||
EC_348: 19: 				NIL
EC_348: 20: 		||
EC_348: 21: 			NIL
EC_348: 22: 	||
EC_348: 23: 		NIL
EC_348: 24: ||
EC_348: 25: 	NIL

EC_348 : DBM: R7_x_resp=60, R3_x_resp=60, clock=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_318  --> EC_320 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 320 , H : 135 , step : 0 >" as EC_320 #LightBlue
EC_320: 1: par
EC_320: 2: 	par
EC_320: 3: 		par
EC_320: 4: 			par sync [the alarm is disarmed]
EC_320: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_320: 6: 					[ true ] / the alarm is disarmed
EC_320: 7: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_320: 8: 						[ clock==0 ] / turn off the tone
EC_320: 9: 						call( PostProc_R4 )
EC_320: 10: 			&&
EC_320: 11: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_320: 12: 					[ clock==0 ] / alert the emergency center
EC_320: 13: 					call( PostProc_R9 )
EC_320: 14: 		||
EC_320: 15: 			NIL
EC_320: 16: 	||
EC_320: 17: 		NIL
EC_320: 18: ||
EC_320: 19: 	NIL

EC_320 : DBM: R7_x_resp=60, R3_x_resp=300, clock=60, R7_x_resp-R3_x_resp<=-240,\l   R3_x_resp-R7_x_resp<=240, R7_x_resp=clock, R3_x_resp-clock<=240,\l   clock-R3_x_resp<=-240,
EC_240  --> EC_242 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 242 , H : 112 , step : 0 >" as EC_242 #LightBlue
EC_242: 1: par
EC_242: 2: 	par
EC_242: 3: 		par
EC_242: 4: 			par sync [the alarm is disarmed]
EC_242: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_242: 6: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_242: 7: 					call( PostProc_R3 )
EC_242: 8: 				++
EC_242: 9: 					[ R3_x_resp==300 ] / deadline at 300
EC_242: 10: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_242: 11: 						[ clock==0 ] / turn off the tone
EC_242: 12: 						call( PostProc_R5 )
EC_242: 13: 			&&
EC_242: 14: 				call( PostProc_R7 )
EC_242: 15: 		||
EC_242: 16: 			NIL
EC_242: 17: 	||
EC_242: 18: 		NIL
EC_242: 19: ||
EC_242: 20: 	NIL

EC_242 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_240  --> EC_243 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 243 , H : 112 , step : 0 >" as EC_243 #LightBlue
EC_243: 1: par
EC_243: 2: 	par
EC_243: 3: 		par
EC_243: 4: 			par sync [the alarm is disarmed]
EC_243: 5: 				alt invariant( [] ~> R3_x_resp<=300 )
EC_243: 6: 					[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_243: 7: 					call( PostProc_R3 )
EC_243: 8: 				++
EC_243: 9: 					[ R3_x_resp==300 ] / deadline at 300
EC_243: 10: 					alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_243: 11: 						[ clock==0 ] / turn off the tone
EC_243: 12: 						call( PostProc_R5 )
EC_243: 13: 			&&
EC_243: 14: 				alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_243: 15: 					[ clock==0 ] / alert the emergency center
EC_243: 16: 					call( PostProc_R9 )
EC_243: 17: 		||
EC_243: 18: 			NIL
EC_243: 19: 	||
EC_243: 20: 		NIL
EC_243: 21: ||
EC_243: 22: 	NIL

EC_243 : DBM: R7_x_resp=60, R3_x_resp=60, clock=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_213  --> EC_215 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 215 , H : 93 , step : 0 >" as EC_215 #LightBlue
EC_215: 1: par
EC_215: 2: 	par
EC_215: 3: 		par sync [the alarm is disarmed]
EC_215: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_215: 5: 				[ true ] / the alarm is disarmed
EC_215: 6: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_215: 7: 					[ clock==0 ] / turn off the tone
EC_215: 8: 					call( PostProc_R4 )
EC_215: 9: 		&&
EC_215: 10: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_215: 11: 				[ clock==0 ] / alert the emergency center
EC_215: 12: 				call( PostProc_R9 )
EC_215: 13: 	||
EC_215: 14: 		NIL
EC_215: 15: ||
EC_215: 16: 	NIL

EC_215 : DBM: R7_x_resp=60, R3_x_resp=240, clock=60, R7_x_resp-R3_x_resp<=-180,\l   R3_x_resp-R7_x_resp<=180, R7_x_resp=clock, R3_x_resp-clock<=180,\l   clock-R3_x_resp<=-180,
EC_151  --> EC_153 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 153 , H : 75 , step : 0 >" as EC_153 #LightBlue
EC_153: 1: par
EC_153: 2: 	par
EC_153: 3: 		par sync [the alarm is disarmed]
EC_153: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_153: 5: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_153: 6: 				call( PostProc_R3 )
EC_153: 7: 			++
EC_153: 8: 				[ R3_x_resp==300 ] / deadline at 300
EC_153: 9: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_153: 10: 					[ clock==0 ] / turn off the tone
EC_153: 11: 					call( PostProc_R5 )
EC_153: 12: 		&&
EC_153: 13: 			call( PostProc_R7 )
EC_153: 14: 	||
EC_153: 15: 		NIL
EC_153: 16: ||
EC_153: 17: 	NIL

EC_153 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_151  --> EC_154 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 154 , H : 75 , step : 0 >" as EC_154 #LightBlue
EC_154: 1: par
EC_154: 2: 	par
EC_154: 3: 		par sync [the alarm is disarmed]
EC_154: 4: 			alt invariant( [] ~> R3_x_resp<=300 )
EC_154: 5: 				[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_154: 6: 				call( PostProc_R3 )
EC_154: 7: 			++
EC_154: 8: 				[ R3_x_resp==300 ] / deadline at 300
EC_154: 9: 				alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_154: 10: 					[ clock==0 ] / turn off the tone
EC_154: 11: 					call( PostProc_R5 )
EC_154: 12: 		&&
EC_154: 13: 			alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_154: 14: 				[ clock==0 ] / alert the emergency center
EC_154: 15: 				call( PostProc_R9 )
EC_154: 16: 	||
EC_154: 17: 		NIL
EC_154: 18: ||
EC_154: 19: 	NIL

EC_154 : DBM: R7_x_resp=60, R3_x_resp=60, clock=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_124  --> EC_126 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 126 , H : 56 , step : 0 >" as EC_126 #LightBlue
EC_126: 1: par
EC_126: 2: 	par sync [the alarm is disarmed]
EC_126: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_126: 4: 			[ true ] / the alarm is disarmed
EC_126: 5: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_126: 6: 				[ clock==0 ] / turn off the tone
EC_126: 7: 				call( PostProc_R4 )
EC_126: 8: 	&&
EC_126: 9: 		alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_126: 10: 			[ clock==0 ] / alert the emergency center
EC_126: 11: 			call( PostProc_R9 )
EC_126: 12: ||
EC_126: 13: 	NIL

EC_126 : DBM: R7_x_resp=60, R3_x_resp=180, clock=60, R7_x_resp-R3_x_resp<=-120,\l   R3_x_resp-R7_x_resp<=120, R7_x_resp=clock, R3_x_resp-clock<=120,\l   clock-R3_x_resp<=-120,
EC_78  --> EC_80 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 80 , H : 43 , step : 0 >" as EC_80 #LightBlue
EC_80: 1: par
EC_80: 2: 	par sync [the alarm is disarmed]
EC_80: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_80: 4: 			[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_80: 5: 			call( PostProc_R3 )
EC_80: 6: 		++
EC_80: 7: 			[ R3_x_resp==300 ] / deadline at 300
EC_80: 8: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_80: 9: 				[ clock==0 ] / turn off the tone
EC_80: 10: 				call( PostProc_R5 )
EC_80: 11: 	&&
EC_80: 12: 		call( PostProc_R7 )
EC_80: 13: ||
EC_80: 14: 	NIL

EC_80 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_78  --> EC_81 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60, True]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 81 , H : 43 , step : 0 >" as EC_81 #LightBlue
EC_81: 1: par
EC_81: 2: 	par sync [the alarm is disarmed]
EC_81: 3: 		alt invariant( [] ~> R3_x_resp<=300 )
EC_81: 4: 			[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_81: 5: 			call( PostProc_R3 )
EC_81: 6: 		++
EC_81: 7: 			[ R3_x_resp==300 ] / deadline at 300
EC_81: 8: 			alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_81: 9: 				[ clock==0 ] / turn off the tone
EC_81: 10: 				call( PostProc_R5 )
EC_81: 11: 	&&
EC_81: 12: 		alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_81: 13: 			[ clock==0 ] / alert the emergency center
EC_81: 14: 			call( PostProc_R9 )
EC_81: 15: ||
EC_81: 16: 	NIL

EC_81 : DBM: R7_x_resp=60, R3_x_resp=60, clock=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_51  --> EC_53 : inv [R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 53 , H : 24 , step : 0 >" as EC_53 #LightBlue
EC_53: 1: par sync [the alarm is disarmed]
EC_53: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_53: 3: 		[ true ] / the alarm is disarmed
EC_53: 4: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_53: 5: 			[ clock==0 ] / turn off the tone
EC_53: 6: 			call( PostProc_R4 )
EC_53: 7: &&
EC_53: 8: 	alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_53: 9: 		[ clock==0 ] / alert the emergency center
EC_53: 10: 		call( PostProc_R9 )

EC_53 : DBM: R7_x_resp=60, R3_x_resp=120, clock=60, R7_x_resp-R3_x_resp<=-60,\l   R3_x_resp-R7_x_resp<=60, R7_x_resp=clock, R3_x_resp-clock<=60,\l   clock-R3_x_resp<=-60,
EC_21  --> EC_23 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60]\lact [true] / enter in <TimedState: start time period , timing: within 0 to 60/>

state "EC< id : 23 , H : 16 , step : 0 >" as EC_23 #LightBlue
EC_23: 1: par sync [the alarm is disarmed]
EC_23: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_23: 3: 		[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_23: 4: 		call( PostProc_R3 )
EC_23: 5: 	++
EC_23: 6: 		[ R3_x_resp==300 ] / deadline at 300
EC_23: 7: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_23: 8: 			[ clock==0 ] / turn off the tone
EC_23: 9: 			call( PostProc_R5 )
EC_23: 10: &&
EC_23: 11: 	call( PostProc_R7 )

EC_23 : DBM: R7_x_resp<=60, R3_x_resp<=60, clock<=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
EC_21  --> EC_24 : inv [R3_x_resp, R7_x_resp] => [R3_x_resp<=300, R7_x_resp<=60]\lact [R7_x_resp==60] / deadline at 60

state "EC< id : 24 , H : 16 , step : 0 >" as EC_24 #LightBlue
EC_24: 1: par sync [the alarm is disarmed]
EC_24: 2: 	alt invariant( [] ~> R3_x_resp<=300 )
EC_24: 3: 		[ true ] / enter in <TimedState: start time period , timing: within 0 to 300/>
EC_24: 4: 		call( PostProc_R3 )
EC_24: 5: 	++
EC_24: 6: 		[ R3_x_resp==300 ] / deadline at 300
EC_24: 7: 		alt invariant( [clock] ~> [clock<=0, R3_x_resp<=300] )
EC_24: 8: 			[ clock==0 ] / turn off the tone
EC_24: 9: 			call( PostProc_R5 )
EC_24: 10: &&
EC_24: 11: 	alt invariant( [clock] ~> [clock<=0, R7_x_resp<=60] )
EC_24: 12: 		[ clock==0 ] / alert the emergency center
EC_24: 13: 		call( PostProc_R9 )

EC_24 : DBM: R7_x_resp=60, R3_x_resp=60, clock=60, R7_x_resp=R3_x_resp,\l   R7_x_resp=clock, R3_x_resp=clock,
@enduml
