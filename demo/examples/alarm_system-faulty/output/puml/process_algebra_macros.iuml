
' =======================================
' COLORS
' =======================================

!$procDef_color  = "#Cyan"
!$procRun_color  = "#Gold"
!$procId_color   = "#Beige"

!$invariant_color = ""
!$label_invariant_color = "#Cyan"

!$guard_color    = "#Orange"
!$label_color    = "#Yellow"
'!$trigger_color = "#Palegreen"
!$trigger_color  = ""
!$state_color    = "#Cyan"
!$send_color     = "#Orange"
!$receive_color  = "#Gold"

!$deadlock_color   = "#Red"
!$redundancy_color = "#YellowGreen"

'!$leq = <math>geq</math>



' =======================================
' NEWLINE PART
' =======================================

!$NEWLINE = "\n----\n"


' =======================================
' TEXT FORMATTERS
' =======================================

!function $bold($arg)
!return "**" + $arg + "**"
!endfunction

!function $italic($arg)
!return "//" + $arg + "//"
!endfunction

!function $text($arg)
!return $arg
!endfunction


!function $keyword($arg)
!return "<color blue>" + $text($arg) + "</color>"
!endfunction


!function $label($arg)
!return $text($arg)
!endfunction

!function $trigger($arg)
!return $text($arg)
!endfunction

!function $condition($arg)
!return $trigger($arg)
!endfunction

!function $guard_condition($arg)
!return "[ " + $trigger($arg) + " ]"
!endfunction

!function $guard_scope($arg)
!return "[scope]( " + $arg+ " )"
!endfunction


!function $processId($arg)
!return $text($arg)
!endfunction

!function $processName($arg)
!return $text($arg)
!endfunction

!function $processInfo($arg)
!return $text($arg)
!endfunction

!function $processDesc($arg)
!return $text($arg)
!endfunction


!function $response($arg)
!return $text($arg)
!endfunction

!function $data($arg)
!return $text($arg)
!endfunction

!function $clock($arg)
!return $text($arg)
!endfunction

!function $state($arg)
!return $text($arg)
!endfunction


' =======================================
' KEYWORDS
' =======================================
!$DEFINE = $keyword("define")
!$RUN = $keyword("run")

!$GUARD  = $keyword("guard")
!$NIL    = $keyword("NIL")
!$SKIP   = $keyword("SKIP")
!$STOP   = $keyword("STOP")
!$CALL   = $keyword("call")
!$ALT    = $keyword("alt")
!$AND    = $keyword("and")
!$RESET  = $keyword("reset")
!$INV    = $keyword("inv")
!$LOOP   = $keyword("loop")
'!$SEND  = $keyword("send")
!$SEND   = $text("send")


' =======================================
' STATEMENTS : DEF PROCESS
' =======================================

!function $defineProcess($name)
!return $procDef_color + ": " + $DEFINE + "  " + $processName($name) + " |"
!endfunction

!function $defineProcessDesc($name, $desc)
!return $procDef_color + ": " + $DEFINE + "  " + $processName($name) + $NEWLINE + $processDesc($desc) + " |"
!endfunction

' =======================================
' STATEMENTS : RUN PROCESS
' =======================================

!function $runProcess($name)
!return $procRun_color + ": " + $RUN + "  " + $processName($name) + " |"
!endfunction

!function $runProcessDesc($name, $desc)
!return $procRun_color + ": " + $RUN + "  " + $processName($name) + $NEWLINE + $processDesc($desc) + " |"
!endfunction

!function $runProcessInfo($name, $info)
!return $procRun_color + ": " + $RUN + "  " + $processName($name) + $NEWLINE + $processInfo($info) + " |"
!endfunction

!function $runProcessInfoDesc($name, $info, $desc)
!return $procRun_color + ": " + $RUN + "  " + $processName($name) + $NEWLINE + $processInfo($info) + $NEWLINE + $processDesc($desc) + " |"
!endfunction

' =======================================
' STATEMENTS : CALL PROCESS
' =======================================

!$nilProcess  = ": " + $NIL  + " |"
!$skipProcess = ": " + $SKIP + " |"
!$stopProcess = ": " + $STOP + " |"


' =======================================
' PROCESS ID
' =======================================

!function $processID($type, $id)
!return $procId_color + ": " + $type + "< " + $processId($id) + " > |"
!endfunction


' =======================================
' STATEMENTS : CALL PROCESS
' =======================================

!function $callProcess($arg)
!return ": " + $CALL + "( " + $processName($arg) + " ) |"
!endfunction

' =======================================
' STATEMENTS : INVARIANT
' =======================================

!function $reset_invariant($clocks, $condition)
!return $invariant_color + ": " + $RESET + "( " + $clocks  + " )" + $NEWLINE + $INV + "( " + $condition  + " ) }"
!endfunction

!function $reset_label_invariant($clocks, $condition, $arg_label)
!return  $label_invariant_color + ": " + $RESET + "( " + $clocks  + " )" + $NEWLINE + $INV + "( " + $condition  + " )" + $NEWLINE + $label($arg_label) + " }"
!endfunction


!function $invariant($condition)
!return  $invariant_color + ": " + $INV + "( " + $condition + " ) }"
!endfunction

!function $label_invariant($condition, $arg_label)
!return $label_invariant_color + ": " + $INV + "( " + $condition + $NEWLINE + $label($arg_label) + " ) }"
!endfunction



' =======================================
' STATEMENTS : ACTION -> INSTRUCTIONS
' =======================================

!function $label_statement($arg)
!return $label_color + ": " + $arg  + ";"
!endfunction


!function $label_statement_redundancy($arg)
!return $redundancy_color + ": " + $arg   + $NEWLINE + "**redundancy**;"
!endfunction

!function $tag_redundancy()
!return $redundancy_color + ":**redundancy**;"
!endfunction


!function $label_statement_deadlock($arg)
!return $deadlock_color + ": " + $arg   + $NEWLINE + "**deadlock**;"
!endfunction

!function $tag_deadlock()
!return $deadlock_color + ":**deadlock**;"
!endfunction


!function $guard_trigger($arg)
!return $guard_color  + ": " + $guard_condition($arg) + " ;"
!endfunction

!function $guard_label($arg_guard, $arg_label)
!return $label_color + ": " + $GUARD + " " + $guard_condition($arg_guard) + $NEWLINE + $label($arg_label) + " ;"
!endfunction

!function $guard_scope_label($arg_guard, $arg_scope, $arg_label)
!return ": " + $GUARD + " " + $guard_condition($arg_guard) + $NEWLINE + $guard_scope($arg_scope) + $NEWLINE + $label($arg_label) + " ;"
!endfunction


!function $event_trigger($arg)
!return $trigger_color + ": " + $trigger($arg) + " ;"
!endfunction


!function $state_trigger($arg)
!return $state_color + ": [ " + $state($arg) + " ] ;"
!endfunction

!function $state_target($arg)
!return $state_color + ": -->> " + $state($arg) + " ;"
!endfunction


!function $send_action($arg)
!return $send_color + ": " + $text($arg) + " >"
!endfunction

!function $receive_trigger($arg)
!return $receive_color + ": " + $text($arg) + " <"
!endfunction


!function $clock_reset($arg)
!return "{ " + $clock($arg) + " }"
!endfunction

!function $clock_reset_action($arg)
!return ": " + $clock_reset($arg) + " ]"
!endfunction

!function $response_action($arg)
!return ": " + $response($arg) + " ]"
!endfunction

!function $response_action_2($arg_1, $arg_2)
!return ": " + $response($arg_1) + " \n " + $response($arg_2) + " ]"
!endfunction


!function $guard_response_action($arg_guard, $arg_resp)
!return ": " + $guard_condition($arg_guard) + $NEWLINE + $response($arg_resp) + " ;"
!endfunction

!function $guard_subject_response($arg_guard, $arg_resp)
!return ": " + $guard_condition($arg_guard) + $NEWLINE + $response($arg_resp) + " ]"
!endfunction

!function $guard_clock_reset($arg_guard, $arg_clock)
!return ": " + $guard_condition($arg_guard) + $NEWLINE + $clock_reset($arg_clock) + " ]"
!endfunction

!function $guard_response_clock_reset($arg_guard, $arg_resp, $arg_clock)
!return ": " + $guard_condition($arg_guard) + $NEWLINE + $response($arg_resp) + $NEWLINE + $clock_reset($arg_clock) + " ]"
!endfunction

!function $guard_subject_response($arg_guard, $arg_subject, $arg_resp)
!return ": " + $guard_condition($arg_guard) + $NEWLINE + $response($arg_subject) + $NEWLINE + $response($arg_resp) + " ]"
!endfunction

