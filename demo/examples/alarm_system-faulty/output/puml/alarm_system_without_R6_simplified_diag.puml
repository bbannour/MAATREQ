@startuml

!include process_algebra_macros.iuml



$defineProcessDesc("main", "call Proc_R0")
$invariant("true")
switch( ALT )
case ( )
	$guard_label("true", "init")
	$invariant("true")
	switch( ALT )
	case ( )
		$guard_label("true", "the set button is pressed")
		$reset_invariant("[clock]", "clock<=60")
		switch( ALT )
		case ( )
			$guard_label("clock==60", "activate the alarm")
			$invariant("true")
			switch( ALT )
			case ( )
				$guard_label("true", "motion is detected")
				$reset_invariant("[clock]", "clock<=0")
				switch( ALT )
				case ( )
					$guard_label("clock==0", "emit a tone")
					$processID("par sync", "[the alarm is disarmed]")
					'fork
					split
						$reset_label_invariant("[R3_x_resp]", "R3_x_resp<=300", "start time period within 0 to 300")
						switch( ALT )
						case ( )
							$guard_label("true", "the alarm is disarmed")
							$reset_invariant("[clock]", "[clock<=0, R3_x_resp<=300]")
							switch( ALT )
							case ( )
								$guard_label("clock==0", "turn off the tone")
								$callProcess("Proc_R1")
								detach
							endswitch
						case ( )
							$guard_label("R3_x_resp==300", "deadline at 300")
							$reset_invariant("[clock]", "[clock<=0, R3_x_resp<=300]")
							switch( ALT )
							case ( )
								$guard_label("clock==0", "turn off the tone")
								$nilProcess
								detach
							endswitch
						endswitch
					'fork again
					split again
						$reset_label_invariant("[R7_x_resp]", "R7_x_resp<=60", "start time period within 0 to 60")
						switch( ALT )
						case ( )
							$guard_label("true", "the alarm is disarmed")
							$nilProcess
							detach
						case ( )
							$guard_label("R7_x_resp==60", "deadline at 60")
							$reset_invariant("[clock]", "[clock<=0, R7_x_resp<=60]")
							switch( ALT )
							case ( )
								$guard_label("clock==0", "alert the emergency center")
								$reset_label_invariant("[R7_x_resp]", "R7_x_resp<=60", "start time period within 0 to 60")
								switch( ALT )
								case ( )
									$guard_label("true", "the alarm is disarmed")
									$nilProcess
									detach
								case ( )
									$guard_label("R7_x_resp==60", "deadline at 60")
									$reset_invariant("[clock]", "[clock<=0, R7_x_resp<=60]")
									switch( ALT )
									case ( )
										$guard_label("clock==0", "alert the emergency center")
										$callProcess("PostProc_R9")
										detach
									endswitch
								endswitch
							endswitch
						endswitch
					'end merge
					'endfork
					end split
				endswitch
			endswitch
		endswitch
	endswitch
endswitch
detach

$defineProcessDesc("Proc_R1", "R1 : when the set button is pressed\l upon init,\lthe system shall activate the alarm within 60 to 60")
$invariant("true")
switch( ALT )
case ( )
	$guard_label("true", "the set button is pressed")
	$reset_invariant("[clock]", "clock<=60")
	switch( ALT )
	case ( )
		$guard_label("clock==60", "activate the alarm")
		$invariant("true")
		switch( ALT )
		case ( )
			$guard_label("true", "motion is detected")
			$reset_invariant("[clock]", "clock<=0")
			switch( ALT )
			case ( )
				$guard_label("clock==0", "emit a tone")
				$processID("par sync", "[the alarm is disarmed]")
				'fork
				split
					$reset_label_invariant("[R3_x_resp]", "R3_x_resp<=300", "start time period within 0 to 300")
					switch( ALT )
					case ( )
						$guard_label("true", "the alarm is disarmed")
						$reset_invariant("[clock]", "[clock<=0, R3_x_resp<=300]")
						switch( ALT )
						case ( )
							$guard_label("clock==0", "turn off the tone")
							$callProcess("Proc_R1")
							detach
						endswitch
					case ( )
						$guard_label("R3_x_resp==300", "deadline at 300")
						$reset_invariant("[clock]", "[clock<=0, R3_x_resp<=300]")
						switch( ALT )
						case ( )
							$guard_label("clock==0", "turn off the tone")
							$nilProcess
							detach
						endswitch
					endswitch
				'fork again
				split again
					$reset_label_invariant("[R7_x_resp]", "R7_x_resp<=60", "start time period within 0 to 60")
					switch( ALT )
					case ( )
						$guard_label("true", "the alarm is disarmed")
						$nilProcess
						detach
					case ( )
						$guard_label("R7_x_resp==60", "deadline at 60")
						$reset_invariant("[clock]", "[clock<=0, R7_x_resp<=60]")
						switch( ALT )
						case ( )
							$guard_label("clock==0", "alert the emergency center")
							$reset_label_invariant("[R7_x_resp]", "R7_x_resp<=60", "start time period within 0 to 60")
							switch( ALT )
							case ( )
								$guard_label("true", "the alarm is disarmed")
								$nilProcess
								detach
							case ( )
								$guard_label("R7_x_resp==60", "deadline at 60")
								$reset_invariant("[clock]", "[clock<=0, R7_x_resp<=60]")
								switch( ALT )
								case ( )
									$guard_label("clock==0", "alert the emergency center")
									$callProcess("PostProc_R9")
									detach
								endswitch
							endswitch
						endswitch
					endswitch
				'end merge
				'endfork
				end split
			endswitch
		endswitch
	endswitch
endswitch
detach

$defineProcessDesc("PostProc_R9", "Proc_R7")
$reset_label_invariant("[R7_x_resp]", "R7_x_resp<=60", "start time period within 0 to 60")
switch( ALT )
case ( )
	$guard_label("true", "the alarm is disarmed")
	$nilProcess
	detach
case ( )
	$guard_label("R7_x_resp==60", "deadline at 60")
	$reset_invariant("[clock]", "[clock<=0, R7_x_resp<=60]")
	switch( ALT )
	case ( )
		$guard_label("clock==0", "alert the emergency center")
		$callProcess("PostProc_R9")
		detach
	endswitch
endswitch
detach

@enduml
